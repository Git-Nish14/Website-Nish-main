{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Documents/GitHub/Website-Nish-main/web/src/lib/sanity_query.ts"],"sourcesContent":["// lib/query_sanity.ts\r\nimport { createClient } from 'next-sanity';\r\n\r\nconst client = createClient({\r\n  projectId: '69b6l5ot',       // Your Sanity project ID\r\n  dataset: 'production',       // Your dataset name\r\n  apiVersion: '2023-01-01',     // Use a specific API version\r\n  useCdn: false,               // Set to false for fresh data\r\n});\r\n\r\nexport async function getBlogs() {\r\n  const query = `*[_type == \"blog\"]{\r\n    _id,\r\n    title,\r\n    slug,\r\n    mainImage {\r\n      asset->{\r\n        url\r\n      }\r\n    },\r\n    publishedAt,\r\n    excerpt,\r\n    body,\r\n    author->{\r\n      name,\r\n      image {\r\n        asset->{\r\n          url\r\n        }\r\n      }\r\n    },\r\n    categories[]->{\r\n      _id,\r\n      title\r\n    }\r\n  } | order(publishedAt desc)`;\r\n  const blogs = await client.fetch(query);\r\n  return blogs;\r\n}\r\n\r\nexport async function getCategories() {\r\n  const query = `*[_type == \"category\"]{\r\n    _id,\r\n    title,\r\n    description\r\n  }`;\r\n  const categories = await client.fetch(query);\r\n  return categories;\r\n}\r\n\r\nexport async function getBlogBySlug(slug: string) {\r\n  const query = `*[_type == \"blog\" && slug.current == $slug]{\r\n    _id,\r\n    title,\r\n    slug,\r\n    mainImage {\r\n      asset->{\r\n        url\r\n      }\r\n    },\r\n    publishedAt,\r\n    excerpt,\r\n    body,\r\n    author->{\r\n      name,\r\n      image {\r\n        asset->{\r\n          url\r\n        }\r\n      }\r\n    },\r\n    categories[]->{\r\n      _id,\r\n      title\r\n    }\r\n  }`;\r\n  const blog = await client.fetch(query, { slug });\r\n  return blog;\r\n}\r\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;;AACtB;;AAEA,MAAM,SAAS,CAAA,GAAA,8KAAA,CAAA,eAAY,AAAD,EAAE;IAC1B,WAAW;IACX,SAAS;IACT,YAAY;IACZ,QAAQ;AACV;AAEO,eAAe;IACpB,MAAM,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;6BAwBY,CAAC;IAC5B,MAAM,QAAQ,MAAM,OAAO,KAAK,CAAC;IACjC,OAAO;AACT;AAEO,eAAe;IACpB,MAAM,QAAQ,CAAC;;;;GAId,CAAC;IACF,MAAM,aAAa,MAAM,OAAO,KAAK,CAAC;IACtC,OAAO;AACT;AAEO,eAAe,cAAc,IAAY;IAC9C,MAAM,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;GAwBd,CAAC;IACF,MAAM,OAAO,MAAM,OAAO,KAAK,CAAC,OAAO;QAAE;IAAK;IAC9C,OAAO;AACT"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Documents/GitHub/Website-Nish-main/web/src/app/blog/BlogList.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/blog/BlogList.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/blog/BlogList.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Documents/GitHub/Website-Nish-main/web/src/app/blog/BlogList.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/blog/BlogList.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/blog/BlogList.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Documents/GitHub/Website-Nish-main/web/src/components/Navbar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/Navbar.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Navbar.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA"}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Documents/GitHub/Website-Nish-main/web/src/components/Navbar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/Navbar.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Navbar.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Documents/GitHub/Website-Nish-main/web/src/components/Footer.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/Footer.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Footer.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Documents/GitHub/Website-Nish-main/web/src/components/Footer.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/Footer.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Footer.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/patel/Documents/GitHub/Website-Nish-main/web/src/app/blog/page.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { getBlogs, getCategories } from \"../../lib/sanity_query\";\r\nimport BlogList from \"./BlogList\";\r\nimport Navbar from \"../../components/Navbar\";\r\nimport Footer from \"../../components/Footer\";\r\n\r\nexport default async function BlogPage() {\r\n  const blogs = await getBlogs();\r\n  const categories = await getCategories();\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <BlogList blogs={blogs} categories={categories} />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;;;;;;AAEe,eAAe;IAC5B,MAAM,QAAQ,MAAM,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD;IAC3B,MAAM,aAAa,MAAM,CAAA,GAAA,0HAAA,CAAA,gBAAa,AAAD;IAErC,qBACE,8OAAC;;0BACC,8OAAC,4HAAA,CAAA,UAAM;;;;;0BACP,8OAAC,+HAAA,CAAA,UAAQ;gBAAC,OAAO;gBAAO,YAAY;;;;;;0BACpC,8OAAC,4HAAA,CAAA,UAAM;;;;;;;;;;;AAGb"}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}