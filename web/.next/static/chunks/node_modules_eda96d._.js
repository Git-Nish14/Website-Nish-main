(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules_eda96d._.js", {

"[project]/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/**
 * @license React
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
"production" !== ("TURBOPACK compile-time value", "development") && function() {
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE$2 ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_CONTEXT_TYPE:
                return (type.displayName || "Context") + ".Provider";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        try {
            testStringCoercion(value);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        if (JSCompiler_inline_result) {
            JSCompiler_inline_result = console;
            var JSCompiler_temp_const = JSCompiler_inline_result.error;
            var JSCompiler_inline_result$jscomp$0 = "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            JSCompiler_temp_const.call(JSCompiler_inline_result, "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", JSCompiler_inline_result$jscomp$0);
            return testStringCoercion(value);
        }
    }
    function disabledLog() {}
    function disableLogs() {
        if (0 === disabledDepth) {
            prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd;
            var props = {
                configurable: !0,
                enumerable: !0,
                value: disabledLog,
                writable: !0
            };
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (0 === disabledDepth) {
            var props = {
                configurable: !0,
                enumerable: !0,
                writable: !0
            };
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        }
        0 > disabledDepth && console.error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    function describeBuiltInComponentFrame(name) {
        if (void 0 === prefix) try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
            suffix = -1 < x.stack.indexOf("\n    at") ? " (<anonymous>)" : -1 < x.stack.indexOf("@") ? "@unknown:0:0" : "";
        }
        return "\n" + prefix + name + suffix;
    }
    function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (void 0 !== frame) return frame;
        reentry = !0;
        frame = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher = null;
        previousDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = null;
        disableLogs();
        try {
            var RunInRootFrame = {
                DetermineComponentFrameRoot: function() {
                    try {
                        if (construct) {
                            var Fake = function() {
                                throw Error();
                            };
                            Object.defineProperty(Fake.prototype, "props", {
                                set: function() {
                                    throw Error();
                                }
                            });
                            if ("object" === typeof Reflect && Reflect.construct) {
                                try {
                                    Reflect.construct(Fake, []);
                                } catch (x) {
                                    var control = x;
                                }
                                Reflect.construct(fn, [], Fake);
                            } else {
                                try {
                                    Fake.call();
                                } catch (x$0) {
                                    control = x$0;
                                }
                                fn.call(Fake.prototype);
                            }
                        } else {
                            try {
                                throw Error();
                            } catch (x$1) {
                                control = x$1;
                            }
                            (Fake = fn()) && "function" === typeof Fake.catch && Fake.catch(function() {});
                        }
                    } catch (sample) {
                        if (sample && control && "string" === typeof sample.stack) return [
                            sample.stack,
                            control.stack
                        ];
                    }
                    return [
                        null,
                        null
                    ];
                }
            };
            RunInRootFrame.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";
            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, "name");
            namePropDescriptor && namePropDescriptor.configurable && Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, "name", {
                value: "DetermineComponentFrameRoot"
            });
            var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];
            if (sampleStack && controlStack) {
                var sampleLines = sampleStack.split("\n"), controlLines = controlStack.split("\n");
                for(_RunInRootFrame$Deter = namePropDescriptor = 0; namePropDescriptor < sampleLines.length && !sampleLines[namePropDescriptor].includes("DetermineComponentFrameRoot");)namePropDescriptor++;
                for(; _RunInRootFrame$Deter < controlLines.length && !controlLines[_RunInRootFrame$Deter].includes("DetermineComponentFrameRoot");)_RunInRootFrame$Deter++;
                if (namePropDescriptor === sampleLines.length || _RunInRootFrame$Deter === controlLines.length) for(namePropDescriptor = sampleLines.length - 1, _RunInRootFrame$Deter = controlLines.length - 1; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter && sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter];)_RunInRootFrame$Deter--;
                for(; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter; namePropDescriptor--, _RunInRootFrame$Deter--)if (sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                    if (1 !== namePropDescriptor || 1 !== _RunInRootFrame$Deter) {
                        do if (namePropDescriptor--, _RunInRootFrame$Deter--, 0 > _RunInRootFrame$Deter || sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                            var _frame = "\n" + sampleLines[namePropDescriptor].replace(" at new ", " at ");
                            fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName));
                            "function" === typeof fn && componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                        while (1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter)
                    }
                    break;
                }
            }
        } finally{
            reentry = !1, ReactSharedInternals.H = previousDispatcher, reenableLogs(), Error.prepareStackTrace = frame;
        }
        sampleLines = (sampleLines = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(sampleLines) : "";
        "function" === typeof fn && componentFrameCache.set(fn, sampleLines);
        return sampleLines;
    }
    function describeUnknownElementTypeFrameInDEV(type) {
        if (null == type) return "";
        if ("function" === typeof type) {
            var prototype = type.prototype;
            return describeNativeComponentFrame(type, !(!prototype || !prototype.isReactComponent));
        }
        if ("string" === typeof type) return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
        }
        if ("object" === typeof type) switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return type = describeNativeComponentFrame(type.render, !1), type;
            case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type);
            case REACT_LAZY_TYPE:
                prototype = type._payload;
                type = type._init;
                try {
                    return describeUnknownElementTypeFrameInDEV(type(prototype));
                } catch (x) {}
        }
        return "";
    }
    function getOwner() {
        var dispatcher = ReactSharedInternals.A;
        return null === dispatcher ? null : dispatcher.getOwner();
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return !1;
        }
        return void 0 !== config.key;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        function warnAboutAccessingKey() {
            specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, console.error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)", displayName));
        }
        warnAboutAccessingKey.isReactWarning = !0;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: !0
        });
    }
    function elementRefGetterWithDeprecationWarning() {
        var componentName = getComponentNameFromType(this.type);
        didWarnAboutElementRef[componentName] || (didWarnAboutElementRef[componentName] = !0, console.error("Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."));
        componentName = this.props.ref;
        return void 0 !== componentName ? componentName : null;
    }
    function ReactElement(type, key, self, source, owner, props) {
        self = props.ref;
        type = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type,
            key: key,
            props: props,
            _owner: owner
        };
        null !== (void 0 !== self ? self : null) ? Object.defineProperty(type, "ref", {
            enumerable: !1,
            get: elementRefGetterWithDeprecationWarning
        }) : Object.defineProperty(type, "ref", {
            enumerable: !1,
            value: null
        });
        type._store = {};
        Object.defineProperty(type._store, "validated", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: 0
        });
        Object.defineProperty(type, "_debugInfo", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: null
        });
        Object.freeze && (Object.freeze(type.props), Object.freeze(type));
        return type;
    }
    function jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self) {
        if ("string" === typeof type || "function" === typeof type || type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_OFFSCREEN_TYPE || "object" === typeof type && null !== type && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_CLIENT_REFERENCE$1 || void 0 !== type.getModuleId)) {
            var children = config.children;
            if (void 0 !== children) if (isStaticChildren) if (isArrayImpl(children)) {
                for(isStaticChildren = 0; isStaticChildren < children.length; isStaticChildren++)validateChildKeys(children[isStaticChildren], type);
                Object.freeze && Object.freeze(children);
            } else console.error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else validateChildKeys(children, type);
        } else {
            children = "";
            if (void 0 === type || "object" === typeof type && null !== type && 0 === Object.keys(type).length) children += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            null === type ? isStaticChildren = "null" : isArrayImpl(type) ? isStaticChildren = "array" : void 0 !== type && type.$$typeof === REACT_ELEMENT_TYPE ? (isStaticChildren = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />", children = " Did you accidentally export a JSX literal instead of a component?") : isStaticChildren = typeof type;
            console.error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", isStaticChildren, children);
        }
        if (hasOwnProperty.call(config, "key")) {
            children = getComponentNameFromType(type);
            var keys = Object.keys(config).filter(function(k) {
                return "key" !== k;
            });
            isStaticChildren = 0 < keys.length ? "{key: someKey, " + keys.join(": ..., ") + ": ...}" : "{key: someKey}";
            didWarnAboutKeySpread[children + isStaticChildren] || (keys = 0 < keys.length ? "{" + keys.join(": ..., ") + ": ...}" : "{}", console.error('A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />', isStaticChildren, children, keys, children), didWarnAboutKeySpread[children + isStaticChildren] = !0);
        }
        children = null;
        void 0 !== maybeKey && (checkKeyStringCoercion(maybeKey), children = "" + maybeKey);
        hasValidKey(config) && (checkKeyStringCoercion(config.key), children = "" + config.key);
        if ("key" in config) {
            maybeKey = {};
            for(var propName in config)"key" !== propName && (maybeKey[propName] = config[propName]);
        } else maybeKey = config;
        children && defineKeyPropWarningGetter(maybeKey, "function" === typeof type ? type.displayName || type.name || "Unknown" : type);
        return ReactElement(type, children, self, source, getOwner(), maybeKey);
    }
    function validateChildKeys(node, parentType) {
        if ("object" === typeof node && node && node.$$typeof !== REACT_CLIENT_REFERENCE) {
            if (isArrayImpl(node)) for(var i = 0; i < node.length; i++){
                var child = node[i];
                isValidElement(child) && validateExplicitKey(child, parentType);
            }
            else if (isValidElement(node)) node._store && (node._store.validated = 1);
            else if (null === node || "object" !== typeof node ? i = null : (i = MAYBE_ITERATOR_SYMBOL && node[MAYBE_ITERATOR_SYMBOL] || node["@@iterator"], i = "function" === typeof i ? i : null), "function" === typeof i && i !== node.entries && (i = i.call(node), i !== node)) for(; !(node = i.next()).done;)isValidElement(node.value) && validateExplicitKey(node.value, parentType);
        }
    }
    function isValidElement(object) {
        return "object" === typeof object && null !== object && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function validateExplicitKey(element, parentType) {
        if (element._store && !element._store.validated && null == element.key && (element._store.validated = 1, parentType = getCurrentComponentErrorInfo(parentType), !ownerHasKeyUseWarning[parentType])) {
            ownerHasKeyUseWarning[parentType] = !0;
            var childOwner = "";
            element && null != element._owner && element._owner !== getOwner() && (childOwner = null, "number" === typeof element._owner.tag ? childOwner = getComponentNameFromType(element._owner.type) : "string" === typeof element._owner.name && (childOwner = element._owner.name), childOwner = " It was passed a child from " + childOwner + ".");
            var prevGetCurrentStack = ReactSharedInternals.getCurrentStack;
            ReactSharedInternals.getCurrentStack = function() {
                var stack = describeUnknownElementTypeFrameInDEV(element.type);
                prevGetCurrentStack && (stack += prevGetCurrentStack() || "");
                return stack;
            };
            console.error('Each child in a list should have a unique "key" prop.%s%s See https://react.dev/link/warning-keys for more information.', parentType, childOwner);
            ReactSharedInternals.getCurrentStack = prevGetCurrentStack;
        }
    }
    function getCurrentComponentErrorInfo(parentType) {
        var info = "", owner = getOwner();
        owner && (owner = getComponentNameFromType(owner.type)) && (info = "\n\nCheck the render method of `" + owner + "`.");
        info || (parentType = getComponentNameFromType(parentType)) && (info = "\n\nCheck the top-level render call using <" + parentType + ">.");
        return info;
    }
    var React = __turbopack_require__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"), REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, REACT_CLIENT_REFERENCE$2 = Symbol.for("react.client.reference"), ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, hasOwnProperty = Object.prototype.hasOwnProperty, assign = Object.assign, REACT_CLIENT_REFERENCE$1 = Symbol.for("react.client.reference"), isArrayImpl = Array.isArray, disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
    disabledLog.__reactDisabledLog = !0;
    var prefix, suffix, reentry = !1;
    var componentFrameCache = new ("function" === typeof WeakMap ? WeakMap : Map)();
    var REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), specialPropKeyWarningShown;
    var didWarnAboutElementRef = {};
    var didWarnAboutKeySpread = {}, ownerHasKeyUseWarning = {};
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.jsxDEV = function(type, config, maybeKey, isStaticChildren, source, self) {
        return jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self);
    };
}();
}}),
"[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use strict';
if ("TURBOPACK compile-time falsy", 0) {
    "TURBOPACK unreachable";
} else {
    module.exports = __turbopack_require__("[project]/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js [app-client] (ecmascript)");
}
}}),
"[project]/node_modules/next/dist/shared/lib/image-blur-svg.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/**
 * A shared function, used on both client and server, to generate a SVG blur placeholder.
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getImageBlurSvg", {
    enumerable: true,
    get: function() {
        return getImageBlurSvg;
    }
});
function getImageBlurSvg(param) {
    let { widthInt, heightInt, blurWidth, blurHeight, blurDataURL, objectFit } = param;
    const std = 20;
    const svgWidth = blurWidth ? blurWidth * 40 : widthInt;
    const svgHeight = blurHeight ? blurHeight * 40 : heightInt;
    const viewBox = svgWidth && svgHeight ? "viewBox='0 0 " + svgWidth + " " + svgHeight + "'" : '';
    const preserveAspectRatio = viewBox ? 'none' : objectFit === 'contain' ? 'xMidYMid' : objectFit === 'cover' ? 'xMidYMid slice' : 'none';
    return "%3Csvg xmlns='http://www.w3.org/2000/svg' " + viewBox + "%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='" + std + "'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='" + std + "'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='" + preserveAspectRatio + "' style='filter: url(%23b);' href='" + blurDataURL + "'/%3E%3C/svg%3E";
} //# sourceMappingURL=image-blur-svg.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/image-config.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    VALID_LOADERS: null,
    imageConfigDefault: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    VALID_LOADERS: function() {
        return VALID_LOADERS;
    },
    imageConfigDefault: function() {
        return imageConfigDefault;
    }
});
const VALID_LOADERS = [
    'default',
    'imgix',
    'cloudinary',
    'akamai',
    'custom'
];
const imageConfigDefault = {
    deviceSizes: [
        640,
        750,
        828,
        1080,
        1200,
        1920,
        2048,
        3840
    ],
    imageSizes: [
        16,
        32,
        48,
        64,
        96,
        128,
        256,
        384
    ],
    path: '/_next/image',
    loader: 'default',
    loaderFile: '',
    domains: [],
    disableStaticImages: false,
    minimumCacheTTL: 60,
    formats: [
        'image/webp'
    ],
    dangerouslyAllowSVG: false,
    contentSecurityPolicy: "script-src 'none'; frame-src 'none'; sandbox;",
    contentDispositionType: 'attachment',
    localPatterns: undefined,
    remotePatterns: [],
    qualities: undefined,
    unoptimized: false
}; //# sourceMappingURL=image-config.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/get-img-props.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getImgProps", {
    enumerable: true,
    get: function() {
        return getImgProps;
    }
});
const _warnonce = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/utils/warn-once.js [app-client] (ecmascript)");
const _imageblursvg = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/image-blur-svg.js [app-client] (ecmascript)");
const _imageconfig = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/image-config.js [app-client] (ecmascript)");
const VALID_LOADING_VALUES = [
    'lazy',
    'eager',
    undefined
];
function isStaticRequire(src) {
    return src.default !== undefined;
}
function isStaticImageData(src) {
    return src.src !== undefined;
}
function isStaticImport(src) {
    return !!src && typeof src === 'object' && (isStaticRequire(src) || isStaticImageData(src));
}
const allImgs = new Map();
let perfObserver;
function getInt(x) {
    if (typeof x === 'undefined') {
        return x;
    }
    if (typeof x === 'number') {
        return Number.isFinite(x) ? x : NaN;
    }
    if (typeof x === 'string' && /^[0-9]+$/.test(x)) {
        return parseInt(x, 10);
    }
    return NaN;
}
function getWidths(param, width, sizes) {
    let { deviceSizes, allSizes } = param;
    if (sizes) {
        // Find all the "vw" percent sizes used in the sizes prop
        const viewportWidthRe = /(^|\s)(1?\d?\d)vw/g;
        const percentSizes = [];
        for(let match; match = viewportWidthRe.exec(sizes); match){
            percentSizes.push(parseInt(match[2]));
        }
        if (percentSizes.length) {
            const smallestRatio = Math.min(...percentSizes) * 0.01;
            return {
                widths: allSizes.filter((s)=>s >= deviceSizes[0] * smallestRatio),
                kind: 'w'
            };
        }
        return {
            widths: allSizes,
            kind: 'w'
        };
    }
    if (typeof width !== 'number') {
        return {
            widths: deviceSizes,
            kind: 'w'
        };
    }
    const widths = [
        ...new Set(// > are actually 3x in the green color, but only 1.5x in the red and
        // > blue colors. Showing a 3x resolution image in the app vs a 2x
        // > resolution image will be visually the same, though the 3x image
        // > takes significantly more data. Even true 3x resolution screens are
        // > wasteful as the human eye cannot see that level of detail without
        // > something like a magnifying glass.
        // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html
        [
            width,
            width * 2 /*, width * 3*/ 
        ].map((w)=>allSizes.find((p)=>p >= w) || allSizes[allSizes.length - 1]))
    ];
    return {
        widths,
        kind: 'x'
    };
}
function generateImgAttrs(param) {
    let { config, src, unoptimized, width, quality, sizes, loader } = param;
    if (unoptimized) {
        return {
            src,
            srcSet: undefined,
            sizes: undefined
        };
    }
    const { widths, kind } = getWidths(config, width, sizes);
    const last = widths.length - 1;
    return {
        sizes: !sizes && kind === 'w' ? '100vw' : sizes,
        srcSet: widths.map((w, i)=>loader({
                config,
                src,
                quality,
                width: w
            }) + " " + (kind === 'w' ? w : i + 1) + kind).join(', '),
        // It's intended to keep `src` the last attribute because React updates
        // attributes in order. If we keep `src` the first one, Safari will
        // immediately start to fetch `src`, before `sizes` and `srcSet` are even
        // updated by React. That causes multiple unnecessary requests if `srcSet`
        // and `sizes` are defined.
        // This bug cannot be reproduced in Chrome or Firefox.
        src: loader({
            config,
            src,
            quality,
            width: widths[last]
        })
    };
}
function getImgProps(param, _state) {
    let { src, sizes, unoptimized = false, priority = false, loading, className, quality, width, height, fill = false, style, overrideSrc, onLoad, onLoadingComplete, placeholder = 'empty', blurDataURL, fetchPriority, decoding = 'async', layout, objectFit, objectPosition, lazyBoundary, lazyRoot, ...rest } = param;
    const { imgConf, showAltText, blurComplete, defaultLoader } = _state;
    let config;
    let c = imgConf || _imageconfig.imageConfigDefault;
    if ('allSizes' in c) {
        config = c;
    } else {
        var _c_qualities;
        const allSizes = [
            ...c.deviceSizes,
            ...c.imageSizes
        ].sort((a, b)=>a - b);
        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);
        const qualities = (_c_qualities = c.qualities) == null ? void 0 : _c_qualities.sort((a, b)=>a - b);
        config = {
            ...c,
            allSizes,
            deviceSizes,
            qualities
        };
    }
    if (typeof defaultLoader === 'undefined') {
        throw new Error('images.loaderFile detected but the file is missing default export.\nRead more: https://nextjs.org/docs/messages/invalid-images-config');
    }
    let loader = rest.loader || defaultLoader;
    // Remove property so it's not spread on <img> element
    delete rest.loader;
    delete rest.srcSet;
    // This special value indicates that the user
    // didn't define a "loader" prop or "loader" config.
    const isDefaultLoader = '__next_img_default' in loader;
    if (isDefaultLoader) {
        if (config.loader === 'custom') {
            throw new Error('Image with src "' + src + '" is missing "loader" prop.' + "\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader");
        }
    } else {
        // The user defined a "loader" prop or config.
        // Since the config object is internal only, we
        // must not pass it to the user-defined "loader".
        const customImageLoader = loader;
        loader = (obj)=>{
            const { config: _, ...opts } = obj;
            return customImageLoader(opts);
        };
    }
    if (layout) {
        if (layout === 'fill') {
            fill = true;
        }
        const layoutToStyle = {
            intrinsic: {
                maxWidth: '100%',
                height: 'auto'
            },
            responsive: {
                width: '100%',
                height: 'auto'
            }
        };
        const layoutToSizes = {
            responsive: '100vw',
            fill: '100vw'
        };
        const layoutStyle = layoutToStyle[layout];
        if (layoutStyle) {
            style = {
                ...style,
                ...layoutStyle
            };
        }
        const layoutSizes = layoutToSizes[layout];
        if (layoutSizes && !sizes) {
            sizes = layoutSizes;
        }
    }
    let staticSrc = '';
    let widthInt = getInt(width);
    let heightInt = getInt(height);
    let blurWidth;
    let blurHeight;
    if (isStaticImport(src)) {
        const staticImageData = isStaticRequire(src) ? src.default : src;
        if (!staticImageData.src) {
            throw new Error("An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received " + JSON.stringify(staticImageData));
        }
        if (!staticImageData.height || !staticImageData.width) {
            throw new Error("An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received " + JSON.stringify(staticImageData));
        }
        blurWidth = staticImageData.blurWidth;
        blurHeight = staticImageData.blurHeight;
        blurDataURL = blurDataURL || staticImageData.blurDataURL;
        staticSrc = staticImageData.src;
        if (!fill) {
            if (!widthInt && !heightInt) {
                widthInt = staticImageData.width;
                heightInt = staticImageData.height;
            } else if (widthInt && !heightInt) {
                const ratio = widthInt / staticImageData.width;
                heightInt = Math.round(staticImageData.height * ratio);
            } else if (!widthInt && heightInt) {
                const ratio = heightInt / staticImageData.height;
                widthInt = Math.round(staticImageData.width * ratio);
            }
        }
    }
    src = typeof src === 'string' ? src : staticSrc;
    let isLazy = !priority && (loading === 'lazy' || typeof loading === 'undefined');
    if (!src || src.startsWith('data:') || src.startsWith('blob:')) {
        // https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/Data_URIs
        unoptimized = true;
        isLazy = false;
    }
    if (config.unoptimized) {
        unoptimized = true;
    }
    if (isDefaultLoader && !config.dangerouslyAllowSVG && src.split('?', 1)[0].endsWith('.svg')) {
        // Special case to make svg serve as-is to avoid proxying
        // through the built-in Image Optimization API.
        unoptimized = true;
    }
    const qualityInt = getInt(quality);
    if ("TURBOPACK compile-time truthy", 1) {
        if (config.output === 'export' && isDefaultLoader && !unoptimized) {
            throw new Error("Image Optimization using the default loader is not compatible with `{ output: 'export' }`.\n  Possible solutions:\n    - Remove `{ output: 'export' }` and run \"next start\" to run server mode including the Image Optimization API.\n    - Configure `{ images: { unoptimized: true } }` in `next.config.js` to disable the Image Optimization API.\n  Read more: https://nextjs.org/docs/messages/export-image-api");
        }
        if (!src) {
            // React doesn't show the stack trace and there's
            // no `src` to help identify which image, so we
            // instead console.error(ref) during mount.
            unoptimized = true;
        } else {
            if (fill) {
                if (width) {
                    throw new Error('Image with src "' + src + '" has both "width" and "fill" properties. Only one should be used.');
                }
                if (height) {
                    throw new Error('Image with src "' + src + '" has both "height" and "fill" properties. Only one should be used.');
                }
                if ((style == null ? void 0 : style.position) && style.position !== 'absolute') {
                    throw new Error('Image with src "' + src + '" has both "fill" and "style.position" properties. Images with "fill" always use position absolute - it cannot be modified.');
                }
                if ((style == null ? void 0 : style.width) && style.width !== '100%') {
                    throw new Error('Image with src "' + src + '" has both "fill" and "style.width" properties. Images with "fill" always use width 100% - it cannot be modified.');
                }
                if ((style == null ? void 0 : style.height) && style.height !== '100%') {
                    throw new Error('Image with src "' + src + '" has both "fill" and "style.height" properties. Images with "fill" always use height 100% - it cannot be modified.');
                }
            } else {
                if (typeof widthInt === 'undefined') {
                    throw new Error('Image with src "' + src + '" is missing required "width" property.');
                } else if (isNaN(widthInt)) {
                    throw new Error('Image with src "' + src + '" has invalid "width" property. Expected a numeric value in pixels but received "' + width + '".');
                }
                if (typeof heightInt === 'undefined') {
                    throw new Error('Image with src "' + src + '" is missing required "height" property.');
                } else if (isNaN(heightInt)) {
                    throw new Error('Image with src "' + src + '" has invalid "height" property. Expected a numeric value in pixels but received "' + height + '".');
                }
                // eslint-disable-next-line no-control-regex
                if (/^[\x00-\x20]/.test(src)) {
                    throw new Error('Image with src "' + src + '" cannot start with a space or control character. Use src.trimStart() to remove it or encodeURIComponent(src) to keep it.');
                }
                // eslint-disable-next-line no-control-regex
                if (/[\x00-\x20]$/.test(src)) {
                    throw new Error('Image with src "' + src + '" cannot end with a space or control character. Use src.trimEnd() to remove it or encodeURIComponent(src) to keep it.');
                }
            }
        }
        if (!VALID_LOADING_VALUES.includes(loading)) {
            throw new Error('Image with src "' + src + '" has invalid "loading" property. Provided "' + loading + '" should be one of ' + VALID_LOADING_VALUES.map(String).join(',') + ".");
        }
        if (priority && loading === 'lazy') {
            throw new Error('Image with src "' + src + '" has both "priority" and "loading=\'lazy\'" properties. Only one should be used.');
        }
        if (placeholder !== 'empty' && placeholder !== 'blur' && !placeholder.startsWith('data:image/')) {
            throw new Error('Image with src "' + src + '" has invalid "placeholder" property "' + placeholder + '".');
        }
        if (placeholder !== 'empty') {
            if (widthInt && heightInt && widthInt * heightInt < 1600) {
                (0, _warnonce.warnOnce)('Image with src "' + src + '" is smaller than 40x40. Consider removing the "placeholder" property to improve performance.');
            }
        }
        if (placeholder === 'blur' && !blurDataURL) {
            const VALID_BLUR_EXT = [
                'jpeg',
                'png',
                'webp',
                'avif'
            ] // should match next-image-loader
            ;
            throw new Error('Image with src "' + src + '" has "placeholder=\'blur\'" property but is missing the "blurDataURL" property.\n        Possible solutions:\n          - Add a "blurDataURL" property, the contents should be a small Data URL to represent the image\n          - Change the "src" property to a static import with one of the supported file types: ' + VALID_BLUR_EXT.join(',') + ' (animated images not supported)\n          - Remove the "placeholder" property, effectively no blur effect\n        Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url');
        }
        if ('ref' in rest) {
            (0, _warnonce.warnOnce)('Image with src "' + src + '" is using unsupported "ref" property. Consider using the "onLoad" property instead.');
        }
        if (!unoptimized && !isDefaultLoader) {
            const urlStr = loader({
                config,
                src,
                width: widthInt || 400,
                quality: qualityInt || 75
            });
            let url;
            try {
                url = new URL(urlStr);
            } catch (err) {}
            if (urlStr === src || url && url.pathname === src && !url.search) {
                (0, _warnonce.warnOnce)('Image with src "' + src + '" has a "loader" property that does not implement width. Please implement it or use the "unoptimized" property instead.' + "\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width");
            }
        }
        if (onLoadingComplete) {
            (0, _warnonce.warnOnce)('Image with src "' + src + '" is using deprecated "onLoadingComplete" property. Please use the "onLoad" property instead.');
        }
        for (const [legacyKey, legacyValue] of Object.entries({
            layout,
            objectFit,
            objectPosition,
            lazyBoundary,
            lazyRoot
        })){
            if (legacyValue) {
                (0, _warnonce.warnOnce)('Image with src "' + src + '" has legacy prop "' + legacyKey + '". Did you forget to run the codemod?' + "\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13");
            }
        }
        if (typeof window !== 'undefined' && !perfObserver && window.PerformanceObserver) {
            perfObserver = new PerformanceObserver((entryList)=>{
                for (const entry of entryList.getEntries()){
                    var _entry_element;
                    // @ts-ignore - missing "LargestContentfulPaint" class with "element" prop
                    const imgSrc = (entry == null ? void 0 : (_entry_element = entry.element) == null ? void 0 : _entry_element.src) || '';
                    const lcpImage = allImgs.get(imgSrc);
                    if (lcpImage && !lcpImage.priority && lcpImage.placeholder === 'empty' && !lcpImage.src.startsWith('data:') && !lcpImage.src.startsWith('blob:')) {
                        // https://web.dev/lcp/#measure-lcp-in-javascript
                        (0, _warnonce.warnOnce)('Image with src "' + lcpImage.src + '" was detected as the Largest Contentful Paint (LCP). Please add the "priority" property if this image is above the fold.' + "\nRead more: https://nextjs.org/docs/api-reference/next/image#priority");
                    }
                }
            });
            try {
                perfObserver.observe({
                    type: 'largest-contentful-paint',
                    buffered: true
                });
            } catch (err) {
                // Log error but don't crash the app
                console.error(err);
            }
        }
    }
    const imgStyle = Object.assign(fill ? {
        position: 'absolute',
        height: '100%',
        width: '100%',
        left: 0,
        top: 0,
        right: 0,
        bottom: 0,
        objectFit,
        objectPosition
    } : {}, showAltText ? {} : {
        color: 'transparent'
    }, style);
    const backgroundImage = !blurComplete && placeholder !== 'empty' ? placeholder === 'blur' ? 'url("data:image/svg+xml;charset=utf-8,' + (0, _imageblursvg.getImageBlurSvg)({
        widthInt,
        heightInt,
        blurWidth,
        blurHeight,
        blurDataURL: blurDataURL || '',
        objectFit: imgStyle.objectFit
    }) + '")' : 'url("' + placeholder + '")' // assume `data:image/`
     : null;
    let placeholderStyle = backgroundImage ? {
        backgroundSize: imgStyle.objectFit || 'cover',
        backgroundPosition: imgStyle.objectPosition || '50% 50%',
        backgroundRepeat: 'no-repeat',
        backgroundImage
    } : {};
    if ("TURBOPACK compile-time truthy", 1) {
        if (placeholderStyle.backgroundImage && placeholder === 'blur' && (blurDataURL == null ? void 0 : blurDataURL.startsWith('/'))) {
            // During `next dev`, we don't want to generate blur placeholders with webpack
            // because it can delay starting the dev server. Instead, `next-image-loader.js`
            // will inline a special url to lazily generate the blur placeholder at request time.
            placeholderStyle.backgroundImage = 'url("' + blurDataURL + '")';
        }
    }
    const imgAttributes = generateImgAttrs({
        config,
        src,
        unoptimized,
        width: widthInt,
        quality: qualityInt,
        sizes,
        loader
    });
    if ("TURBOPACK compile-time truthy", 1) {
        if (typeof window !== 'undefined') {
            let fullUrl;
            try {
                fullUrl = new URL(imgAttributes.src);
            } catch (e) {
                fullUrl = new URL(imgAttributes.src, window.location.href);
            }
            allImgs.set(fullUrl.href, {
                src,
                priority,
                placeholder
            });
        }
    }
    const props = {
        ...rest,
        loading: isLazy ? 'lazy' : loading,
        fetchPriority,
        width: widthInt,
        height: heightInt,
        decoding,
        className,
        style: {
            ...imgStyle,
            ...placeholderStyle
        },
        sizes: imgAttributes.sizes,
        srcSet: imgAttributes.srcSet,
        src: overrideSrc || imgAttributes.src
    };
    const meta = {
        unoptimized,
        priority,
        placeholder,
        fill
    };
    return {
        props,
        meta
    };
} //# sourceMappingURL=get-img-props.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/side-effect.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return SideEffect;
    }
});
const _react = __turbopack_require__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
const isServer = typeof window === 'undefined';
const useClientOnlyLayoutEffect = isServer ? ()=>{} : _react.useLayoutEffect;
const useClientOnlyEffect = isServer ? ()=>{} : _react.useEffect;
function SideEffect(props) {
    const { headManager, reduceComponentsToState } = props;
    function emitChange() {
        if (headManager && headManager.mountedInstances) {
            const headElements = _react.Children.toArray(Array.from(headManager.mountedInstances).filter(Boolean));
            headManager.updateHead(reduceComponentsToState(headElements, props));
        }
    }
    if (isServer) {
        var _headManager_mountedInstances;
        headManager == null ? void 0 : (_headManager_mountedInstances = headManager.mountedInstances) == null ? void 0 : _headManager_mountedInstances.add(props.children);
        emitChange();
    }
    useClientOnlyLayoutEffect({
        "SideEffect.useClientOnlyLayoutEffect": ()=>{
            var _headManager_mountedInstances;
            headManager == null ? void 0 : (_headManager_mountedInstances = headManager.mountedInstances) == null ? void 0 : _headManager_mountedInstances.add(props.children);
            return ({
                "SideEffect.useClientOnlyLayoutEffect": ()=>{
                    var _headManager_mountedInstances;
                    headManager == null ? void 0 : (_headManager_mountedInstances = headManager.mountedInstances) == null ? void 0 : _headManager_mountedInstances.delete(props.children);
                }
            })["SideEffect.useClientOnlyLayoutEffect"];
        }
    }["SideEffect.useClientOnlyLayoutEffect"]);
    // We need to call `updateHead` method whenever the `SideEffect` is trigger in all
    // life-cycles: mount, update, unmount. However, if there are multiple `SideEffect`s
    // being rendered, we only trigger the method from the last one.
    // This is ensured by keeping the last unflushed `updateHead` in the `_pendingUpdate`
    // singleton in the layout effect pass, and actually trigger it in the effect pass.
    useClientOnlyLayoutEffect({
        "SideEffect.useClientOnlyLayoutEffect": ()=>{
            if (headManager) {
                headManager._pendingUpdate = emitChange;
            }
            return ({
                "SideEffect.useClientOnlyLayoutEffect": ()=>{
                    if (headManager) {
                        headManager._pendingUpdate = emitChange;
                    }
                }
            })["SideEffect.useClientOnlyLayoutEffect"];
        }
    }["SideEffect.useClientOnlyLayoutEffect"]);
    useClientOnlyEffect({
        "SideEffect.useClientOnlyEffect": ()=>{
            if (headManager && headManager._pendingUpdate) {
                headManager._pendingUpdate();
                headManager._pendingUpdate = null;
            }
            return ({
                "SideEffect.useClientOnlyEffect": ()=>{
                    if (headManager && headManager._pendingUpdate) {
                        headManager._pendingUpdate();
                        headManager._pendingUpdate = null;
                    }
                }
            })["SideEffect.useClientOnlyEffect"];
        }
    }["SideEffect.useClientOnlyEffect"]);
    return null;
} //# sourceMappingURL=side-effect.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/amp-context.shared-runtime.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "AmpStateContext", {
    enumerable: true,
    get: function() {
        return AmpStateContext;
    }
});
const _interop_require_default = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const AmpStateContext = _react.default.createContext({});
if ("TURBOPACK compile-time truthy", 1) {
    AmpStateContext.displayName = 'AmpStateContext';
} //# sourceMappingURL=amp-context.shared-runtime.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/amp-mode.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "isInAmpMode", {
    enumerable: true,
    get: function() {
        return isInAmpMode;
    }
});
function isInAmpMode(param) {
    let { ampFirst = false, hybrid = false, hasQuery = false } = param === void 0 ? {} : param;
    return ampFirst || hybrid && hasQuery;
} //# sourceMappingURL=amp-mode.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/head.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    default: null,
    defaultHead: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    default: function() {
        return _default;
    },
    defaultHead: function() {
        return defaultHead;
    }
});
const _interop_require_default = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _interop_require_wildcard = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs [app-client] (ecmascript)");
const _jsxruntime = __turbopack_require__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_wildcard._(__turbopack_require__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const _sideeffect = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/shared/lib/side-effect.js [app-client] (ecmascript)"));
const _ampcontextsharedruntime = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/amp-context.shared-runtime.js [app-client] (ecmascript)");
const _headmanagercontextsharedruntime = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/head-manager-context.shared-runtime.js [app-client] (ecmascript)");
const _ampmode = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/amp-mode.js [app-client] (ecmascript)");
const _warnonce = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/utils/warn-once.js [app-client] (ecmascript)");
function defaultHead(inAmpMode) {
    if (inAmpMode === void 0) inAmpMode = false;
    const head = [
        /*#__PURE__*/ (0, _jsxruntime.jsx)("meta", {
            charSet: "utf-8"
        }, "charset")
    ];
    if (!inAmpMode) {
        head.push(/*#__PURE__*/ (0, _jsxruntime.jsx)("meta", {
            name: "viewport",
            content: "width=device-width"
        }, "viewport"));
    }
    return head;
}
function onlyReactElement(list, child) {
    // React children can be "string" or "number" in this case we ignore them for backwards compat
    if (typeof child === 'string' || typeof child === 'number') {
        return list;
    }
    // Adds support for React.Fragment
    if (child.type === _react.default.Fragment) {
        return list.concat(_react.default.Children.toArray(child.props.children).reduce((fragmentList, fragmentChild)=>{
            if (typeof fragmentChild === 'string' || typeof fragmentChild === 'number') {
                return fragmentList;
            }
            return fragmentList.concat(fragmentChild);
        }, []));
    }
    return list.concat(child);
}
const METATYPES = [
    'name',
    'httpEquiv',
    'charSet',
    'itemProp'
];
/*
 returns a function for filtering head child elements
 which shouldn't be duplicated, like <title/>
 Also adds support for deduplicated `key` properties
*/ function unique() {
    const keys = new Set();
    const tags = new Set();
    const metaTypes = new Set();
    const metaCategories = {};
    return (h)=>{
        let isUnique = true;
        let hasKey = false;
        if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {
            hasKey = true;
            const key = h.key.slice(h.key.indexOf('$') + 1);
            if (keys.has(key)) {
                isUnique = false;
            } else {
                keys.add(key);
            }
        }
        // eslint-disable-next-line default-case
        switch(h.type){
            case 'title':
            case 'base':
                if (tags.has(h.type)) {
                    isUnique = false;
                } else {
                    tags.add(h.type);
                }
                break;
            case 'meta':
                for(let i = 0, len = METATYPES.length; i < len; i++){
                    const metatype = METATYPES[i];
                    if (!h.props.hasOwnProperty(metatype)) continue;
                    if (metatype === 'charSet') {
                        if (metaTypes.has(metatype)) {
                            isUnique = false;
                        } else {
                            metaTypes.add(metatype);
                        }
                    } else {
                        const category = h.props[metatype];
                        const categories = metaCategories[metatype] || new Set();
                        if ((metatype !== 'name' || !hasKey) && categories.has(category)) {
                            isUnique = false;
                        } else {
                            categories.add(category);
                            metaCategories[metatype] = categories;
                        }
                    }
                }
                break;
        }
        return isUnique;
    };
}
/**
 *
 * @param headChildrenElements List of children of <Head>
 */ function reduceComponents(headChildrenElements, props) {
    const { inAmpMode } = props;
    return headChildrenElements.reduce(onlyReactElement, []).reverse().concat(defaultHead(inAmpMode).reverse()).filter(unique()).reverse().map((c, i)=>{
        const key = c.key || i;
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        }
        if ("TURBOPACK compile-time truthy", 1) {
            // omit JSON-LD structured data snippets from the warning
            if (c.type === 'script' && c.props['type'] !== 'application/ld+json') {
                const srcMessage = c.props['src'] ? '<script> tag with src="' + c.props['src'] + '"' : "inline <script>";
                (0, _warnonce.warnOnce)("Do not add <script> tags using next/head (see " + srcMessage + "). Use next/script instead. \nSee more info here: https://nextjs.org/docs/messages/no-script-tags-in-head-component");
            } else if (c.type === 'link' && c.props['rel'] === 'stylesheet') {
                (0, _warnonce.warnOnce)('Do not add stylesheets using next/head (see <link rel="stylesheet"> tag with href="' + c.props['href'] + '"). Use Document instead. \nSee more info here: https://nextjs.org/docs/messages/no-stylesheets-in-head-component');
            }
        }
        return /*#__PURE__*/ _react.default.cloneElement(c, {
            key
        });
    });
}
/**
 * This component injects elements to `<head>` of your page.
 * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.
 */ function Head(param) {
    let { children } = param;
    const ampState = (0, _react.useContext)(_ampcontextsharedruntime.AmpStateContext);
    const headManager = (0, _react.useContext)(_headmanagercontextsharedruntime.HeadManagerContext);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_sideeffect.default, {
        reduceComponentsToState: reduceComponents,
        headManager: headManager,
        inAmpMode: (0, _ampmode.isInAmpMode)(ampState),
        children: children
    });
}
const _default = Head;
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=head.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/image-config-context.shared-runtime.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ImageConfigContext", {
    enumerable: true,
    get: function() {
        return ImageConfigContext;
    }
});
const _interop_require_default = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const _imageconfig = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/image-config.js [app-client] (ecmascript)");
const ImageConfigContext = _react.default.createContext(_imageconfig.imageConfigDefault);
if ("TURBOPACK compile-time truthy", 1) {
    ImageConfigContext.displayName = 'ImageConfigContext';
} //# sourceMappingURL=image-config-context.shared-runtime.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router-context.shared-runtime.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "RouterContext", {
    enumerable: true,
    get: function() {
        return RouterContext;
    }
});
const _interop_require_default = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const RouterContext = _react.default.createContext(null);
if ("TURBOPACK compile-time truthy", 1) {
    RouterContext.displayName = 'RouterContext';
} //# sourceMappingURL=router-context.shared-runtime.js.map
}}),
"[project]/node_modules/next/dist/compiled/picomatch/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
(()=>{
    "use strict";
    var t = {
        170: (t, e, u)=>{
            const n = u(510);
            const isWindows = ()=>{
                if (typeof navigator !== "undefined" && navigator.platform) {
                    const t = navigator.platform.toLowerCase();
                    return t === "win32" || t === "windows";
                }
                if (typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] !== "undefined" && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].platform) {
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].platform === "win32";
                }
                return false;
            };
            function picomatch(t, e, u = false) {
                if (e && (e.windows === null || e.windows === undefined)) {
                    e = {
                        ...e,
                        windows: isWindows()
                    };
                }
                return n(t, e, u);
            }
            Object.assign(picomatch, n);
            t.exports = picomatch;
        },
        154: (t)=>{
            const e = "\\\\/";
            const u = `[^${e}]`;
            const n = "\\.";
            const o = "\\+";
            const s = "\\?";
            const r = "\\/";
            const a = "(?=.)";
            const i = "[^/]";
            const c = `(?:${r}|$)`;
            const p = `(?:^|${r})`;
            const l = `${n}{1,2}${c}`;
            const f = `(?!${n})`;
            const A = `(?!${p}${l})`;
            const _ = `(?!${n}{0,1}${c})`;
            const R = `(?!${l})`;
            const E = `[^.${r}]`;
            const h = `${i}*?`;
            const g = "/";
            const b = {
                DOT_LITERAL: n,
                PLUS_LITERAL: o,
                QMARK_LITERAL: s,
                SLASH_LITERAL: r,
                ONE_CHAR: a,
                QMARK: i,
                END_ANCHOR: c,
                DOTS_SLASH: l,
                NO_DOT: f,
                NO_DOTS: A,
                NO_DOT_SLASH: _,
                NO_DOTS_SLASH: R,
                QMARK_NO_DOT: E,
                STAR: h,
                START_ANCHOR: p,
                SEP: g
            };
            const C = {
                ...b,
                SLASH_LITERAL: `[${e}]`,
                QMARK: u,
                STAR: `${u}*?`,
                DOTS_SLASH: `${n}{1,2}(?:[${e}]|$)`,
                NO_DOT: `(?!${n})`,
                NO_DOTS: `(?!(?:^|[${e}])${n}{1,2}(?:[${e}]|$))`,
                NO_DOT_SLASH: `(?!${n}{0,1}(?:[${e}]|$))`,
                NO_DOTS_SLASH: `(?!${n}{1,2}(?:[${e}]|$))`,
                QMARK_NO_DOT: `[^.${e}]`,
                START_ANCHOR: `(?:^|[${e}])`,
                END_ANCHOR: `(?:[${e}]|$)`,
                SEP: "\\"
            };
            const y = {
                alnum: "a-zA-Z0-9",
                alpha: "a-zA-Z",
                ascii: "\\x00-\\x7F",
                blank: " \\t",
                cntrl: "\\x00-\\x1F\\x7F",
                digit: "0-9",
                graph: "\\x21-\\x7E",
                lower: "a-z",
                print: "\\x20-\\x7E ",
                punct: "\\-!\"#$%&'()\\*+,./:;<=>?@[\\]^_`{|}~",
                space: " \\t\\r\\n\\v\\f",
                upper: "A-Z",
                word: "A-Za-z0-9_",
                xdigit: "A-Fa-f0-9"
            };
            t.exports = {
                MAX_LENGTH: 1024 * 64,
                POSIX_REGEX_SOURCE: y,
                REGEX_BACKSLASH: /\\(?![*+?^${}(|)[\]])/g,
                REGEX_NON_SPECIAL_CHARS: /^[^@![\].,$*+?^{}()|\\/]+/,
                REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\]]/,
                REGEX_SPECIAL_CHARS_BACKREF: /(\\?)((\W)(\3*))/g,
                REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\]])/g,
                REGEX_REMOVE_BACKSLASH: /(?:\[.*?[^\\]\]|\\(?=.))/g,
                REPLACEMENTS: {
                    "***": "*",
                    "**/**": "**",
                    "**/**/**": "**"
                },
                CHAR_0: 48,
                CHAR_9: 57,
                CHAR_UPPERCASE_A: 65,
                CHAR_LOWERCASE_A: 97,
                CHAR_UPPERCASE_Z: 90,
                CHAR_LOWERCASE_Z: 122,
                CHAR_LEFT_PARENTHESES: 40,
                CHAR_RIGHT_PARENTHESES: 41,
                CHAR_ASTERISK: 42,
                CHAR_AMPERSAND: 38,
                CHAR_AT: 64,
                CHAR_BACKWARD_SLASH: 92,
                CHAR_CARRIAGE_RETURN: 13,
                CHAR_CIRCUMFLEX_ACCENT: 94,
                CHAR_COLON: 58,
                CHAR_COMMA: 44,
                CHAR_DOT: 46,
                CHAR_DOUBLE_QUOTE: 34,
                CHAR_EQUAL: 61,
                CHAR_EXCLAMATION_MARK: 33,
                CHAR_FORM_FEED: 12,
                CHAR_FORWARD_SLASH: 47,
                CHAR_GRAVE_ACCENT: 96,
                CHAR_HASH: 35,
                CHAR_HYPHEN_MINUS: 45,
                CHAR_LEFT_ANGLE_BRACKET: 60,
                CHAR_LEFT_CURLY_BRACE: 123,
                CHAR_LEFT_SQUARE_BRACKET: 91,
                CHAR_LINE_FEED: 10,
                CHAR_NO_BREAK_SPACE: 160,
                CHAR_PERCENT: 37,
                CHAR_PLUS: 43,
                CHAR_QUESTION_MARK: 63,
                CHAR_RIGHT_ANGLE_BRACKET: 62,
                CHAR_RIGHT_CURLY_BRACE: 125,
                CHAR_RIGHT_SQUARE_BRACKET: 93,
                CHAR_SEMICOLON: 59,
                CHAR_SINGLE_QUOTE: 39,
                CHAR_SPACE: 32,
                CHAR_TAB: 9,
                CHAR_UNDERSCORE: 95,
                CHAR_VERTICAL_LINE: 124,
                CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279,
                extglobChars (t) {
                    return {
                        "!": {
                            type: "negate",
                            open: "(?:(?!(?:",
                            close: `))${t.STAR})`
                        },
                        "?": {
                            type: "qmark",
                            open: "(?:",
                            close: ")?"
                        },
                        "+": {
                            type: "plus",
                            open: "(?:",
                            close: ")+"
                        },
                        "*": {
                            type: "star",
                            open: "(?:",
                            close: ")*"
                        },
                        "@": {
                            type: "at",
                            open: "(?:",
                            close: ")"
                        }
                    };
                },
                globChars (t) {
                    return t === true ? C : b;
                }
            };
        },
        697: (t, e, u)=>{
            const n = u(154);
            const o = u(96);
            const { MAX_LENGTH: s, POSIX_REGEX_SOURCE: r, REGEX_NON_SPECIAL_CHARS: a, REGEX_SPECIAL_CHARS_BACKREF: i, REPLACEMENTS: c } = n;
            const expandRange = (t, e)=>{
                if (typeof e.expandRange === "function") {
                    return e.expandRange(...t, e);
                }
                t.sort();
                const u = `[${t.join("-")}]`;
                try {
                    new RegExp(u);
                } catch (e) {
                    return t.map((t)=>o.escapeRegex(t)).join("..");
                }
                return u;
            };
            const syntaxError = (t, e)=>`Missing ${t}: "${e}" - use "\\\\${e}" to match literal characters`;
            const parse = (t, e)=>{
                if (typeof t !== "string") {
                    throw new TypeError("Expected a string");
                }
                t = c[t] || t;
                const u = {
                    ...e
                };
                const p = typeof u.maxLength === "number" ? Math.min(s, u.maxLength) : s;
                let l = t.length;
                if (l > p) {
                    throw new SyntaxError(`Input length: ${l}, exceeds maximum allowed length: ${p}`);
                }
                const f = {
                    type: "bos",
                    value: "",
                    output: u.prepend || ""
                };
                const A = [
                    f
                ];
                const _ = u.capture ? "" : "?:";
                const R = n.globChars(u.windows);
                const E = n.extglobChars(R);
                const { DOT_LITERAL: h, PLUS_LITERAL: g, SLASH_LITERAL: b, ONE_CHAR: C, DOTS_SLASH: y, NO_DOT: $, NO_DOT_SLASH: x, NO_DOTS_SLASH: S, QMARK: H, QMARK_NO_DOT: v, STAR: d, START_ANCHOR: L } = R;
                const globstar = (t)=>`(${_}(?:(?!${L}${t.dot ? y : h}).)*?)`;
                const T = u.dot ? "" : $;
                const O = u.dot ? H : v;
                let k = u.bash === true ? globstar(u) : d;
                if (u.capture) {
                    k = `(${k})`;
                }
                if (typeof u.noext === "boolean") {
                    u.noextglob = u.noext;
                }
                const m = {
                    input: t,
                    index: -1,
                    start: 0,
                    dot: u.dot === true,
                    consumed: "",
                    output: "",
                    prefix: "",
                    backtrack: false,
                    negated: false,
                    brackets: 0,
                    braces: 0,
                    parens: 0,
                    quotes: 0,
                    globstar: false,
                    tokens: A
                };
                t = o.removePrefix(t, m);
                l = t.length;
                const w = [];
                const N = [];
                const I = [];
                let B = f;
                let G;
                const eos = ()=>m.index === l - 1;
                const D = m.peek = (e = 1)=>t[m.index + e];
                const M = m.advance = ()=>t[++m.index] || "";
                const remaining = ()=>t.slice(m.index + 1);
                const consume = (t = "", e = 0)=>{
                    m.consumed += t;
                    m.index += e;
                };
                const append = (t)=>{
                    m.output += t.output != null ? t.output : t.value;
                    consume(t.value);
                };
                const negate = ()=>{
                    let t = 1;
                    while(D() === "!" && (D(2) !== "(" || D(3) === "?")){
                        M();
                        m.start++;
                        t++;
                    }
                    if (t % 2 === 0) {
                        return false;
                    }
                    m.negated = true;
                    m.start++;
                    return true;
                };
                const increment = (t)=>{
                    m[t]++;
                    I.push(t);
                };
                const decrement = (t)=>{
                    m[t]--;
                    I.pop();
                };
                const push = (t)=>{
                    if (B.type === "globstar") {
                        const e = m.braces > 0 && (t.type === "comma" || t.type === "brace");
                        const u = t.extglob === true || w.length && (t.type === "pipe" || t.type === "paren");
                        if (t.type !== "slash" && t.type !== "paren" && !e && !u) {
                            m.output = m.output.slice(0, -B.output.length);
                            B.type = "star";
                            B.value = "*";
                            B.output = k;
                            m.output += B.output;
                        }
                    }
                    if (w.length && t.type !== "paren") {
                        w[w.length - 1].inner += t.value;
                    }
                    if (t.value || t.output) append(t);
                    if (B && B.type === "text" && t.type === "text") {
                        B.output = (B.output || B.value) + t.value;
                        B.value += t.value;
                        return;
                    }
                    t.prev = B;
                    A.push(t);
                    B = t;
                };
                const extglobOpen = (t, e)=>{
                    const n = {
                        ...E[e],
                        conditions: 1,
                        inner: ""
                    };
                    n.prev = B;
                    n.parens = m.parens;
                    n.output = m.output;
                    const o = (u.capture ? "(" : "") + n.open;
                    increment("parens");
                    push({
                        type: t,
                        value: e,
                        output: m.output ? "" : C
                    });
                    push({
                        type: "paren",
                        extglob: true,
                        value: M(),
                        output: o
                    });
                    w.push(n);
                };
                const extglobClose = (t)=>{
                    let n = t.close + (u.capture ? ")" : "");
                    let o;
                    if (t.type === "negate") {
                        let s = k;
                        if (t.inner && t.inner.length > 1 && t.inner.includes("/")) {
                            s = globstar(u);
                        }
                        if (s !== k || eos() || /^\)+$/.test(remaining())) {
                            n = t.close = `)$))${s}`;
                        }
                        if (t.inner.includes("*") && (o = remaining()) && /^\.[^\\/.]+$/.test(o)) {
                            const u = parse(o, {
                                ...e,
                                fastpaths: false
                            }).output;
                            n = t.close = `)${u})${s})`;
                        }
                        if (t.prev.type === "bos") {
                            m.negatedExtglob = true;
                        }
                    }
                    push({
                        type: "paren",
                        extglob: true,
                        value: G,
                        output: n
                    });
                    decrement("parens");
                };
                if (u.fastpaths !== false && !/(^[*!]|[/()[\]{}"])/.test(t)) {
                    let n = false;
                    let s = t.replace(i, (t, e, u, o, s, r)=>{
                        if (o === "\\") {
                            n = true;
                            return t;
                        }
                        if (o === "?") {
                            if (e) {
                                return e + o + (s ? H.repeat(s.length) : "");
                            }
                            if (r === 0) {
                                return O + (s ? H.repeat(s.length) : "");
                            }
                            return H.repeat(u.length);
                        }
                        if (o === ".") {
                            return h.repeat(u.length);
                        }
                        if (o === "*") {
                            if (e) {
                                return e + o + (s ? k : "");
                            }
                            return k;
                        }
                        return e ? t : `\\${t}`;
                    });
                    if (n === true) {
                        if (u.unescape === true) {
                            s = s.replace(/\\/g, "");
                        } else {
                            s = s.replace(/\\+/g, (t)=>t.length % 2 === 0 ? "\\\\" : t ? "\\" : "");
                        }
                    }
                    if (s === t && u.contains === true) {
                        m.output = t;
                        return m;
                    }
                    m.output = o.wrapOutput(s, m, e);
                    return m;
                }
                while(!eos()){
                    G = M();
                    if (G === "\0") {
                        continue;
                    }
                    if (G === "\\") {
                        const t = D();
                        if (t === "/" && u.bash !== true) {
                            continue;
                        }
                        if (t === "." || t === ";") {
                            continue;
                        }
                        if (!t) {
                            G += "\\";
                            push({
                                type: "text",
                                value: G
                            });
                            continue;
                        }
                        const e = /^\\+/.exec(remaining());
                        let n = 0;
                        if (e && e[0].length > 2) {
                            n = e[0].length;
                            m.index += n;
                            if (n % 2 !== 0) {
                                G += "\\";
                            }
                        }
                        if (u.unescape === true) {
                            G = M();
                        } else {
                            G += M();
                        }
                        if (m.brackets === 0) {
                            push({
                                type: "text",
                                value: G
                            });
                            continue;
                        }
                    }
                    if (m.brackets > 0 && (G !== "]" || B.value === "[" || B.value === "[^")) {
                        if (u.posix !== false && G === ":") {
                            const t = B.value.slice(1);
                            if (t.includes("[")) {
                                B.posix = true;
                                if (t.includes(":")) {
                                    const t = B.value.lastIndexOf("[");
                                    const e = B.value.slice(0, t);
                                    const u = B.value.slice(t + 2);
                                    const n = r[u];
                                    if (n) {
                                        B.value = e + n;
                                        m.backtrack = true;
                                        M();
                                        if (!f.output && A.indexOf(B) === 1) {
                                            f.output = C;
                                        }
                                        continue;
                                    }
                                }
                            }
                        }
                        if (G === "[" && D() !== ":" || G === "-" && D() === "]") {
                            G = `\\${G}`;
                        }
                        if (G === "]" && (B.value === "[" || B.value === "[^")) {
                            G = `\\${G}`;
                        }
                        if (u.posix === true && G === "!" && B.value === "[") {
                            G = "^";
                        }
                        B.value += G;
                        append({
                            value: G
                        });
                        continue;
                    }
                    if (m.quotes === 1 && G !== '"') {
                        G = o.escapeRegex(G);
                        B.value += G;
                        append({
                            value: G
                        });
                        continue;
                    }
                    if (G === '"') {
                        m.quotes = m.quotes === 1 ? 0 : 1;
                        if (u.keepQuotes === true) {
                            push({
                                type: "text",
                                value: G
                            });
                        }
                        continue;
                    }
                    if (G === "(") {
                        increment("parens");
                        push({
                            type: "paren",
                            value: G
                        });
                        continue;
                    }
                    if (G === ")") {
                        if (m.parens === 0 && u.strictBrackets === true) {
                            throw new SyntaxError(syntaxError("opening", "("));
                        }
                        const t = w[w.length - 1];
                        if (t && m.parens === t.parens + 1) {
                            extglobClose(w.pop());
                            continue;
                        }
                        push({
                            type: "paren",
                            value: G,
                            output: m.parens ? ")" : "\\)"
                        });
                        decrement("parens");
                        continue;
                    }
                    if (G === "[") {
                        if (u.nobracket === true || !remaining().includes("]")) {
                            if (u.nobracket !== true && u.strictBrackets === true) {
                                throw new SyntaxError(syntaxError("closing", "]"));
                            }
                            G = `\\${G}`;
                        } else {
                            increment("brackets");
                        }
                        push({
                            type: "bracket",
                            value: G
                        });
                        continue;
                    }
                    if (G === "]") {
                        if (u.nobracket === true || B && B.type === "bracket" && B.value.length === 1) {
                            push({
                                type: "text",
                                value: G,
                                output: `\\${G}`
                            });
                            continue;
                        }
                        if (m.brackets === 0) {
                            if (u.strictBrackets === true) {
                                throw new SyntaxError(syntaxError("opening", "["));
                            }
                            push({
                                type: "text",
                                value: G,
                                output: `\\${G}`
                            });
                            continue;
                        }
                        decrement("brackets");
                        const t = B.value.slice(1);
                        if (B.posix !== true && t[0] === "^" && !t.includes("/")) {
                            G = `/${G}`;
                        }
                        B.value += G;
                        append({
                            value: G
                        });
                        if (u.literalBrackets === false || o.hasRegexChars(t)) {
                            continue;
                        }
                        const e = o.escapeRegex(B.value);
                        m.output = m.output.slice(0, -B.value.length);
                        if (u.literalBrackets === true) {
                            m.output += e;
                            B.value = e;
                            continue;
                        }
                        B.value = `(${_}${e}|${B.value})`;
                        m.output += B.value;
                        continue;
                    }
                    if (G === "{" && u.nobrace !== true) {
                        increment("braces");
                        const t = {
                            type: "brace",
                            value: G,
                            output: "(",
                            outputIndex: m.output.length,
                            tokensIndex: m.tokens.length
                        };
                        N.push(t);
                        push(t);
                        continue;
                    }
                    if (G === "}") {
                        const t = N[N.length - 1];
                        if (u.nobrace === true || !t) {
                            push({
                                type: "text",
                                value: G,
                                output: G
                            });
                            continue;
                        }
                        let e = ")";
                        if (t.dots === true) {
                            const t = A.slice();
                            const n = [];
                            for(let e = t.length - 1; e >= 0; e--){
                                A.pop();
                                if (t[e].type === "brace") {
                                    break;
                                }
                                if (t[e].type !== "dots") {
                                    n.unshift(t[e].value);
                                }
                            }
                            e = expandRange(n, u);
                            m.backtrack = true;
                        }
                        if (t.comma !== true && t.dots !== true) {
                            const u = m.output.slice(0, t.outputIndex);
                            const n = m.tokens.slice(t.tokensIndex);
                            t.value = t.output = "\\{";
                            G = e = "\\}";
                            m.output = u;
                            for (const t of n){
                                m.output += t.output || t.value;
                            }
                        }
                        push({
                            type: "brace",
                            value: G,
                            output: e
                        });
                        decrement("braces");
                        N.pop();
                        continue;
                    }
                    if (G === "|") {
                        if (w.length > 0) {
                            w[w.length - 1].conditions++;
                        }
                        push({
                            type: "text",
                            value: G
                        });
                        continue;
                    }
                    if (G === ",") {
                        let t = G;
                        const e = N[N.length - 1];
                        if (e && I[I.length - 1] === "braces") {
                            e.comma = true;
                            t = "|";
                        }
                        push({
                            type: "comma",
                            value: G,
                            output: t
                        });
                        continue;
                    }
                    if (G === "/") {
                        if (B.type === "dot" && m.index === m.start + 1) {
                            m.start = m.index + 1;
                            m.consumed = "";
                            m.output = "";
                            A.pop();
                            B = f;
                            continue;
                        }
                        push({
                            type: "slash",
                            value: G,
                            output: b
                        });
                        continue;
                    }
                    if (G === ".") {
                        if (m.braces > 0 && B.type === "dot") {
                            if (B.value === ".") B.output = h;
                            const t = N[N.length - 1];
                            B.type = "dots";
                            B.output += G;
                            B.value += G;
                            t.dots = true;
                            continue;
                        }
                        if (m.braces + m.parens === 0 && B.type !== "bos" && B.type !== "slash") {
                            push({
                                type: "text",
                                value: G,
                                output: h
                            });
                            continue;
                        }
                        push({
                            type: "dot",
                            value: G,
                            output: h
                        });
                        continue;
                    }
                    if (G === "?") {
                        const t = B && B.value === "(";
                        if (!t && u.noextglob !== true && D() === "(" && D(2) !== "?") {
                            extglobOpen("qmark", G);
                            continue;
                        }
                        if (B && B.type === "paren") {
                            const t = D();
                            let e = G;
                            if (B.value === "(" && !/[!=<:]/.test(t) || t === "<" && !/<([!=]|\w+>)/.test(remaining())) {
                                e = `\\${G}`;
                            }
                            push({
                                type: "text",
                                value: G,
                                output: e
                            });
                            continue;
                        }
                        if (u.dot !== true && (B.type === "slash" || B.type === "bos")) {
                            push({
                                type: "qmark",
                                value: G,
                                output: v
                            });
                            continue;
                        }
                        push({
                            type: "qmark",
                            value: G,
                            output: H
                        });
                        continue;
                    }
                    if (G === "!") {
                        if (u.noextglob !== true && D() === "(") {
                            if (D(2) !== "?" || !/[!=<:]/.test(D(3))) {
                                extglobOpen("negate", G);
                                continue;
                            }
                        }
                        if (u.nonegate !== true && m.index === 0) {
                            negate();
                            continue;
                        }
                    }
                    if (G === "+") {
                        if (u.noextglob !== true && D() === "(" && D(2) !== "?") {
                            extglobOpen("plus", G);
                            continue;
                        }
                        if (B && B.value === "(" || u.regex === false) {
                            push({
                                type: "plus",
                                value: G,
                                output: g
                            });
                            continue;
                        }
                        if (B && (B.type === "bracket" || B.type === "paren" || B.type === "brace") || m.parens > 0) {
                            push({
                                type: "plus",
                                value: G
                            });
                            continue;
                        }
                        push({
                            type: "plus",
                            value: g
                        });
                        continue;
                    }
                    if (G === "@") {
                        if (u.noextglob !== true && D() === "(" && D(2) !== "?") {
                            push({
                                type: "at",
                                extglob: true,
                                value: G,
                                output: ""
                            });
                            continue;
                        }
                        push({
                            type: "text",
                            value: G
                        });
                        continue;
                    }
                    if (G !== "*") {
                        if (G === "$" || G === "^") {
                            G = `\\${G}`;
                        }
                        const t = a.exec(remaining());
                        if (t) {
                            G += t[0];
                            m.index += t[0].length;
                        }
                        push({
                            type: "text",
                            value: G
                        });
                        continue;
                    }
                    if (B && (B.type === "globstar" || B.star === true)) {
                        B.type = "star";
                        B.star = true;
                        B.value += G;
                        B.output = k;
                        m.backtrack = true;
                        m.globstar = true;
                        consume(G);
                        continue;
                    }
                    let e = remaining();
                    if (u.noextglob !== true && /^\([^?]/.test(e)) {
                        extglobOpen("star", G);
                        continue;
                    }
                    if (B.type === "star") {
                        if (u.noglobstar === true) {
                            consume(G);
                            continue;
                        }
                        const n = B.prev;
                        const o = n.prev;
                        const s = n.type === "slash" || n.type === "bos";
                        const r = o && (o.type === "star" || o.type === "globstar");
                        if (u.bash === true && (!s || e[0] && e[0] !== "/")) {
                            push({
                                type: "star",
                                value: G,
                                output: ""
                            });
                            continue;
                        }
                        const a = m.braces > 0 && (n.type === "comma" || n.type === "brace");
                        const i = w.length && (n.type === "pipe" || n.type === "paren");
                        if (!s && n.type !== "paren" && !a && !i) {
                            push({
                                type: "star",
                                value: G,
                                output: ""
                            });
                            continue;
                        }
                        while(e.slice(0, 3) === "/**"){
                            const u = t[m.index + 4];
                            if (u && u !== "/") {
                                break;
                            }
                            e = e.slice(3);
                            consume("/**", 3);
                        }
                        if (n.type === "bos" && eos()) {
                            B.type = "globstar";
                            B.value += G;
                            B.output = globstar(u);
                            m.output = B.output;
                            m.globstar = true;
                            consume(G);
                            continue;
                        }
                        if (n.type === "slash" && n.prev.type !== "bos" && !r && eos()) {
                            m.output = m.output.slice(0, -(n.output + B.output).length);
                            n.output = `(?:${n.output}`;
                            B.type = "globstar";
                            B.output = globstar(u) + (u.strictSlashes ? ")" : "|$)");
                            B.value += G;
                            m.globstar = true;
                            m.output += n.output + B.output;
                            consume(G);
                            continue;
                        }
                        if (n.type === "slash" && n.prev.type !== "bos" && e[0] === "/") {
                            const t = e[1] !== void 0 ? "|$" : "";
                            m.output = m.output.slice(0, -(n.output + B.output).length);
                            n.output = `(?:${n.output}`;
                            B.type = "globstar";
                            B.output = `${globstar(u)}${b}|${b}${t})`;
                            B.value += G;
                            m.output += n.output + B.output;
                            m.globstar = true;
                            consume(G + M());
                            push({
                                type: "slash",
                                value: "/",
                                output: ""
                            });
                            continue;
                        }
                        if (n.type === "bos" && e[0] === "/") {
                            B.type = "globstar";
                            B.value += G;
                            B.output = `(?:^|${b}|${globstar(u)}${b})`;
                            m.output = B.output;
                            m.globstar = true;
                            consume(G + M());
                            push({
                                type: "slash",
                                value: "/",
                                output: ""
                            });
                            continue;
                        }
                        m.output = m.output.slice(0, -B.output.length);
                        B.type = "globstar";
                        B.output = globstar(u);
                        B.value += G;
                        m.output += B.output;
                        m.globstar = true;
                        consume(G);
                        continue;
                    }
                    const n = {
                        type: "star",
                        value: G,
                        output: k
                    };
                    if (u.bash === true) {
                        n.output = ".*?";
                        if (B.type === "bos" || B.type === "slash") {
                            n.output = T + n.output;
                        }
                        push(n);
                        continue;
                    }
                    if (B && (B.type === "bracket" || B.type === "paren") && u.regex === true) {
                        n.output = G;
                        push(n);
                        continue;
                    }
                    if (m.index === m.start || B.type === "slash" || B.type === "dot") {
                        if (B.type === "dot") {
                            m.output += x;
                            B.output += x;
                        } else if (u.dot === true) {
                            m.output += S;
                            B.output += S;
                        } else {
                            m.output += T;
                            B.output += T;
                        }
                        if (D() !== "*") {
                            m.output += C;
                            B.output += C;
                        }
                    }
                    push(n);
                }
                while(m.brackets > 0){
                    if (u.strictBrackets === true) throw new SyntaxError(syntaxError("closing", "]"));
                    m.output = o.escapeLast(m.output, "[");
                    decrement("brackets");
                }
                while(m.parens > 0){
                    if (u.strictBrackets === true) throw new SyntaxError(syntaxError("closing", ")"));
                    m.output = o.escapeLast(m.output, "(");
                    decrement("parens");
                }
                while(m.braces > 0){
                    if (u.strictBrackets === true) throw new SyntaxError(syntaxError("closing", "}"));
                    m.output = o.escapeLast(m.output, "{");
                    decrement("braces");
                }
                if (u.strictSlashes !== true && (B.type === "star" || B.type === "bracket")) {
                    push({
                        type: "maybe_slash",
                        value: "",
                        output: `${b}?`
                    });
                }
                if (m.backtrack === true) {
                    m.output = "";
                    for (const t of m.tokens){
                        m.output += t.output != null ? t.output : t.value;
                        if (t.suffix) {
                            m.output += t.suffix;
                        }
                    }
                }
                return m;
            };
            parse.fastpaths = (t, e)=>{
                const u = {
                    ...e
                };
                const r = typeof u.maxLength === "number" ? Math.min(s, u.maxLength) : s;
                const a = t.length;
                if (a > r) {
                    throw new SyntaxError(`Input length: ${a}, exceeds maximum allowed length: ${r}`);
                }
                t = c[t] || t;
                const { DOT_LITERAL: i, SLASH_LITERAL: p, ONE_CHAR: l, DOTS_SLASH: f, NO_DOT: A, NO_DOTS: _, NO_DOTS_SLASH: R, STAR: E, START_ANCHOR: h } = n.globChars(u.windows);
                const g = u.dot ? _ : A;
                const b = u.dot ? R : A;
                const C = u.capture ? "" : "?:";
                const y = {
                    negated: false,
                    prefix: ""
                };
                let $ = u.bash === true ? ".*?" : E;
                if (u.capture) {
                    $ = `(${$})`;
                }
                const globstar = (t)=>{
                    if (t.noglobstar === true) return $;
                    return `(${C}(?:(?!${h}${t.dot ? f : i}).)*?)`;
                };
                const create = (t)=>{
                    switch(t){
                        case "*":
                            return `${g}${l}${$}`;
                        case ".*":
                            return `${i}${l}${$}`;
                        case "*.*":
                            return `${g}${$}${i}${l}${$}`;
                        case "*/*":
                            return `${g}${$}${p}${l}${b}${$}`;
                        case "**":
                            return g + globstar(u);
                        case "**/*":
                            return `(?:${g}${globstar(u)}${p})?${b}${l}${$}`;
                        case "**/*.*":
                            return `(?:${g}${globstar(u)}${p})?${b}${$}${i}${l}${$}`;
                        case "**/.*":
                            return `(?:${g}${globstar(u)}${p})?${i}${l}${$}`;
                        default:
                            {
                                const e = /^(.*?)\.(\w+)$/.exec(t);
                                if (!e) return;
                                const u = create(e[1]);
                                if (!u) return;
                                return u + i + e[2];
                            }
                    }
                };
                const x = o.removePrefix(t, y);
                let S = create(x);
                if (S && u.strictSlashes !== true) {
                    S += `${p}?`;
                }
                return S;
            };
            t.exports = parse;
        },
        510: (t, e, u)=>{
            const n = u(716);
            const o = u(697);
            const s = u(96);
            const r = u(154);
            const isObject = (t)=>t && typeof t === "object" && !Array.isArray(t);
            const picomatch = (t, e, u = false)=>{
                if (Array.isArray(t)) {
                    const n = t.map((t)=>picomatch(t, e, u));
                    const arrayMatcher = (t)=>{
                        for (const e of n){
                            const u = e(t);
                            if (u) return u;
                        }
                        return false;
                    };
                    return arrayMatcher;
                }
                const n = isObject(t) && t.tokens && t.input;
                if (t === "" || typeof t !== "string" && !n) {
                    throw new TypeError("Expected pattern to be a non-empty string");
                }
                const o = e || {};
                const s = o.windows;
                const r = n ? picomatch.compileRe(t, e) : picomatch.makeRe(t, e, false, true);
                const a = r.state;
                delete r.state;
                let isIgnored = ()=>false;
                if (o.ignore) {
                    const t = {
                        ...e,
                        ignore: null,
                        onMatch: null,
                        onResult: null
                    };
                    isIgnored = picomatch(o.ignore, t, u);
                }
                const matcher = (u, n = false)=>{
                    const { isMatch: i, match: c, output: p } = picomatch.test(u, r, e, {
                        glob: t,
                        posix: s
                    });
                    const l = {
                        glob: t,
                        state: a,
                        regex: r,
                        posix: s,
                        input: u,
                        output: p,
                        match: c,
                        isMatch: i
                    };
                    if (typeof o.onResult === "function") {
                        o.onResult(l);
                    }
                    if (i === false) {
                        l.isMatch = false;
                        return n ? l : false;
                    }
                    if (isIgnored(u)) {
                        if (typeof o.onIgnore === "function") {
                            o.onIgnore(l);
                        }
                        l.isMatch = false;
                        return n ? l : false;
                    }
                    if (typeof o.onMatch === "function") {
                        o.onMatch(l);
                    }
                    return n ? l : true;
                };
                if (u) {
                    matcher.state = a;
                }
                return matcher;
            };
            picomatch.test = (t, e, u, { glob: n, posix: o } = {})=>{
                if (typeof t !== "string") {
                    throw new TypeError("Expected input to be a string");
                }
                if (t === "") {
                    return {
                        isMatch: false,
                        output: ""
                    };
                }
                const r = u || {};
                const a = r.format || (o ? s.toPosixSlashes : null);
                let i = t === n;
                let c = i && a ? a(t) : t;
                if (i === false) {
                    c = a ? a(t) : t;
                    i = c === n;
                }
                if (i === false || r.capture === true) {
                    if (r.matchBase === true || r.basename === true) {
                        i = picomatch.matchBase(t, e, u, o);
                    } else {
                        i = e.exec(c);
                    }
                }
                return {
                    isMatch: Boolean(i),
                    match: i,
                    output: c
                };
            };
            picomatch.matchBase = (t, e, u)=>{
                const n = e instanceof RegExp ? e : picomatch.makeRe(e, u);
                return n.test(s.basename(t));
            };
            picomatch.isMatch = (t, e, u)=>picomatch(e, u)(t);
            picomatch.parse = (t, e)=>{
                if (Array.isArray(t)) return t.map((t)=>picomatch.parse(t, e));
                return o(t, {
                    ...e,
                    fastpaths: false
                });
            };
            picomatch.scan = (t, e)=>n(t, e);
            picomatch.compileRe = (t, e, u = false, n = false)=>{
                if (u === true) {
                    return t.output;
                }
                const o = e || {};
                const s = o.contains ? "" : "^";
                const r = o.contains ? "" : "$";
                let a = `${s}(?:${t.output})${r}`;
                if (t && t.negated === true) {
                    a = `^(?!${a}).*$`;
                }
                const i = picomatch.toRegex(a, e);
                if (n === true) {
                    i.state = t;
                }
                return i;
            };
            picomatch.makeRe = (t, e = {}, u = false, n = false)=>{
                if (!t || typeof t !== "string") {
                    throw new TypeError("Expected a non-empty string");
                }
                let s = {
                    negated: false,
                    fastpaths: true
                };
                if (e.fastpaths !== false && (t[0] === "." || t[0] === "*")) {
                    s.output = o.fastpaths(t, e);
                }
                if (!s.output) {
                    s = o(t, e);
                }
                return picomatch.compileRe(s, e, u, n);
            };
            picomatch.toRegex = (t, e)=>{
                try {
                    const u = e || {};
                    return new RegExp(t, u.flags || (u.nocase ? "i" : ""));
                } catch (t) {
                    if (e && e.debug === true) throw t;
                    return /$^/;
                }
            };
            picomatch.constants = r;
            t.exports = picomatch;
        },
        716: (t, e, u)=>{
            const n = u(96);
            const { CHAR_ASTERISK: o, CHAR_AT: s, CHAR_BACKWARD_SLASH: r, CHAR_COMMA: a, CHAR_DOT: i, CHAR_EXCLAMATION_MARK: c, CHAR_FORWARD_SLASH: p, CHAR_LEFT_CURLY_BRACE: l, CHAR_LEFT_PARENTHESES: f, CHAR_LEFT_SQUARE_BRACKET: A, CHAR_PLUS: _, CHAR_QUESTION_MARK: R, CHAR_RIGHT_CURLY_BRACE: E, CHAR_RIGHT_PARENTHESES: h, CHAR_RIGHT_SQUARE_BRACKET: g } = u(154);
            const isPathSeparator = (t)=>t === p || t === r;
            const depth = (t)=>{
                if (t.isPrefix !== true) {
                    t.depth = t.isGlobstar ? Infinity : 1;
                }
            };
            const scan = (t, e)=>{
                const u = e || {};
                const b = t.length - 1;
                const C = u.parts === true || u.scanToEnd === true;
                const y = [];
                const $ = [];
                const x = [];
                let S = t;
                let H = -1;
                let v = 0;
                let d = 0;
                let L = false;
                let T = false;
                let O = false;
                let k = false;
                let m = false;
                let w = false;
                let N = false;
                let I = false;
                let B = false;
                let G = false;
                let D = 0;
                let M;
                let P;
                let K = {
                    value: "",
                    depth: 0,
                    isGlob: false
                };
                const eos = ()=>H >= b;
                const peek = ()=>S.charCodeAt(H + 1);
                const advance = ()=>{
                    M = P;
                    return S.charCodeAt(++H);
                };
                while(H < b){
                    P = advance();
                    let t;
                    if (P === r) {
                        N = K.backslashes = true;
                        P = advance();
                        if (P === l) {
                            w = true;
                        }
                        continue;
                    }
                    if (w === true || P === l) {
                        D++;
                        while(eos() !== true && (P = advance())){
                            if (P === r) {
                                N = K.backslashes = true;
                                advance();
                                continue;
                            }
                            if (P === l) {
                                D++;
                                continue;
                            }
                            if (w !== true && P === i && (P = advance()) === i) {
                                L = K.isBrace = true;
                                O = K.isGlob = true;
                                G = true;
                                if (C === true) {
                                    continue;
                                }
                                break;
                            }
                            if (w !== true && P === a) {
                                L = K.isBrace = true;
                                O = K.isGlob = true;
                                G = true;
                                if (C === true) {
                                    continue;
                                }
                                break;
                            }
                            if (P === E) {
                                D--;
                                if (D === 0) {
                                    w = false;
                                    L = K.isBrace = true;
                                    G = true;
                                    break;
                                }
                            }
                        }
                        if (C === true) {
                            continue;
                        }
                        break;
                    }
                    if (P === p) {
                        y.push(H);
                        $.push(K);
                        K = {
                            value: "",
                            depth: 0,
                            isGlob: false
                        };
                        if (G === true) continue;
                        if (M === i && H === v + 1) {
                            v += 2;
                            continue;
                        }
                        d = H + 1;
                        continue;
                    }
                    if (u.noext !== true) {
                        const t = P === _ || P === s || P === o || P === R || P === c;
                        if (t === true && peek() === f) {
                            O = K.isGlob = true;
                            k = K.isExtglob = true;
                            G = true;
                            if (P === c && H === v) {
                                B = true;
                            }
                            if (C === true) {
                                while(eos() !== true && (P = advance())){
                                    if (P === r) {
                                        N = K.backslashes = true;
                                        P = advance();
                                        continue;
                                    }
                                    if (P === h) {
                                        O = K.isGlob = true;
                                        G = true;
                                        break;
                                    }
                                }
                                continue;
                            }
                            break;
                        }
                    }
                    if (P === o) {
                        if (M === o) m = K.isGlobstar = true;
                        O = K.isGlob = true;
                        G = true;
                        if (C === true) {
                            continue;
                        }
                        break;
                    }
                    if (P === R) {
                        O = K.isGlob = true;
                        G = true;
                        if (C === true) {
                            continue;
                        }
                        break;
                    }
                    if (P === A) {
                        while(eos() !== true && (t = advance())){
                            if (t === r) {
                                N = K.backslashes = true;
                                advance();
                                continue;
                            }
                            if (t === g) {
                                T = K.isBracket = true;
                                O = K.isGlob = true;
                                G = true;
                                break;
                            }
                        }
                        if (C === true) {
                            continue;
                        }
                        break;
                    }
                    if (u.nonegate !== true && P === c && H === v) {
                        I = K.negated = true;
                        v++;
                        continue;
                    }
                    if (u.noparen !== true && P === f) {
                        O = K.isGlob = true;
                        if (C === true) {
                            while(eos() !== true && (P = advance())){
                                if (P === f) {
                                    N = K.backslashes = true;
                                    P = advance();
                                    continue;
                                }
                                if (P === h) {
                                    G = true;
                                    break;
                                }
                            }
                            continue;
                        }
                        break;
                    }
                    if (O === true) {
                        G = true;
                        if (C === true) {
                            continue;
                        }
                        break;
                    }
                }
                if (u.noext === true) {
                    k = false;
                    O = false;
                }
                let U = S;
                let X = "";
                let F = "";
                if (v > 0) {
                    X = S.slice(0, v);
                    S = S.slice(v);
                    d -= v;
                }
                if (U && O === true && d > 0) {
                    U = S.slice(0, d);
                    F = S.slice(d);
                } else if (O === true) {
                    U = "";
                    F = S;
                } else {
                    U = S;
                }
                if (U && U !== "" && U !== "/" && U !== S) {
                    if (isPathSeparator(U.charCodeAt(U.length - 1))) {
                        U = U.slice(0, -1);
                    }
                }
                if (u.unescape === true) {
                    if (F) F = n.removeBackslashes(F);
                    if (U && N === true) {
                        U = n.removeBackslashes(U);
                    }
                }
                const Q = {
                    prefix: X,
                    input: t,
                    start: v,
                    base: U,
                    glob: F,
                    isBrace: L,
                    isBracket: T,
                    isGlob: O,
                    isExtglob: k,
                    isGlobstar: m,
                    negated: I,
                    negatedExtglob: B
                };
                if (u.tokens === true) {
                    Q.maxDepth = 0;
                    if (!isPathSeparator(P)) {
                        $.push(K);
                    }
                    Q.tokens = $;
                }
                if (u.parts === true || u.tokens === true) {
                    let e;
                    for(let n = 0; n < y.length; n++){
                        const o = e ? e + 1 : v;
                        const s = y[n];
                        const r = t.slice(o, s);
                        if (u.tokens) {
                            if (n === 0 && v !== 0) {
                                $[n].isPrefix = true;
                                $[n].value = X;
                            } else {
                                $[n].value = r;
                            }
                            depth($[n]);
                            Q.maxDepth += $[n].depth;
                        }
                        if (n !== 0 || r !== "") {
                            x.push(r);
                        }
                        e = s;
                    }
                    if (e && e + 1 < t.length) {
                        const n = t.slice(e + 1);
                        x.push(n);
                        if (u.tokens) {
                            $[$.length - 1].value = n;
                            depth($[$.length - 1]);
                            Q.maxDepth += $[$.length - 1].depth;
                        }
                    }
                    Q.slashes = y;
                    Q.parts = x;
                }
                return Q;
            };
            t.exports = scan;
        },
        96: (t, e, u)=>{
            const { REGEX_BACKSLASH: n, REGEX_REMOVE_BACKSLASH: o, REGEX_SPECIAL_CHARS: s, REGEX_SPECIAL_CHARS_GLOBAL: r } = u(154);
            e.isObject = (t)=>t !== null && typeof t === "object" && !Array.isArray(t);
            e.hasRegexChars = (t)=>s.test(t);
            e.isRegexChar = (t)=>t.length === 1 && e.hasRegexChars(t);
            e.escapeRegex = (t)=>t.replace(r, "\\$1");
            e.toPosixSlashes = (t)=>t.replace(n, "/");
            e.removeBackslashes = (t)=>t.replace(o, (t)=>t === "\\" ? "" : t);
            e.escapeLast = (t, u, n)=>{
                const o = t.lastIndexOf(u, n);
                if (o === -1) return t;
                if (t[o - 1] === "\\") return e.escapeLast(t, u, o - 1);
                return `${t.slice(0, o)}\\${t.slice(o)}`;
            };
            e.removePrefix = (t, e = {})=>{
                let u = t;
                if (u.startsWith("./")) {
                    u = u.slice(2);
                    e.prefix = "./";
                }
                return u;
            };
            e.wrapOutput = (t, e = {}, u = {})=>{
                const n = u.contains ? "" : "^";
                const o = u.contains ? "" : "$";
                let s = `${n}(?:${t})${o}`;
                if (e.negated === true) {
                    s = `(?:^(?!${s}).*$)`;
                }
                return s;
            };
            e.basename = (t, { windows: e } = {})=>{
                const u = t.split(e ? /[\\/]/ : "/");
                const n = u[u.length - 1];
                if (n === "") {
                    return u[u.length - 2];
                }
                return n;
            };
        }
    };
    var e = {};
    function __nccwpck_require__(u) {
        var n = e[u];
        if (n !== undefined) {
            return n.exports;
        }
        var o = e[u] = {
            exports: {}
        };
        var s = true;
        try {
            t[u](o, o.exports, __nccwpck_require__);
            s = false;
        } finally{
            if (s) delete e[u];
        }
        return o.exports;
    }
    if (typeof __nccwpck_require__ !== "undefined") __nccwpck_require__.ab = __dirname + "/";
    var u = __nccwpck_require__(170);
    module.exports = u;
})();
}}),
"[project]/node_modules/next/dist/shared/lib/match-local-pattern.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    hasLocalMatch: null,
    matchLocalPattern: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    hasLocalMatch: function() {
        return hasLocalMatch;
    },
    matchLocalPattern: function() {
        return matchLocalPattern;
    }
});
const _picomatch = __turbopack_require__("[project]/node_modules/next/dist/compiled/picomatch/index.js [app-client] (ecmascript)");
function matchLocalPattern(pattern, url) {
    if (pattern.search !== undefined) {
        if (pattern.search !== url.search) {
            return false;
        }
    }
    var _pattern_pathname;
    if (!(0, _picomatch.makeRe)((_pattern_pathname = pattern.pathname) != null ? _pattern_pathname : '**', {
        dot: true
    }).test(url.pathname)) {
        return false;
    }
    return true;
}
function hasLocalMatch(localPatterns, urlPathAndQuery) {
    if (!localPatterns) {
        // if the user didn't define "localPatterns", we allow all local images
        return true;
    }
    const url = new URL(urlPathAndQuery, 'http://n');
    return localPatterns.some((p)=>matchLocalPattern(p, url));
} //# sourceMappingURL=match-local-pattern.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/match-remote-pattern.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    hasRemoteMatch: null,
    matchRemotePattern: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    hasRemoteMatch: function() {
        return hasRemoteMatch;
    },
    matchRemotePattern: function() {
        return matchRemotePattern;
    }
});
const _picomatch = __turbopack_require__("[project]/node_modules/next/dist/compiled/picomatch/index.js [app-client] (ecmascript)");
function matchRemotePattern(pattern, url) {
    if (pattern.protocol !== undefined) {
        const actualProto = url.protocol.slice(0, -1);
        if (pattern.protocol !== actualProto) {
            return false;
        }
    }
    if (pattern.port !== undefined) {
        if (pattern.port !== url.port) {
            return false;
        }
    }
    if (pattern.hostname === undefined) {
        throw new Error("Pattern should define hostname but found\n" + JSON.stringify(pattern));
    } else {
        if (!(0, _picomatch.makeRe)(pattern.hostname).test(url.hostname)) {
            return false;
        }
    }
    if (pattern.search !== undefined) {
        if (pattern.search !== url.search) {
            return false;
        }
    }
    var _pattern_pathname;
    // Should be the same as writeImagesManifest()
    if (!(0, _picomatch.makeRe)((_pattern_pathname = pattern.pathname) != null ? _pattern_pathname : '**', {
        dot: true
    }).test(url.pathname)) {
        return false;
    }
    return true;
}
function hasRemoteMatch(domains, remotePatterns, url) {
    return domains.some((domain)=>url.hostname === domain) || remotePatterns.some((p)=>matchRemotePattern(p, url));
} //# sourceMappingURL=match-remote-pattern.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/image-loader.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const DEFAULT_Q = 75;
function defaultLoader(param) {
    let { config, src, width, quality } = param;
    var _config_qualities;
    if ("TURBOPACK compile-time truthy", 1) {
        const missingValues = [];
        // these should always be provided but make sure they are
        if (!src) missingValues.push('src');
        if (!width) missingValues.push('width');
        if (missingValues.length > 0) {
            throw new Error("Next Image Optimization requires " + missingValues.join(', ') + " to be provided. Make sure you pass them as props to the `next/image` component. Received: " + JSON.stringify({
                src,
                width,
                quality
            }));
        }
        if (src.startsWith('//')) {
            throw new Error('Failed to parse src "' + src + '" on `next/image`, protocol-relative URL (//) must be changed to an absolute URL (http:// or https://)');
        }
        if (src.startsWith('/') && config.localPatterns) {
            if ("TURBOPACK compile-time truthy", 1) {
                // We use dynamic require because this should only error in development
                const { hasLocalMatch } = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/match-local-pattern.js [app-client] (ecmascript)");
                if (!hasLocalMatch(config.localPatterns, src)) {
                    throw new Error("Invalid src prop (" + src + ") on `next/image` does not match `images.localPatterns` configured in your `next.config.js`\n" + "See more info: https://nextjs.org/docs/messages/next-image-unconfigured-localpatterns");
                }
            }
        }
        if (!src.startsWith('/') && (config.domains || config.remotePatterns)) {
            let parsedSrc;
            try {
                parsedSrc = new URL(src);
            } catch (err) {
                console.error(err);
                throw new Error('Failed to parse src "' + src + '" on `next/image`, if using relative image it must start with a leading slash "/" or be an absolute URL (http:// or https://)');
            }
            if ("TURBOPACK compile-time truthy", 1) {
                // We use dynamic require because this should only error in development
                const { hasRemoteMatch } = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/match-remote-pattern.js [app-client] (ecmascript)");
                if (!hasRemoteMatch(config.domains, config.remotePatterns, parsedSrc)) {
                    throw new Error("Invalid src prop (" + src + ') on `next/image`, hostname "' + parsedSrc.hostname + '" is not configured under images in your `next.config.js`\n' + "See more info: https://nextjs.org/docs/messages/next-image-unconfigured-host");
                }
            }
        }
        if (quality && config.qualities && !config.qualities.includes(quality)) {
            throw new Error("Invalid quality prop (" + quality + ") on `next/image` does not match `images.qualities` configured in your `next.config.js`\n" + "See more info: https://nextjs.org/docs/messages/next-image-unconfigured-qualities");
        }
    }
    const q = quality || ((_config_qualities = config.qualities) == null ? void 0 : _config_qualities.reduce((prev, cur)=>Math.abs(cur - DEFAULT_Q) < Math.abs(prev - DEFAULT_Q) ? cur : prev)) || DEFAULT_Q;
    return config.path + "?url=" + encodeURIComponent(src) + "&w=" + width + "&q=" + q + (src.startsWith('/_next/static/media/') && ("TURBOPACK compile-time value", false) ? ("TURBOPACK unreachable", undefined) : '');
}
// We use this to determine if the import is the default loader
// or a custom loader defined by the user in next.config.js
defaultLoader.__next_img_default = true;
const _default = defaultLoader; //# sourceMappingURL=image-loader.js.map
}}),
"[project]/node_modules/next/dist/client/use-merged-ref.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useMergedRef", {
    enumerable: true,
    get: function() {
        return useMergedRef;
    }
});
const _react = __turbopack_require__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
function useMergedRef(refA, refB) {
    const cleanupA = (0, _react.useRef)(()=>{});
    const cleanupB = (0, _react.useRef)(()=>{});
    return (0, _react.useMemo)(()=>{
        if (!refA || !refB) {
            return refA || refB;
        }
        return (current)=>{
            if (current === null) {
                cleanupA.current();
                cleanupB.current();
            } else {
                cleanupA.current = applyRef(refA, current);
                cleanupB.current = applyRef(refB, current);
            }
        };
    }, [
        refA,
        refB
    ]);
}
function applyRef(refA, current) {
    if (typeof refA === 'function') {
        const cleanup = refA(current);
        if (typeof cleanup === 'function') {
            return cleanup;
        } else {
            return ()=>refA(null);
        }
    } else {
        refA.current = current;
        return ()=>{
            refA.current = null;
        };
    }
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=use-merged-ref.js.map
}}),
"[project]/node_modules/next/dist/client/image-component.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Image", {
    enumerable: true,
    get: function() {
        return Image;
    }
});
const _interop_require_default = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _interop_require_wildcard = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs [app-client] (ecmascript)");
const _jsxruntime = __turbopack_require__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_wildcard._(__turbopack_require__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const _reactdom = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/compiled/react-dom/index.js [app-client] (ecmascript)"));
const _head = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/shared/lib/head.js [app-client] (ecmascript)"));
const _getimgprops = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/get-img-props.js [app-client] (ecmascript)");
const _imageconfig = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/image-config.js [app-client] (ecmascript)");
const _imageconfigcontextsharedruntime = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/image-config-context.shared-runtime.js [app-client] (ecmascript)");
const _warnonce = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/utils/warn-once.js [app-client] (ecmascript)");
const _routercontextsharedruntime = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router-context.shared-runtime.js [app-client] (ecmascript)");
const _imageloader = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/shared/lib/image-loader.js [app-client] (ecmascript)"));
const _usemergedref = __turbopack_require__("[project]/node_modules/next/dist/client/use-merged-ref.js [app-client] (ecmascript)");
// This is replaced by webpack define plugin
const configEnv = ("TURBOPACK compile-time value", JSON.parse('{"deviceSizes":[640,750,828,1080,1200,1920,2048,3840],"imageSizes":[16,32,48,64,96,128,256,384],"path":"/_next/image","loader":"default","dangerouslyAllowSVG":false,"unoptimized":false,"domains":[],"remotePatterns":[{"protocol":"https","hostname":"cdn.sanity.io"}]}'));
if (typeof window === 'undefined') {
    ;
    globalThis.__NEXT_IMAGE_IMPORTED = true;
}
// See https://stackoverflow.com/q/39777833/266535 for why we use this ref
// handler instead of the img's onLoad attribute.
function handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized, sizesInput) {
    const src = img == null ? void 0 : img.src;
    if (!img || img['data-loaded-src'] === src) {
        return;
    }
    img['data-loaded-src'] = src;
    const p = 'decode' in img ? img.decode() : Promise.resolve();
    p.catch(()=>{}).then(()=>{
        if (!img.parentElement || !img.isConnected) {
            // Exit early in case of race condition:
            // - onload() is called
            // - decode() is called but incomplete
            // - unmount is called
            // - decode() completes
            return;
        }
        if (placeholder !== 'empty') {
            setBlurComplete(true);
        }
        if (onLoadRef == null ? void 0 : onLoadRef.current) {
            // Since we don't have the SyntheticEvent here,
            // we must create one with the same shape.
            // See https://reactjs.org/docs/events.html
            const event = new Event('load');
            Object.defineProperty(event, 'target', {
                writable: false,
                value: img
            });
            let prevented = false;
            let stopped = false;
            onLoadRef.current({
                ...event,
                nativeEvent: event,
                currentTarget: img,
                target: img,
                isDefaultPrevented: ()=>prevented,
                isPropagationStopped: ()=>stopped,
                persist: ()=>{},
                preventDefault: ()=>{
                    prevented = true;
                    event.preventDefault();
                },
                stopPropagation: ()=>{
                    stopped = true;
                    event.stopPropagation();
                }
            });
        }
        if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {
            onLoadingCompleteRef.current(img);
        }
        if ("TURBOPACK compile-time truthy", 1) {
            const origSrc = new URL(src, 'http://n').searchParams.get('url') || src;
            if (img.getAttribute('data-nimg') === 'fill') {
                if (!unoptimized && (!sizesInput || sizesInput === '100vw')) {
                    let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;
                    if (widthViewportRatio < 0.6) {
                        if (sizesInput === '100vw') {
                            (0, _warnonce.warnOnce)('Image with src "' + origSrc + '" has "fill" prop and "sizes" prop of "100vw", but image is not rendered at full viewport width. Please adjust "sizes" to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes');
                        } else {
                            (0, _warnonce.warnOnce)('Image with src "' + origSrc + '" has "fill" but is missing "sizes" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes');
                        }
                    }
                }
                if (img.parentElement) {
                    const { position } = window.getComputedStyle(img.parentElement);
                    const valid = [
                        'absolute',
                        'fixed',
                        'relative'
                    ];
                    if (!valid.includes(position)) {
                        (0, _warnonce.warnOnce)('Image with src "' + origSrc + '" has "fill" and parent element with invalid "position". Provided "' + position + '" should be one of ' + valid.map(String).join(',') + ".");
                    }
                }
                if (img.height === 0) {
                    (0, _warnonce.warnOnce)('Image with src "' + origSrc + '" has "fill" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.');
                }
            }
            const heightModified = img.height.toString() !== img.getAttribute('height');
            const widthModified = img.width.toString() !== img.getAttribute('width');
            if (heightModified && !widthModified || !heightModified && widthModified) {
                (0, _warnonce.warnOnce)('Image with src "' + origSrc + '" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles \'width: "auto"\' or \'height: "auto"\' to maintain the aspect ratio.');
            }
        }
    });
}
function getDynamicProps(fetchPriority) {
    if (Boolean(_react.use)) {
        // In React 19.0.0 or newer, we must use camelCase
        // prop to avoid "Warning: Invalid DOM property".
        // See https://github.com/facebook/react/pull/25927
        return {
            fetchPriority
        };
    }
    // In React 18.2.0 or older, we must use lowercase prop
    // to avoid "Warning: Invalid DOM property".
    return {
        fetchpriority: fetchPriority
    };
}
const ImageElement = /*#__PURE__*/ (0, _react.forwardRef)((param, forwardedRef)=>{
    let { src, srcSet, sizes, height, width, decoding, className, style, fetchPriority, placeholder, loading, unoptimized, fill, onLoadRef, onLoadingCompleteRef, setBlurComplete, setShowAltText, sizesInput, onLoad, onError, ...rest } = param;
    const ownRef = (0, _react.useCallback)((img)=>{
        if (!img) {
            return;
        }
        if (onError) {
            // If the image has an error before react hydrates, then the error is lost.
            // The workaround is to wait until the image is mounted which is after hydration,
            // then we set the src again to trigger the error handler (if there was an error).
            // eslint-disable-next-line no-self-assign
            img.src = img.src;
        }
        if ("TURBOPACK compile-time truthy", 1) {
            if (!src) {
                console.error('Image is missing required "src" property:', img);
            }
            if (img.getAttribute('alt') === null) {
                console.error('Image is missing required "alt" property. Please add Alternative Text to describe the image for screen readers and search engines.');
            }
        }
        if (img.complete) {
            handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized, sizesInput);
        }
    }, [
        src,
        placeholder,
        onLoadRef,
        onLoadingCompleteRef,
        setBlurComplete,
        onError,
        unoptimized,
        sizesInput
    ]);
    const ref = (0, _usemergedref.useMergedRef)(forwardedRef, ownRef);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
        ...rest,
        ...getDynamicProps(fetchPriority),
        // It's intended to keep `loading` before `src` because React updates
        // props in order which causes Safari/Firefox to not lazy load properly.
        // See https://github.com/facebook/react/issues/25883
        loading: loading,
        width: width,
        height: height,
        decoding: decoding,
        "data-nimg": fill ? 'fill' : '1',
        className: className,
        style: style,
        // It's intended to keep `src` the last attribute because React updates
        // attributes in order. If we keep `src` the first one, Safari will
        // immediately start to fetch `src`, before `sizes` and `srcSet` are even
        // updated by React. That causes multiple unnecessary requests if `srcSet`
        // and `sizes` are defined.
        // This bug cannot be reproduced in Chrome or Firefox.
        sizes: sizes,
        srcSet: srcSet,
        src: src,
        ref: ref,
        onLoad: (event)=>{
            const img = event.currentTarget;
            handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized, sizesInput);
        },
        onError: (event)=>{
            // if the real image fails to load, this will ensure "alt" is visible
            setShowAltText(true);
            if (placeholder !== 'empty') {
                // If the real image fails to load, this will still remove the placeholder.
                setBlurComplete(true);
            }
            if (onError) {
                onError(event);
            }
        }
    });
});
function ImagePreload(param) {
    let { isAppRouter, imgAttributes } = param;
    const opts = {
        as: 'image',
        imageSrcSet: imgAttributes.srcSet,
        imageSizes: imgAttributes.sizes,
        crossOrigin: imgAttributes.crossOrigin,
        referrerPolicy: imgAttributes.referrerPolicy,
        ...getDynamicProps(imgAttributes.fetchPriority)
    };
    if (isAppRouter && _reactdom.default.preload) {
        // See https://github.com/facebook/react/pull/26940
        _reactdom.default.preload(imgAttributes.src, opts);
        return null;
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_head.default, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("link", {
            rel: "preload",
            // Note how we omit the `href` attribute, as it would only be relevant
            // for browsers that do not support `imagesrcset`, and in those cases
            // it would cause the incorrect image to be preloaded.
            //
            // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset
            href: imgAttributes.srcSet ? undefined : imgAttributes.src,
            ...opts
        }, '__nimg-' + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes)
    });
}
const Image = /*#__PURE__*/ (0, _react.forwardRef)((props, forwardedRef)=>{
    const pagesRouter = (0, _react.useContext)(_routercontextsharedruntime.RouterContext);
    // We're in the app directory if there is no pages router.
    const isAppRouter = !pagesRouter;
    const configContext = (0, _react.useContext)(_imageconfigcontextsharedruntime.ImageConfigContext);
    const config = (0, _react.useMemo)(()=>{
        var _c_qualities;
        const c = configEnv || configContext || _imageconfig.imageConfigDefault;
        const allSizes = [
            ...c.deviceSizes,
            ...c.imageSizes
        ].sort((a, b)=>a - b);
        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);
        const qualities = (_c_qualities = c.qualities) == null ? void 0 : _c_qualities.sort((a, b)=>a - b);
        return {
            ...c,
            allSizes,
            deviceSizes,
            qualities
        };
    }, [
        configContext
    ]);
    const { onLoad, onLoadingComplete } = props;
    const onLoadRef = (0, _react.useRef)(onLoad);
    (0, _react.useEffect)(()=>{
        onLoadRef.current = onLoad;
    }, [
        onLoad
    ]);
    const onLoadingCompleteRef = (0, _react.useRef)(onLoadingComplete);
    (0, _react.useEffect)(()=>{
        onLoadingCompleteRef.current = onLoadingComplete;
    }, [
        onLoadingComplete
    ]);
    const [blurComplete, setBlurComplete] = (0, _react.useState)(false);
    const [showAltText, setShowAltText] = (0, _react.useState)(false);
    const { props: imgAttributes, meta: imgMeta } = (0, _getimgprops.getImgProps)(props, {
        defaultLoader: _imageloader.default,
        imgConf: config,
        blurComplete,
        showAltText
    });
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(ImageElement, {
                ...imgAttributes,
                unoptimized: imgMeta.unoptimized,
                placeholder: imgMeta.placeholder,
                fill: imgMeta.fill,
                onLoadRef: onLoadRef,
                onLoadingCompleteRef: onLoadingCompleteRef,
                setBlurComplete: setBlurComplete,
                setShowAltText: setShowAltText,
                sizesInput: props.sizes,
                ref: forwardedRef
            }),
            imgMeta.priority ? /*#__PURE__*/ (0, _jsxruntime.jsx)(ImagePreload, {
                isAppRouter: isAppRouter,
                imgAttributes: imgAttributes
            }) : null
        ]
    });
});
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=image-component.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/image-external.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    default: null,
    getImageProps: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    default: function() {
        return _default;
    },
    getImageProps: function() {
        return getImageProps;
    }
});
const _interop_require_default = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _getimgprops = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/get-img-props.js [app-client] (ecmascript)");
const _imagecomponent = __turbopack_require__("[project]/node_modules/next/dist/client/image-component.js [app-client] (ecmascript)");
const _imageloader = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/shared/lib/image-loader.js [app-client] (ecmascript)"));
function getImageProps(imgProps) {
    const { props } = (0, _getimgprops.getImgProps)(imgProps, {
        defaultLoader: _imageloader.default,
        // This is replaced by webpack define plugin
        imgConf: ("TURBOPACK compile-time value", JSON.parse('{"deviceSizes":[640,750,828,1080,1200,1920,2048,3840],"imageSizes":[16,32,48,64,96,128,256,384],"path":"/_next/image","loader":"default","dangerouslyAllowSVG":false,"unoptimized":false,"domains":[],"remotePatterns":[{"protocol":"https","hostname":"cdn.sanity.io"}]}'))
    });
    // Normally we don't care about undefined props because we pass to JSX,
    // but this exported function could be used by the end user for anything
    // so we delete undefined props to clean it up a little.
    for (const [key, value] of Object.entries(props)){
        if (value === undefined) {
            delete props[key];
        }
    }
    return {
        props
    };
}
const _default = _imagecomponent.Image; //# sourceMappingURL=image-external.js.map
}}),
"[project]/node_modules/next/image.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
module.exports = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/image-external.js [app-client] (ecmascript)");
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/querystring.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    assign: null,
    searchParamsToUrlQuery: null,
    urlQueryToSearchParams: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    assign: function() {
        return assign;
    },
    searchParamsToUrlQuery: function() {
        return searchParamsToUrlQuery;
    },
    urlQueryToSearchParams: function() {
        return urlQueryToSearchParams;
    }
});
function searchParamsToUrlQuery(searchParams) {
    const query = {};
    searchParams.forEach((value, key)=>{
        if (typeof query[key] === 'undefined') {
            query[key] = value;
        } else if (Array.isArray(query[key])) {
            ;
            query[key].push(value);
        } else {
            query[key] = [
                query[key],
                value
            ];
        }
    });
    return query;
}
function stringifyUrlQueryParam(param) {
    if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {
        return String(param);
    } else {
        return '';
    }
}
function urlQueryToSearchParams(urlQuery) {
    const result = new URLSearchParams();
    Object.entries(urlQuery).forEach((param)=>{
        let [key, value] = param;
        if (Array.isArray(value)) {
            value.forEach((item)=>result.append(key, stringifyUrlQueryParam(item)));
        } else {
            result.set(key, stringifyUrlQueryParam(value));
        }
    });
    return result;
}
function assign(target) {
    for(var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
        searchParamsList[_key - 1] = arguments[_key];
    }
    searchParamsList.forEach((searchParams)=>{
        Array.from(searchParams.keys()).forEach((key)=>target.delete(key));
        searchParams.forEach((value, key)=>target.append(key, value));
    });
    return target;
} //# sourceMappingURL=querystring.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/format-url.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
// Format function modified from nodejs
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    formatUrl: null,
    formatWithValidation: null,
    urlObjectKeys: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    formatUrl: function() {
        return formatUrl;
    },
    formatWithValidation: function() {
        return formatWithValidation;
    },
    urlObjectKeys: function() {
        return urlObjectKeys;
    }
});
const _interop_require_wildcard = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs [app-client] (ecmascript)");
const _querystring = /*#__PURE__*/ _interop_require_wildcard._(__turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/querystring.js [app-client] (ecmascript)"));
const slashedProtocols = /https?|ftp|gopher|file/;
function formatUrl(urlObj) {
    let { auth, hostname } = urlObj;
    let protocol = urlObj.protocol || '';
    let pathname = urlObj.pathname || '';
    let hash = urlObj.hash || '';
    let query = urlObj.query || '';
    let host = false;
    auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';
    if (urlObj.host) {
        host = auth + urlObj.host;
    } else if (hostname) {
        host = auth + (~hostname.indexOf(':') ? "[" + hostname + "]" : hostname);
        if (urlObj.port) {
            host += ':' + urlObj.port;
        }
    }
    if (query && typeof query === 'object') {
        query = String(_querystring.urlQueryToSearchParams(query));
    }
    let search = urlObj.search || query && "?" + query || '';
    if (protocol && !protocol.endsWith(':')) protocol += ':';
    if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {
        host = '//' + (host || '');
        if (pathname && pathname[0] !== '/') pathname = '/' + pathname;
    } else if (!host) {
        host = '';
    }
    if (hash && hash[0] !== '#') hash = '#' + hash;
    if (search && search[0] !== '?') search = '?' + search;
    pathname = pathname.replace(/[?#]/g, encodeURIComponent);
    search = search.replace('#', '%23');
    return "" + protocol + host + pathname + search + hash;
}
const urlObjectKeys = [
    'auth',
    'hash',
    'host',
    'hostname',
    'href',
    'path',
    'pathname',
    'port',
    'protocol',
    'query',
    'search',
    'slashes'
];
function formatWithValidation(url) {
    if ("TURBOPACK compile-time truthy", 1) {
        if (url !== null && typeof url === 'object') {
            Object.keys(url).forEach((key)=>{
                if (!urlObjectKeys.includes(key)) {
                    console.warn("Unknown key passed via urlObject into url.format: " + key);
                }
            });
        }
    }
    return formatUrl(url);
} //# sourceMappingURL=format-url.js.map
}}),
"[project]/node_modules/next/dist/client/request-idle-callback.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    cancelIdleCallback: null,
    requestIdleCallback: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    cancelIdleCallback: function() {
        return cancelIdleCallback;
    },
    requestIdleCallback: function() {
        return requestIdleCallback;
    }
});
const requestIdleCallback = typeof self !== 'undefined' && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function(cb) {
    let start = Date.now();
    return self.setTimeout(function() {
        cb({
            didTimeout: false,
            timeRemaining: function() {
                return Math.max(0, 50 - (Date.now() - start));
            }
        });
    }, 1);
};
const cancelIdleCallback = typeof self !== 'undefined' && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function(id) {
    return clearTimeout(id);
};
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=request-idle-callback.js.map
}}),
"[project]/node_modules/next/dist/client/use-intersection.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useIntersection", {
    enumerable: true,
    get: function() {
        return useIntersection;
    }
});
const _react = __turbopack_require__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
const _requestidlecallback = __turbopack_require__("[project]/node_modules/next/dist/client/request-idle-callback.js [app-client] (ecmascript)");
const hasIntersectionObserver = typeof IntersectionObserver === 'function';
const observers = new Map();
const idList = [];
function createObserver(options) {
    const id = {
        root: options.root || null,
        margin: options.rootMargin || ''
    };
    const existing = idList.find((obj)=>obj.root === id.root && obj.margin === id.margin);
    let instance;
    if (existing) {
        instance = observers.get(existing);
        if (instance) {
            return instance;
        }
    }
    const elements = new Map();
    const observer = new IntersectionObserver((entries)=>{
        entries.forEach((entry)=>{
            const callback = elements.get(entry.target);
            const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;
            if (callback && isVisible) {
                callback(isVisible);
            }
        });
    }, options);
    instance = {
        id,
        observer,
        elements
    };
    idList.push(id);
    observers.set(id, instance);
    return instance;
}
function observe(element, callback, options) {
    const { id, observer, elements } = createObserver(options);
    elements.set(element, callback);
    observer.observe(element);
    return function unobserve() {
        elements.delete(element);
        observer.unobserve(element);
        // Destroy observer when there's nothing left to watch:
        if (elements.size === 0) {
            observer.disconnect();
            observers.delete(id);
            const index = idList.findIndex((obj)=>obj.root === id.root && obj.margin === id.margin);
            if (index > -1) {
                idList.splice(index, 1);
            }
        }
    };
}
function useIntersection(param) {
    let { rootRef, rootMargin, disabled } = param;
    const isDisabled = disabled || !hasIntersectionObserver;
    const [visible, setVisible] = (0, _react.useState)(false);
    const elementRef = (0, _react.useRef)(null);
    const setElement = (0, _react.useCallback)((element)=>{
        elementRef.current = element;
    }, []);
    (0, _react.useEffect)(()=>{
        if (hasIntersectionObserver) {
            if (isDisabled || visible) return;
            const element = elementRef.current;
            if (element && element.tagName) {
                const unobserve = observe(element, (isVisible)=>isVisible && setVisible(isVisible), {
                    root: rootRef == null ? void 0 : rootRef.current,
                    rootMargin
                });
                return unobserve;
            }
        } else {
            if (!visible) {
                const idleCallback = (0, _requestidlecallback.requestIdleCallback)(()=>setVisible(true));
                return ()=>(0, _requestidlecallback.cancelIdleCallback)(idleCallback);
            }
        }
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        isDisabled,
        rootMargin,
        rootRef,
        visible,
        elementRef.current
    ]);
    const resetVisible = (0, _react.useCallback)(()=>{
        setVisible(false);
    }, []);
    return [
        setElement,
        visible,
        resetVisible
    ];
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=use-intersection.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/utils.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    DecodeError: null,
    MiddlewareNotFoundError: null,
    MissingStaticPage: null,
    NormalizeError: null,
    PageNotFoundError: null,
    SP: null,
    ST: null,
    WEB_VITALS: null,
    execOnce: null,
    getDisplayName: null,
    getLocationOrigin: null,
    getURL: null,
    isAbsoluteUrl: null,
    isResSent: null,
    loadGetInitialProps: null,
    normalizeRepeatedSlashes: null,
    stringifyError: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    DecodeError: function() {
        return DecodeError;
    },
    MiddlewareNotFoundError: function() {
        return MiddlewareNotFoundError;
    },
    MissingStaticPage: function() {
        return MissingStaticPage;
    },
    NormalizeError: function() {
        return NormalizeError;
    },
    PageNotFoundError: function() {
        return PageNotFoundError;
    },
    SP: function() {
        return SP;
    },
    ST: function() {
        return ST;
    },
    WEB_VITALS: function() {
        return WEB_VITALS;
    },
    execOnce: function() {
        return execOnce;
    },
    getDisplayName: function() {
        return getDisplayName;
    },
    getLocationOrigin: function() {
        return getLocationOrigin;
    },
    getURL: function() {
        return getURL;
    },
    isAbsoluteUrl: function() {
        return isAbsoluteUrl;
    },
    isResSent: function() {
        return isResSent;
    },
    loadGetInitialProps: function() {
        return loadGetInitialProps;
    },
    normalizeRepeatedSlashes: function() {
        return normalizeRepeatedSlashes;
    },
    stringifyError: function() {
        return stringifyError;
    }
});
const WEB_VITALS = [
    'CLS',
    'FCP',
    'FID',
    'INP',
    'LCP',
    'TTFB'
];
function execOnce(fn) {
    let used = false;
    let result;
    return function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
            args[_key] = arguments[_key];
        }
        if (!used) {
            used = true;
            result = fn(...args);
        }
        return result;
    };
}
// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1
// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3
const ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\d+\-.]*?:/;
const isAbsoluteUrl = (url)=>ABSOLUTE_URL_REGEX.test(url);
function getLocationOrigin() {
    const { protocol, hostname, port } = window.location;
    return protocol + "//" + hostname + (port ? ':' + port : '');
}
function getURL() {
    const { href } = window.location;
    const origin = getLocationOrigin();
    return href.substring(origin.length);
}
function getDisplayName(Component) {
    return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';
}
function isResSent(res) {
    return res.finished || res.headersSent;
}
function normalizeRepeatedSlashes(url) {
    const urlParts = url.split('?');
    const urlNoQuery = urlParts[0];
    return urlNoQuery // first we replace any non-encoded backslashes with forward
    // then normalize repeated forward slashes
    .replace(/\\/g, '/').replace(/\/\/+/g, '/') + (urlParts[1] ? "?" + urlParts.slice(1).join('?') : '');
}
async function loadGetInitialProps(App, ctx) {
    if ("TURBOPACK compile-time truthy", 1) {
        var _App_prototype;
        if ((_App_prototype = App.prototype) == null ? void 0 : _App_prototype.getInitialProps) {
            const message = '"' + getDisplayName(App) + '.getInitialProps()" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.';
            throw new Error(message);
        }
    }
    // when called from _app `ctx` is nested in `ctx`
    const res = ctx.res || ctx.ctx && ctx.ctx.res;
    if (!App.getInitialProps) {
        if (ctx.ctx && ctx.Component) {
            // @ts-ignore pageProps default
            return {
                pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)
            };
        }
        return {};
    }
    const props = await App.getInitialProps(ctx);
    if (res && isResSent(res)) {
        return props;
    }
    if (!props) {
        const message = '"' + getDisplayName(App) + '.getInitialProps()" should resolve to an object. But found "' + props + '" instead.';
        throw new Error(message);
    }
    if ("TURBOPACK compile-time truthy", 1) {
        if (Object.keys(props).length === 0 && !ctx.ctx) {
            console.warn("" + getDisplayName(App) + " returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps");
        }
    }
    return props;
}
const SP = typeof performance !== 'undefined';
const ST = SP && [
    'mark',
    'measure',
    'getEntriesByName'
].every((method)=>typeof performance[method] === 'function');
class DecodeError extends Error {
}
class NormalizeError extends Error {
}
class PageNotFoundError extends Error {
    constructor(page){
        super();
        this.code = 'ENOENT';
        this.name = 'PageNotFoundError';
        this.message = "Cannot find module for page: " + page;
    }
}
class MissingStaticPage extends Error {
    constructor(page, message){
        super();
        this.message = "Failed to load static file for page: " + page + " " + message;
    }
}
class MiddlewareNotFoundError extends Error {
    constructor(){
        super();
        this.code = 'ENOENT';
        this.message = "Cannot find the middleware module";
    }
}
function stringifyError(error) {
    return JSON.stringify({
        message: error.message,
        stack: error.stack
    });
} //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/next/dist/client/app-dir/link.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _interop_require_default = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _jsxruntime = __turbopack_require__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const _formaturl = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/format-url.js [app-client] (ecmascript)");
const _approutercontextsharedruntime = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/app-router-context.shared-runtime.js [app-client] (ecmascript)");
const _useintersection = __turbopack_require__("[project]/node_modules/next/dist/client/use-intersection.js [app-client] (ecmascript)");
const _routerreducertypes = __turbopack_require__("[project]/node_modules/next/dist/client/components/router-reducer/router-reducer-types.js [app-client] (ecmascript)");
const _usemergedref = __turbopack_require__("[project]/node_modules/next/dist/client/use-merged-ref.js [app-client] (ecmascript)");
const _utils = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/utils.js [app-client] (ecmascript)");
const _addbasepath = __turbopack_require__("[project]/node_modules/next/dist/client/add-base-path.js [app-client] (ecmascript)");
const _warnonce = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/utils/warn-once.js [app-client] (ecmascript)");
function prefetch(router, href, options) {
    if (typeof window === 'undefined') {
        return;
    }
    const doPrefetch = async ()=>{
        // note that `appRouter.prefetch()` is currently sync,
        // so we have to wrap this call in an async function to be able to catch() errors below.
        return router.prefetch(href, options);
    };
    // Prefetch the page if asked (only in the client)
    // We need to handle a prefetch error here since we may be
    // loading with priority which can reject but we don't
    // want to force navigation since this is only a prefetch
    doPrefetch().catch((err)=>{
        if (("TURBOPACK compile-time value", "development") !== 'production') {
            // rethrow to show invalid URL errors
            throw err;
        }
    });
}
function isModifiedEvent(event) {
    const eventTarget = event.currentTarget;
    const target = eventTarget.getAttribute('target');
    return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || // triggers resource download
    event.nativeEvent && event.nativeEvent.which === 2;
}
function linkClicked(e, router, href, as, replace, shallow, scroll) {
    const { nodeName } = e.currentTarget;
    // anchors inside an svg have a lowercase nodeName
    const isAnchorNodeName = nodeName.toUpperCase() === 'A';
    if (isAnchorNodeName && isModifiedEvent(e)) {
        // ignore click for browser’s default behavior
        return;
    }
    e.preventDefault();
    const navigate = ()=>{
        // If the router is an NextRouter instance it will have `beforePopState`
        const routerScroll = scroll != null ? scroll : true;
        if ('beforePopState' in router) {
            router[replace ? 'replace' : 'push'](href, as, {
                shallow,
                scroll: routerScroll
            });
        } else {
            router[replace ? 'replace' : 'push'](as || href, {
                scroll: routerScroll
            });
        }
    };
    _react.default.startTransition(navigate);
}
function formatStringOrUrl(urlObjOrString) {
    if (typeof urlObjOrString === 'string') {
        return urlObjOrString;
    }
    return (0, _formaturl.formatUrl)(urlObjOrString);
}
/**
 * A React component that extends the HTML `<a>` element to provide [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)
 * and client-side navigation between routes.
 *
 * It is the primary way to navigate between routes in Next.js.
 *
 * Read more: [Next.js docs: `<Link>`](https://nextjs.org/docs/app/api-reference/components/link)
 */ const Link = /*#__PURE__*/ _react.default.forwardRef(function LinkComponent(props, forwardedRef) {
    let children;
    const { href: hrefProp, as: asProp, children: childrenProp, prefetch: prefetchProp = null, passHref, replace, shallow, scroll, onClick, onMouseEnter: onMouseEnterProp, onTouchStart: onTouchStartProp, legacyBehavior = false, ...restProps } = props;
    children = childrenProp;
    if (legacyBehavior && (typeof children === 'string' || typeof children === 'number')) {
        children = /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
            children: children
        });
    }
    const router = _react.default.useContext(_approutercontextsharedruntime.AppRouterContext);
    const prefetchEnabled = prefetchProp !== false;
    /**
     * The possible states for prefetch are:
     * - null: this is the default "auto" mode, where we will prefetch partially if the link is in the viewport
     * - true: we will prefetch if the link is visible and prefetch the full page, not just partially
     * - false: we will not prefetch if in the viewport at all
     */ const appPrefetchKind = prefetchProp === null ? _routerreducertypes.PrefetchKind.AUTO : _routerreducertypes.PrefetchKind.FULL;
    if ("TURBOPACK compile-time truthy", 1) {
        function createPropError(args) {
            return new Error("Failed prop type: The prop `" + args.key + "` expects a " + args.expected + " in `<Link>`, but got `" + args.actual + "` instead." + (typeof window !== 'undefined' ? "\nOpen your browser's console to view the Component stack trace." : ''));
        }
        // TypeScript trick for type-guarding:
        const requiredPropsGuard = {
            href: true
        };
        const requiredProps = Object.keys(requiredPropsGuard);
        requiredProps.forEach((key)=>{
            if (key === 'href') {
                if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {
                    throw createPropError({
                        key,
                        expected: '`string` or `object`',
                        actual: props[key] === null ? 'null' : typeof props[key]
                    });
                }
            } else {
                // TypeScript trick for type-guarding:
                // eslint-disable-next-line @typescript-eslint/no-unused-vars
                const _ = key;
            }
        });
        // TypeScript trick for type-guarding:
        const optionalPropsGuard = {
            as: true,
            replace: true,
            scroll: true,
            shallow: true,
            passHref: true,
            prefetch: true,
            onClick: true,
            onMouseEnter: true,
            onTouchStart: true,
            legacyBehavior: true
        };
        const optionalProps = Object.keys(optionalPropsGuard);
        optionalProps.forEach((key)=>{
            const valType = typeof props[key];
            if (key === 'as') {
                if (props[key] && valType !== 'string' && valType !== 'object') {
                    throw createPropError({
                        key,
                        expected: '`string` or `object`',
                        actual: valType
                    });
                }
            } else if (key === 'onClick' || key === 'onMouseEnter' || key === 'onTouchStart') {
                if (props[key] && valType !== 'function') {
                    throw createPropError({
                        key,
                        expected: '`function`',
                        actual: valType
                    });
                }
            } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'prefetch' || key === 'legacyBehavior') {
                if (props[key] != null && valType !== 'boolean') {
                    throw createPropError({
                        key,
                        expected: '`boolean`',
                        actual: valType
                    });
                }
            } else {
                // TypeScript trick for type-guarding:
                // eslint-disable-next-line @typescript-eslint/no-unused-vars
                const _ = key;
            }
        });
    }
    if ("TURBOPACK compile-time truthy", 1) {
        if (props.locale) {
            (0, _warnonce.warnOnce)('The `locale` prop is not supported in `next/link` while using the `app` router. Read more about app router internalization: https://nextjs.org/docs/app/building-your-application/routing/internationalization');
        }
        if (!asProp) {
            let href;
            if (typeof hrefProp === 'string') {
                href = hrefProp;
            } else if (typeof hrefProp === 'object' && typeof hrefProp.pathname === 'string') {
                href = hrefProp.pathname;
            }
            if (href) {
                const hasDynamicSegment = href.split('/').some((segment)=>segment.startsWith('[') && segment.endsWith(']'));
                if (hasDynamicSegment) {
                    throw new Error("Dynamic href `" + href + "` found in <Link> while using the `/app` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href");
                }
            }
        }
    }
    const { href, as } = _react.default.useMemo({
        "Link.LinkComponent.useMemo": ()=>{
            const resolvedHref = formatStringOrUrl(hrefProp);
            return {
                href: resolvedHref,
                as: asProp ? formatStringOrUrl(asProp) : resolvedHref
            };
        }
    }["Link.LinkComponent.useMemo"], [
        hrefProp,
        asProp
    ]);
    const previousHref = _react.default.useRef(href);
    const previousAs = _react.default.useRef(as);
    // This will return the first child, if multiple are provided it will throw an error
    let child;
    if (legacyBehavior) {
        if ("TURBOPACK compile-time truthy", 1) {
            if (onClick) {
                console.warn('"onClick" was passed to <Link> with `href` of `' + hrefProp + '` but "legacyBehavior" was set. The legacy behavior requires onClick be set on the child of next/link');
            }
            if (onMouseEnterProp) {
                console.warn('"onMouseEnter" was passed to <Link> with `href` of `' + hrefProp + '` but "legacyBehavior" was set. The legacy behavior requires onMouseEnter be set on the child of next/link');
            }
            try {
                child = _react.default.Children.only(children);
            } catch (err) {
                if (!children) {
                    throw new Error("No children were passed to <Link> with `href` of `" + hrefProp + "` but one child is required https://nextjs.org/docs/messages/link-no-children");
                }
                throw new Error("Multiple children were passed to <Link> with `href` of `" + hrefProp + "` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children" + (typeof window !== 'undefined' ? " \nOpen your browser's console to view the Component stack trace." : ''));
            }
        } else {
            "TURBOPACK unreachable";
        }
    } else {
        if ("TURBOPACK compile-time truthy", 1) {
            if ((children == null ? void 0 : children.type) === 'a') {
                throw new Error('Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor');
            }
        }
    }
    const childRef = legacyBehavior ? child && typeof child === 'object' && child.ref : forwardedRef;
    const [setIntersectionRef, isVisible, resetVisible] = (0, _useintersection.useIntersection)({
        rootMargin: '200px'
    });
    const setIntersectionWithResetRef = _react.default.useCallback({
        "Link.LinkComponent.useCallback[setIntersectionWithResetRef]": (el)=>{
            // Before the link getting observed, check if visible state need to be reset
            if (previousAs.current !== as || previousHref.current !== href) {
                resetVisible();
                previousAs.current = as;
                previousHref.current = href;
            }
            setIntersectionRef(el);
        }
    }["Link.LinkComponent.useCallback[setIntersectionWithResetRef]"], [
        as,
        href,
        resetVisible,
        setIntersectionRef
    ]);
    const setRef = (0, _usemergedref.useMergedRef)(setIntersectionWithResetRef, childRef);
    // Prefetch the URL if we haven't already and it's visible.
    _react.default.useEffect({
        "Link.LinkComponent.useEffect": ()=>{
            // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.
            if ("TURBOPACK compile-time truthy", 1) {
                return;
            }
            "TURBOPACK unreachable";
        }
    }["Link.LinkComponent.useEffect"], [
        as,
        href,
        isVisible,
        prefetchEnabled,
        router,
        appPrefetchKind
    ]);
    const childProps = {
        ref: setRef,
        onClick (e) {
            if ("TURBOPACK compile-time truthy", 1) {
                if (!e) {
                    throw new Error('Component rendered inside next/link has to pass click event to "onClick" prop.');
                }
            }
            if (!legacyBehavior && typeof onClick === 'function') {
                onClick(e);
            }
            if (legacyBehavior && child.props && typeof child.props.onClick === 'function') {
                child.props.onClick(e);
            }
            if (!router) {
                return;
            }
            if (e.defaultPrevented) {
                return;
            }
            linkClicked(e, router, href, as, replace, shallow, scroll);
        },
        onMouseEnter (e) {
            if (!legacyBehavior && typeof onMouseEnterProp === 'function') {
                onMouseEnterProp(e);
            }
            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === 'function') {
                child.props.onMouseEnter(e);
            }
            if (!router) {
                return;
            }
            if ("TURBOPACK compile-time truthy", 1) {
                return;
            }
            "TURBOPACK unreachable";
        },
        onTouchStart: ("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : function onTouchStart(e) {
            if (!legacyBehavior && typeof onTouchStartProp === 'function') {
                onTouchStartProp(e);
            }
            if (legacyBehavior && child.props && typeof child.props.onTouchStart === 'function') {
                child.props.onTouchStart(e);
            }
            if (!router) {
                return;
            }
            if (!prefetchEnabled) {
                return;
            }
            prefetch(router, href, {
                kind: appPrefetchKind
            });
        }
    };
    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is
    // defined, we specify the current 'href', so that repetition is not needed by the user.
    // If the url is absolute, we can bypass the logic to prepend the basePath.
    if ((0, _utils.isAbsoluteUrl)(as)) {
        childProps.href = as;
    } else if (!legacyBehavior || passHref || child.type === 'a' && !('href' in child.props)) {
        childProps.href = (0, _addbasepath.addBasePath)(as);
    }
    return legacyBehavior ? /*#__PURE__*/ _react.default.cloneElement(child, childProps) : /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
        ...restProps,
        ...childProps,
        children: children
    });
});
const _default = Link;
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=link.js.map
}}),
"[project]/node_modules/react-tsparticles/esm/Utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "deepCompare": (()=>deepCompare)
});
const isObject = (val)=>typeof val === "object" && val !== null;
function deepCompare(obj1, obj2, excludeKeyFn = ()=>false) {
    if (!isObject(obj1) || !isObject(obj2)) {
        return obj1 === obj2;
    }
    const keys1 = Object.keys(obj1).filter((key)=>!excludeKeyFn(key)), keys2 = Object.keys(obj2).filter((key)=>!excludeKeyFn(key));
    if (keys1.length !== keys2.length) {
        return false;
    }
    for (const key of keys1){
        const value1 = obj1[key], value2 = obj2[key];
        if (isObject(value1) && isObject(value2)) {
            if (value1 === obj2 && value2 === obj1) {
                continue;
            }
            if (!deepCompare(value1, value2, excludeKeyFn)) {
                return false;
            }
        } else if (Array.isArray(value1) && Array.isArray(value2)) {
            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {
                return false;
            }
        } else if (value1 !== value2) {
            return false;
        }
    }
    return true;
}
function deepCompareArrays(arr1, arr2, excludeKeyFn) {
    if (arr1.length !== arr2.length) {
        return false;
    }
    for(let i = 0; i < arr1.length; i++){
        const val1 = arr1[i], val2 = arr2[i];
        if (Array.isArray(val1) && Array.isArray(val2)) {
            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {
                return false;
            }
        } else if (isObject(val1) && isObject(val2)) {
            if (!deepCompare(val1, val2, excludeKeyFn)) {
                return false;
            }
        } else if (val1 !== val2) {
            return false;
        }
    }
    return true;
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "errorPrefix": (()=>errorPrefix),
    "generatedAttribute": (()=>generatedAttribute),
    "mouseDownEvent": (()=>mouseDownEvent),
    "mouseLeaveEvent": (()=>mouseLeaveEvent),
    "mouseMoveEvent": (()=>mouseMoveEvent),
    "mouseOutEvent": (()=>mouseOutEvent),
    "mouseUpEvent": (()=>mouseUpEvent),
    "resizeEvent": (()=>resizeEvent),
    "touchCancelEvent": (()=>touchCancelEvent),
    "touchEndEvent": (()=>touchEndEvent),
    "touchMoveEvent": (()=>touchMoveEvent),
    "touchStartEvent": (()=>touchStartEvent),
    "visibilityChangeEvent": (()=>visibilityChangeEvent)
});
const generatedAttribute = "generated";
const mouseDownEvent = "pointerdown";
const mouseUpEvent = "pointerup";
const mouseLeaveEvent = "pointerleave";
const mouseOutEvent = "pointerout";
const mouseMoveEvent = "pointermove";
const touchStartEvent = "touchstart";
const touchEndEvent = "touchend";
const touchMoveEvent = "touchmove";
const touchCancelEvent = "touchcancel";
const resizeEvent = "resize";
const visibilityChangeEvent = "visibilitychange";
const errorPrefix = "tsParticles - Error";
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Vector3d": (()=>Vector3d)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
;
;
class Vector3d {
    constructor(xOrCoords, y, z){
        this._updateFromAngle = (angle, length)=>{
            this.x = Math.cos(angle) * length;
            this.y = Math.sin(angle) * length;
        };
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumber"])(xOrCoords) && xOrCoords) {
            this.x = xOrCoords.x;
            this.y = xOrCoords.y;
            const coords3d = xOrCoords;
            this.z = coords3d.z ? coords3d.z : 0;
        } else if (xOrCoords !== undefined && y !== undefined) {
            this.x = xOrCoords;
            this.y = y;
            this.z = z ?? 0;
        } else {
            throw new Error(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorPrefix"]} Vector3d not initialized correctly`);
        }
    }
    static get origin() {
        return Vector3d.create(0, 0, 0);
    }
    get angle() {
        return Math.atan2(this.y, this.x);
    }
    set angle(angle) {
        this._updateFromAngle(angle, this.length);
    }
    get length() {
        return Math.sqrt(this.getLengthSq());
    }
    set length(length) {
        this._updateFromAngle(this.angle, length);
    }
    static clone(source) {
        return Vector3d.create(source.x, source.y, source.z);
    }
    static create(x, y, z) {
        return new Vector3d(x, y, z);
    }
    add(v) {
        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);
    }
    addTo(v) {
        this.x += v.x;
        this.y += v.y;
        this.z += v.z;
    }
    copy() {
        return Vector3d.clone(this);
    }
    distanceTo(v) {
        return this.sub(v).length;
    }
    distanceToSq(v) {
        return this.sub(v).getLengthSq();
    }
    div(n) {
        return Vector3d.create(this.x / n, this.y / n, this.z / n);
    }
    divTo(n) {
        this.x /= n;
        this.y /= n;
        this.z /= n;
    }
    getLengthSq() {
        return this.x ** 2 + this.y ** 2;
    }
    mult(n) {
        return Vector3d.create(this.x * n, this.y * n, this.z * n);
    }
    multTo(n) {
        this.x *= n;
        this.y *= n;
        this.z *= n;
    }
    normalize() {
        const length = this.length;
        if (length != 0) {
            this.multTo(1.0 / length);
        }
    }
    rotate(angle) {
        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);
    }
    setTo(c) {
        this.x = c.x;
        this.y = c.y;
        const v3d = c;
        this.z = v3d.z ? v3d.z : 0;
    }
    sub(v) {
        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);
    }
    subFrom(v) {
        this.x -= v.x;
        this.y -= v.y;
        this.z -= v.z;
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Vector": (()=>Vector)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector3d$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js [app-client] (ecmascript)");
;
class Vector extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector3d$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector3d"] {
    constructor(xOrCoords, y){
        super(xOrCoords, y, 0);
    }
    static get origin() {
        return Vector.create(0, 0);
    }
    static clone(source) {
        return Vector.create(source.x, source.y);
    }
    static create(x, y) {
        return new Vector(x, y);
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "areBoundsInside": (()=>areBoundsInside),
    "arrayRandomIndex": (()=>arrayRandomIndex),
    "calculateBounds": (()=>calculateBounds),
    "circleBounce": (()=>circleBounce),
    "circleBounceDataFromParticle": (()=>circleBounceDataFromParticle),
    "deepExtend": (()=>deepExtend),
    "divMode": (()=>divMode),
    "divModeExecute": (()=>divModeExecute),
    "executeOnSingleOrMultiple": (()=>executeOnSingleOrMultiple),
    "findItemFromSingleOrMultiple": (()=>findItemFromSingleOrMultiple),
    "getLogger": (()=>getLogger),
    "getPosition": (()=>getPosition),
    "getSize": (()=>getSize),
    "hasMatchMedia": (()=>hasMatchMedia),
    "initParticleNumericAnimationValue": (()=>initParticleNumericAnimationValue),
    "isArray": (()=>isArray),
    "isBoolean": (()=>isBoolean),
    "isDivModeEnabled": (()=>isDivModeEnabled),
    "isFunction": (()=>isFunction),
    "isInArray": (()=>isInArray),
    "isNumber": (()=>isNumber),
    "isObject": (()=>isObject),
    "isPointInside": (()=>isPointInside),
    "isSsr": (()=>isSsr),
    "isString": (()=>isString),
    "itemFromArray": (()=>itemFromArray),
    "itemFromSingleOrMultiple": (()=>itemFromSingleOrMultiple),
    "loadFont": (()=>loadFont),
    "rectBounce": (()=>rectBounce),
    "safeMatchMedia": (()=>safeMatchMedia),
    "safeMutationObserver": (()=>safeMutationObserver),
    "setLogger": (()=>setLogger),
    "singleDivModeExecute": (()=>singleDivModeExecute)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)");
;
;
const _logger = {
    debug: console.debug,
    error: console.error,
    info: console.info,
    log: console.log,
    verbose: console.log,
    warning: console.warn
};
function setLogger(logger) {
    _logger.debug = logger.debug || _logger.debug;
    _logger.error = logger.error || _logger.error;
    _logger.info = logger.info || _logger.info;
    _logger.log = logger.log || _logger.log;
    _logger.verbose = logger.verbose || _logger.verbose;
    _logger.warning = logger.warning || _logger.warning;
}
function getLogger() {
    return _logger;
}
function rectSideBounce(data) {
    const res = {
        bounced: false
    }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;
    if (pOtherSide.min < rectOtherSide.min || pOtherSide.min > rectOtherSide.max || pOtherSide.max < rectOtherSide.min || pOtherSide.max > rectOtherSide.max) {
        return res;
    }
    if (pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0 || pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0) {
        res.velocity = velocity * -factor;
        res.bounced = true;
    }
    return res;
}
function checkSelector(element, selectors) {
    const res = executeOnSingleOrMultiple(selectors, (selector)=>{
        return element.matches(selector);
    });
    return isArray(res) ? res.some((t)=>t) : res;
}
function isSsr() {
    return typeof window === "undefined" || !window || typeof window.document === "undefined" || !window.document;
}
function hasMatchMedia() {
    return !isSsr() && typeof matchMedia !== "undefined";
}
function safeMatchMedia(query) {
    if (!hasMatchMedia()) {
        return;
    }
    return matchMedia(query);
}
function safeMutationObserver(callback) {
    if (isSsr() || typeof MutationObserver === "undefined") {
        return;
    }
    return new MutationObserver(callback);
}
function isInArray(value, array) {
    return value === array || isArray(array) && array.indexOf(value) > -1;
}
async function loadFont(font, weight) {
    try {
        await document.fonts.load(`${weight ?? "400"} 36px '${font ?? "Verdana"}'`);
    } catch  {}
}
function arrayRandomIndex(array) {
    return Math.floor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * array.length);
}
function itemFromArray(array, index, useIndex = true) {
    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];
}
function isPointInside(point, size, offset, radius, direction) {
    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);
}
function areBoundsInside(bounds, size, offset, direction) {
    let inside = true;
    if (!direction || direction === "bottom") {
        inside = bounds.top < size.height + offset.x;
    }
    if (inside && (!direction || direction === "left")) {
        inside = bounds.right > offset.x;
    }
    if (inside && (!direction || direction === "right")) {
        inside = bounds.left < size.width + offset.y;
    }
    if (inside && (!direction || direction === "top")) {
        inside = bounds.bottom > offset.y;
    }
    return inside;
}
function calculateBounds(point, radius) {
    return {
        bottom: point.y + radius,
        left: point.x - radius,
        right: point.x + radius,
        top: point.y - radius
    };
}
function deepExtend(destination, ...sources) {
    for (const source of sources){
        if (source === undefined || source === null) {
            continue;
        }
        if (!isObject(source)) {
            destination = source;
            continue;
        }
        const sourceIsArray = Array.isArray(source);
        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {
            destination = [];
        } else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {
            destination = {};
        }
        for(const key in source){
            if (key === "__proto__") {
                continue;
            }
            const sourceDict = source, value = sourceDict[key], destDict = destination;
            destDict[key] = isObject(value) && Array.isArray(value) ? value.map((v)=>deepExtend(destDict[key], v)) : deepExtend(destDict[key], value);
        }
    }
    return destination;
}
function isDivModeEnabled(mode, divs) {
    return !!findItemFromSingleOrMultiple(divs, (t)=>t.enable && isInArray(mode, t.mode));
}
function divModeExecute(mode, divs, callback) {
    executeOnSingleOrMultiple(divs, (div)=>{
        const divMode = div.mode, divEnabled = div.enable;
        if (divEnabled && isInArray(mode, divMode)) {
            singleDivModeExecute(div, callback);
        }
    });
}
function singleDivModeExecute(div, callback) {
    const selectors = div.selectors;
    executeOnSingleOrMultiple(selectors, (selector)=>{
        callback(selector, div);
    });
}
function divMode(divs, element) {
    if (!element || !divs) {
        return;
    }
    return findItemFromSingleOrMultiple(divs, (div)=>{
        return checkSelector(element, div.selectors);
    });
}
function circleBounceDataFromParticle(p) {
    return {
        position: p.getPosition(),
        radius: p.getRadius(),
        mass: p.getMass(),
        velocity: p.velocity,
        factor: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].create((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getValue"])(p.options.bounce.horizontal), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getValue"])(p.options.bounce.vertical))
    };
}
function circleBounce(p1, p2) {
    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [
        p1.position,
        p2.position
    ], { dx: xDist, dy: yDist } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(pos2, pos1);
    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {
        return;
    }
    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["collisionVelocity"])(u1, u2, m1, m2), v2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["collisionVelocity"])(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);
    p1.velocity.x = vFinal1.x * p1.factor.x;
    p1.velocity.y = vFinal1.y * p1.factor.y;
    p2.velocity.x = vFinal2.x * p2.factor.x;
    p2.velocity.y = vFinal2.y * p2.factor.y;
}
function rectBounce(particle, divBounds) {
    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({
        pSide: {
            min: bounds.left,
            max: bounds.right
        },
        pOtherSide: {
            min: bounds.top,
            max: bounds.bottom
        },
        rectSide: {
            min: divBounds.left,
            max: divBounds.right
        },
        rectOtherSide: {
            min: divBounds.top,
            max: divBounds.bottom
        },
        velocity: particle.velocity.x,
        factor: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getValue"])(particle.options.bounce.horizontal)
    });
    if (resH.bounced) {
        if (resH.velocity !== undefined) {
            particle.velocity.x = resH.velocity;
        }
        if (resH.position !== undefined) {
            particle.position.x = resH.position;
        }
    }
    const resV = rectSideBounce({
        pSide: {
            min: bounds.top,
            max: bounds.bottom
        },
        pOtherSide: {
            min: bounds.left,
            max: bounds.right
        },
        rectSide: {
            min: divBounds.top,
            max: divBounds.bottom
        },
        rectOtherSide: {
            min: divBounds.left,
            max: divBounds.right
        },
        velocity: particle.velocity.y,
        factor: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getValue"])(particle.options.bounce.vertical)
    });
    if (resV.bounced) {
        if (resV.velocity !== undefined) {
            particle.velocity.y = resV.velocity;
        }
        if (resV.position !== undefined) {
            particle.position.y = resV.position;
        }
    }
}
function executeOnSingleOrMultiple(obj, callback) {
    return isArray(obj) ? obj.map((item, index)=>callback(item, index)) : callback(obj, 0);
}
function itemFromSingleOrMultiple(obj, index, useIndex) {
    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;
}
function findItemFromSingleOrMultiple(obj, callback) {
    return isArray(obj) ? obj.find((t, index)=>callback(t, index)) : callback(obj, 0) ? obj : undefined;
}
function initParticleNumericAnimationValue(options, pxRatio) {
    const valueRange = options.value, animationOptions = options.animation, res = {
        delayTime: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(animationOptions.delay) * 1000,
        enable: animationOptions.enable,
        value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(options.value) * pxRatio,
        max: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeMax"])(valueRange) * pxRatio,
        min: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeMin"])(valueRange) * pxRatio,
        loops: 0,
        maxLoops: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(animationOptions.count),
        time: 0
    };
    if (animationOptions.enable) {
        res.decay = 1 - (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(animationOptions.decay);
        switch(animationOptions.mode){
            case "increase":
                res.status = "increasing";
                break;
            case "decrease":
                res.status = "decreasing";
                break;
            case "random":
                res.status = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() >= 0.5 ? "increasing" : "decreasing";
                break;
        }
        const autoStatus = animationOptions.mode === "auto";
        switch(animationOptions.startValue){
            case "min":
                res.value = res.min;
                if (autoStatus) {
                    res.status = "increasing";
                }
                break;
            case "max":
                res.value = res.max;
                if (autoStatus) {
                    res.status = "decreasing";
                }
                break;
            case "random":
            default:
                res.value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])(res);
                if (autoStatus) {
                    res.status = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() >= 0.5 ? "increasing" : "decreasing";
                }
                break;
        }
    }
    res.initialValue = res.value;
    return res;
}
function getPositionOrSize(positionOrSize, canvasSize) {
    const isPercent = positionOrSize.mode === "percent";
    if (!isPercent) {
        const { mode: _, ...rest } = positionOrSize;
        return rest;
    }
    const isPosition = "x" in positionOrSize;
    if (isPosition) {
        return {
            x: positionOrSize.x / 100 * canvasSize.width,
            y: positionOrSize.y / 100 * canvasSize.height
        };
    } else {
        return {
            width: positionOrSize.width / 100 * canvasSize.width,
            height: positionOrSize.height / 100 * canvasSize.height
        };
    }
}
function getPosition(position, canvasSize) {
    return getPositionOrSize(position, canvasSize);
}
function getSize(size, canvasSize) {
    return getPositionOrSize(size, canvasSize);
}
function isBoolean(arg) {
    return typeof arg === "boolean";
}
function isString(arg) {
    return typeof arg === "string";
}
function isNumber(arg) {
    return typeof arg === "number";
}
function isFunction(arg) {
    return typeof arg === "function";
}
function isObject(arg) {
    return typeof arg === "object" && arg !== null;
}
function isArray(arg) {
    return Array.isArray(arg);
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "addEasing": (()=>addEasing),
    "calcExactPositionOrRandomFromSize": (()=>calcExactPositionOrRandomFromSize),
    "calcExactPositionOrRandomFromSizeRanged": (()=>calcExactPositionOrRandomFromSizeRanged),
    "calcPositionFromSize": (()=>calcPositionFromSize),
    "calcPositionOrRandomFromSize": (()=>calcPositionOrRandomFromSize),
    "calcPositionOrRandomFromSizeRanged": (()=>calcPositionOrRandomFromSizeRanged),
    "clamp": (()=>clamp),
    "collisionVelocity": (()=>collisionVelocity),
    "getDistance": (()=>getDistance),
    "getDistances": (()=>getDistances),
    "getEasing": (()=>getEasing),
    "getParticleBaseVelocity": (()=>getParticleBaseVelocity),
    "getParticleDirectionAngle": (()=>getParticleDirectionAngle),
    "getRandom": (()=>getRandom),
    "getRangeMax": (()=>getRangeMax),
    "getRangeMin": (()=>getRangeMin),
    "getRangeValue": (()=>getRangeValue),
    "getValue": (()=>getValue),
    "mix": (()=>mix),
    "parseAlpha": (()=>parseAlpha),
    "randomInRange": (()=>randomInRange),
    "setRandom": (()=>setRandom),
    "setRangeValue": (()=>setRangeValue)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)");
;
;
let _random = Math.random;
const easings = new Map();
function addEasing(name, easing) {
    if (easings.get(name)) {
        return;
    }
    easings.set(name, easing);
}
function getEasing(name) {
    return easings.get(name) || ((value)=>value);
}
function setRandom(rnd = Math.random) {
    _random = rnd;
}
function getRandom() {
    return clamp(_random(), 0, 1 - 1e-16);
}
function clamp(num, min, max) {
    return Math.min(Math.max(num, min), max);
}
function mix(comp1, comp2, weight1, weight2) {
    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));
}
function randomInRange(r) {
    const max = getRangeMax(r);
    let min = getRangeMin(r);
    if (max === min) {
        min = 0;
    }
    return getRandom() * (max - min) + min;
}
function getRangeValue(value) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumber"])(value) ? value : randomInRange(value);
}
function getRangeMin(value) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumber"])(value) ? value : value.min;
}
function getRangeMax(value) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumber"])(value) ? value : value.max;
}
function setRangeValue(source, value) {
    if (source === value || value === undefined && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumber"])(source)) {
        return source;
    }
    const min = getRangeMin(source), max = getRangeMax(source);
    return value !== undefined ? {
        min: Math.min(min, value),
        max: Math.max(max, value)
    } : setRangeValue(min, max);
}
function getValue(options) {
    const random = options.random, { enable, minimumValue } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBoolean"])(random) ? {
        enable: random,
        minimumValue: 0
    } : random;
    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);
}
function getDistances(pointA, pointB) {
    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;
    return {
        dx: dx,
        dy: dy,
        distance: Math.sqrt(dx ** 2 + dy ** 2)
    };
}
function getDistance(pointA, pointB) {
    return getDistances(pointA, pointB).distance;
}
function getParticleDirectionAngle(direction, position, center) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumber"])(direction)) {
        return direction * Math.PI / 180;
    }
    switch(direction){
        case "top":
            return -Math.PI / 2;
        case "top-right":
            return -Math.PI / 4;
        case "right":
            return 0;
        case "bottom-right":
            return Math.PI / 4;
        case "bottom":
            return Math.PI / 2;
        case "bottom-left":
            return 3 * Math.PI / 4;
        case "left":
            return Math.PI;
        case "top-left":
            return -3 * Math.PI / 4;
        case "inside":
            return Math.atan2(center.y - position.y, center.x - position.x);
        case "outside":
            return Math.atan2(position.y - center.y, position.x - center.x);
        default:
            return getRandom() * Math.PI * 2;
    }
}
function getParticleBaseVelocity(direction) {
    const baseVelocity = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin;
    baseVelocity.length = 1;
    baseVelocity.angle = direction;
    return baseVelocity;
}
function collisionVelocity(v1, v2, m1, m2) {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].create(v1.x * (m1 - m2) / (m1 + m2) + v2.x * 2 * m2 / (m1 + m2), v1.y);
}
function calcPositionFromSize(data) {
    return data.position && data.position.x !== undefined && data.position.y !== undefined ? {
        x: data.position.x * data.size.width / 100,
        y: data.position.y * data.size.height / 100
    } : undefined;
}
function calcPositionOrRandomFromSize(data) {
    return {
        x: (data.position?.x ?? getRandom() * 100) * data.size.width / 100,
        y: (data.position?.y ?? getRandom() * 100) * data.size.height / 100
    };
}
function calcPositionOrRandomFromSizeRanged(data) {
    const position = {
        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,
        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined
    };
    return calcPositionOrRandomFromSize({
        size: data.size,
        position
    });
}
function calcExactPositionOrRandomFromSize(data) {
    return {
        x: data.position?.x ?? getRandom() * data.size.width,
        y: data.position?.y ?? getRandom() * data.size.height
    };
}
function calcExactPositionOrRandomFromSizeRanged(data) {
    const position = {
        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,
        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined
    };
    return calcExactPositionOrRandomFromSize({
        size: data.size,
        position
    });
}
function parseAlpha(input) {
    return input ? input.endsWith("%") ? parseFloat(input) / 100 : parseFloat(input) : 1;
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "RgbColorManager": (()=>RgbColorManager)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class RgbColorManager {
    constructor(){
        this.key = "rgb";
        this.stringPrefix = "rgb";
    }
    handleColor(color) {
        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;
        if (rgbColor.r !== undefined) {
            return rgbColor;
        }
    }
    handleRangeColor(color) {
        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;
        if (rgbColor.r !== undefined) {
            return {
                r: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(rgbColor.r),
                g: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(rgbColor.g),
                b: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(rgbColor.b)
            };
        }
    }
    parseString(input) {
        if (!input.startsWith(this.stringPrefix)) {
            return;
        }
        const regex = /rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([\d.%]+)\s*)?\)/i, result = regex.exec(input);
        return result ? {
            a: result.length > 4 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseAlpha"])(result[5]) : 1,
            b: parseInt(result[3], 10),
            g: parseInt(result[2], 10),
            r: parseInt(result[1], 10)
        } : undefined;
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "addColorManager": (()=>addColorManager),
    "colorMix": (()=>colorMix),
    "colorToHsl": (()=>colorToHsl),
    "colorToRgb": (()=>colorToRgb),
    "getHslAnimationFromHsl": (()=>getHslAnimationFromHsl),
    "getHslFromAnimation": (()=>getHslFromAnimation),
    "getLinkColor": (()=>getLinkColor),
    "getLinkRandomColor": (()=>getLinkRandomColor),
    "getRandomRgbColor": (()=>getRandomRgbColor),
    "getStyleFromHsl": (()=>getStyleFromHsl),
    "getStyleFromRgb": (()=>getStyleFromRgb),
    "hslToRgb": (()=>hslToRgb),
    "hslaToRgba": (()=>hslaToRgba),
    "rangeColorToHsl": (()=>rangeColorToHsl),
    "rangeColorToRgb": (()=>rangeColorToRgb),
    "rgbToHsl": (()=>rgbToHsl),
    "stringToAlpha": (()=>stringToAlpha),
    "stringToRgb": (()=>stringToRgb)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
;
const randomColorValue = "random", midColorValue = "mid", colorManagers = new Map();
function addColorManager(manager) {
    colorManagers.set(manager.key, manager);
}
function hue2rgb(p, q, t) {
    if (t < 0) {
        t += 1;
    }
    if (t > 1) {
        t -= 1;
    }
    if (t < 1 / 6) {
        return p + (q - p) * 6 * t;
    }
    if (t < 1 / 2) {
        return q;
    }
    if (t < 2 / 3) {
        return p + (q - p) * (2 / 3 - t) * 6;
    }
    return p;
}
function stringToRgba(input) {
    for (const [, manager] of colorManagers){
        if (input.startsWith(manager.stringPrefix)) {
            return manager.parseString(input);
        }
    }
    const shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])([a-f\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a)=>{
        return r + r + g + g + b + b + (a !== undefined ? a + a : "");
    }), regex = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})?$/i, result = regex.exec(hexFixed);
    return result ? {
        a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,
        b: parseInt(result[3], 16),
        g: parseInt(result[2], 16),
        r: parseInt(result[1], 16)
    } : undefined;
}
function rangeColorToRgb(input, index, useIndex = true) {
    if (!input) {
        return;
    }
    const color = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(input) ? {
        value: input
    } : input;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(color.value)) {
        return colorToRgb(color.value, index, useIndex);
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(color.value)) {
        return rangeColorToRgb({
            value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromArray"])(color.value, index, useIndex)
        });
    }
    for (const [, manager] of colorManagers){
        const res = manager.handleRangeColor(color);
        if (res) {
            return res;
        }
    }
}
function colorToRgb(input, index, useIndex = true) {
    if (!input) {
        return;
    }
    const color = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(input) ? {
        value: input
    } : input;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(color.value)) {
        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(color.value)) {
        return colorToRgb({
            value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromArray"])(color.value, index, useIndex)
        });
    }
    for (const [, manager] of colorManagers){
        const res = manager.handleColor(color);
        if (res) {
            return res;
        }
    }
}
function colorToHsl(color, index, useIndex = true) {
    const rgb = colorToRgb(color, index, useIndex);
    return rgb ? rgbToHsl(rgb) : undefined;
}
function rangeColorToHsl(color, index, useIndex = true) {
    const rgb = rangeColorToRgb(color, index, useIndex);
    return rgb ? rgbToHsl(rgb) : undefined;
}
function rgbToHsl(color) {
    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {
        h: 0,
        l: (max + min) / 2,
        s: 0
    };
    if (max !== min) {
        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);
        res.h = r1 === max ? (g1 - b1) / (max - min) : res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min);
    }
    res.l *= 100;
    res.s *= 100;
    res.h *= 60;
    if (res.h < 0) {
        res.h += 360;
    }
    if (res.h >= 360) {
        res.h -= 360;
    }
    return res;
}
function stringToAlpha(input) {
    return stringToRgba(input)?.a;
}
function stringToRgb(input) {
    return stringToRgba(input);
}
function hslToRgb(hsl) {
    const result = {
        b: 0,
        g: 0,
        r: 0
    }, hslPercent = {
        h: hsl.h / 360,
        l: hsl.l / 100,
        s: hsl.s / 100
    };
    if (!hslPercent.s) {
        result.r = result.g = result.b = hslPercent.l;
    } else {
        const q = hslPercent.l < 0.5 ? hslPercent.l * (1 + hslPercent.s) : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;
        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);
        result.g = hue2rgb(p, q, hslPercent.h);
        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);
    }
    result.r = Math.floor(result.r * 255);
    result.g = Math.floor(result.g * 255);
    result.b = Math.floor(result.b * 255);
    return result;
}
function hslaToRgba(hsla) {
    const rgbResult = hslToRgb(hsla);
    return {
        a: hsla.a,
        b: rgbResult.b,
        g: rgbResult.g,
        r: rgbResult.r
    };
}
function getRandomRgbColor(min) {
    const fixedMin = min ?? 0;
    return {
        b: Math.floor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(fixedMin, 256))),
        g: Math.floor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(fixedMin, 256))),
        r: Math.floor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(fixedMin, 256)))
    };
}
function getStyleFromRgb(color, opacity) {
    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;
}
function getStyleFromHsl(color, opacity) {
    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;
}
function colorMix(color1, color2, size1, size2) {
    let rgb1 = color1, rgb2 = color2;
    if (rgb1.r === undefined) {
        rgb1 = hslToRgb(color1);
    }
    if (rgb2.r === undefined) {
        rgb2 = hslToRgb(color2);
    }
    return {
        b: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mix"])(rgb1.b, rgb2.b, size1, size2),
        g: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mix"])(rgb1.g, rgb2.g, size1, size2),
        r: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mix"])(rgb1.r, rgb2.r, size1, size2)
    };
}
function getLinkColor(p1, p2, linkColor) {
    if (linkColor === randomColorValue) {
        return getRandomRgbColor();
    } else if (linkColor === midColorValue) {
        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();
        if (sourceColor && destColor && p2) {
            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());
        } else {
            const hslColor = sourceColor ?? destColor;
            if (hslColor) {
                return hslToRgb(hslColor);
            }
        }
    } else {
        return linkColor;
    }
}
function getLinkRandomColor(optColor, blink, consent) {
    const color = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(optColor) ? optColor : optColor.value;
    if (color === randomColorValue) {
        if (consent) {
            return rangeColorToRgb({
                value: color
            });
        }
        if (blink) {
            return randomColorValue;
        }
        return midColorValue;
    } else if (color === midColorValue) {
        return midColorValue;
    } else {
        return rangeColorToRgb({
            value: color
        });
    }
}
function getHslFromAnimation(animation) {
    return animation !== undefined ? {
        h: animation.h.value,
        s: animation.s.value,
        l: animation.l.value
    } : undefined;
}
function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {
    const resColor = {
        h: {
            enable: false,
            value: hsl.h
        },
        s: {
            enable: false,
            value: hsl.s
        },
        l: {
            enable: false,
            value: hsl.l
        }
    };
    if (animationOptions) {
        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);
        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);
        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);
    }
    return resColor;
}
function setColorAnimation(colorValue, colorAnimation, reduceFactor) {
    colorValue.enable = colorAnimation.enable;
    if (colorValue.enable) {
        colorValue.velocity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(colorAnimation.speed) / 100 * reduceFactor;
        colorValue.decay = 1 - (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(colorAnimation.decay);
        colorValue.status = "increasing";
        colorValue.loops = 0;
        colorValue.maxLoops = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(colorAnimation.count);
        colorValue.time = 0;
        colorValue.delayTime = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(colorAnimation.delay) * 1000;
        if (!colorAnimation.sync) {
            colorValue.velocity *= (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])();
            colorValue.value *= (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])();
        }
        colorValue.initialValue = colorValue.value;
    } else {
        colorValue.velocity = 0;
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Utils/HslColorManager.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "HslColorManager": (()=>HslColorManager)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
;
class HslColorManager {
    constructor(){
        this.key = "hsl";
        this.stringPrefix = "hsl";
    }
    handleColor(color) {
        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;
        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hslToRgb"])(hslColor);
        }
    }
    handleRangeColor(color) {
        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;
        if (hslColor.h !== undefined && hslColor.l !== undefined) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hslToRgb"])({
                h: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(hslColor.h),
                l: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(hslColor.l),
                s: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(hslColor.s)
            });
        }
    }
    parseString(input) {
        if (!input.startsWith("hsl")) {
            return;
        }
        const regex = /hsla?\(\s*(\d+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(,\s*([\d.%]+)\s*)?\)/i, result = regex.exec(input);
        return result ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hslaToRgba"])({
            a: result.length > 4 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseAlpha"])(result[5]) : 1,
            h: parseInt(result[1], 10),
            l: parseInt(result[3], 10),
            s: parseInt(result[2], 10)
        }) : undefined;
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "EventDispatcher": (()=>EventDispatcher)
});
class EventDispatcher {
    constructor(){
        this._listeners = new Map();
    }
    addEventListener(type, listener) {
        this.removeEventListener(type, listener);
        let arr = this._listeners.get(type);
        if (!arr) {
            arr = [];
            this._listeners.set(type, arr);
        }
        arr.push(listener);
    }
    dispatchEvent(type, args) {
        const listeners = this._listeners.get(type);
        listeners && listeners.forEach((handler)=>handler(args));
    }
    hasEventListener(type) {
        return !!this._listeners.get(type);
    }
    removeAllEventListeners(type) {
        if (!type) {
            this._listeners = new Map();
        } else {
            this._listeners.delete(type);
        }
    }
    removeEventListener(type, listener) {
        const arr = this._listeners.get(type);
        if (!arr) {
            return;
        }
        const length = arr.length, idx = arr.indexOf(listener);
        if (idx < 0) {
            return;
        }
        if (length === 1) {
            this._listeners.delete(type);
        } else {
            arr.splice(idx, 1);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Plugins": (()=>Plugins)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
function getItemsFromInitializer(container, map, initializers, force = false) {
    let res = map.get(container);
    if (!res || force) {
        res = [
            ...initializers.values()
        ].map((t)=>t(container));
        map.set(container, res);
    }
    return res;
}
class Plugins {
    constructor(engine){
        this._engine = engine;
        this.plugins = [];
        this._initializers = {
            interactors: new Map(),
            movers: new Map(),
            updaters: new Map()
        };
        this.interactors = new Map();
        this.movers = new Map();
        this.updaters = new Map();
        this.presets = new Map();
        this.drawers = new Map();
        this.pathGenerators = new Map();
    }
    addInteractor(name, initInteractor) {
        this._initializers.interactors.set(name, initInteractor);
    }
    addParticleMover(name, initMover) {
        this._initializers.movers.set(name, initMover);
    }
    addParticleUpdater(name, initUpdater) {
        this._initializers.updaters.set(name, initUpdater);
    }
    addPathGenerator(type, pathGenerator) {
        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);
    }
    addPlugin(plugin) {
        !this.getPlugin(plugin.id) && this.plugins.push(plugin);
    }
    addPreset(presetKey, options, override = false) {
        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);
    }
    addShapeDrawer(types, drawer) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(types, (type)=>{
            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);
        });
    }
    destroy(container) {
        this.updaters.delete(container);
        this.movers.delete(container);
        this.interactors.delete(container);
    }
    getAvailablePlugins(container) {
        const res = new Map();
        for (const plugin of this.plugins){
            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));
        }
        return res;
    }
    getInteractors(container, force = false) {
        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);
    }
    getMovers(container, force = false) {
        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);
    }
    getPathGenerator(type) {
        return this.pathGenerators.get(type);
    }
    getPlugin(plugin) {
        return this.plugins.find((t)=>t.id === plugin);
    }
    getPreset(preset) {
        return this.presets.get(preset);
    }
    getShapeDrawer(type) {
        return this.drawers.get(type);
    }
    getSupportedShapes() {
        return this.drawers.keys();
    }
    getUpdaters(container, force = false) {
        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);
    }
    loadOptions(options, sourceOptions) {
        for (const plugin of this.plugins){
            plugin.loadOptions(options, sourceOptions);
        }
    }
    loadParticlesOptions(container, options, ...sourceOptions) {
        const updaters = this.updaters.get(container);
        if (!updaters) {
            return;
        }
        for (const updater of updaters){
            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Retina.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Retina": (()=>Retina)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
;
class Retina {
    constructor(container){
        this.container = container;
        this.pixelRatio = 1;
        this.reduceFactor = 1;
    }
    init() {
        const container = this.container, options = container.actualOptions;
        this.pixelRatio = !options.detectRetina || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isSsr"])() ? 1 : window.devicePixelRatio;
        this.reduceFactor = 1;
        const ratio = this.pixelRatio;
        if (container.canvas.element) {
            const element = container.canvas.element;
            container.canvas.size.width = element.offsetWidth * ratio;
            container.canvas.size.height = element.offsetHeight * ratio;
        }
        const particles = options.particles, moveOptions = particles.move;
        this.attractDistance = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(moveOptions.attract.distance) * ratio;
        this.maxSpeed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(moveOptions.gravity.maxSpeed) * ratio;
        this.sizeAnimationSpeed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(particles.size.animation.speed) * ratio;
    }
    initParticle(particle) {
        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;
        props.attractDistance = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(moveOptions.attract.distance) * ratio;
        props.moveDrift = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(moveOptions.drift) * ratio;
        props.moveSpeed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(moveOptions.speed) * ratio;
        props.sizeAnimationSpeed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(options.size.animation.speed) * ratio;
        const maxDistance = props.maxDistance;
        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;
        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;
        props.maxSpeed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(moveOptions.gravity.maxSpeed) * ratio;
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "alterHsl": (()=>alterHsl),
    "clear": (()=>clear),
    "drawLine": (()=>drawLine),
    "drawParticle": (()=>drawParticle),
    "drawParticlePlugin": (()=>drawParticlePlugin),
    "drawPlugin": (()=>drawPlugin),
    "drawShape": (()=>drawShape),
    "drawShapeAfterEffect": (()=>drawShapeAfterEffect),
    "drawTriangle": (()=>drawTriangle),
    "paintBase": (()=>paintBase),
    "paintImage": (()=>paintImage)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
;
function drawLine(context, begin, end) {
    context.beginPath();
    context.moveTo(begin.x, begin.y);
    context.lineTo(end.x, end.y);
    context.closePath();
}
function drawTriangle(context, p1, p2, p3) {
    context.beginPath();
    context.moveTo(p1.x, p1.y);
    context.lineTo(p2.x, p2.y);
    context.lineTo(p3.x, p3.y);
    context.closePath();
}
function paintBase(context, dimension, baseColor) {
    context.fillStyle = baseColor ?? "rgba(0,0,0,0)";
    context.fillRect(0, 0, dimension.width, dimension.height);
}
function paintImage(context, dimension, image, opacity) {
    if (!image) {
        return;
    }
    context.globalAlpha = opacity;
    context.drawImage(image, 0, 0, dimension.width, dimension.height);
    context.globalAlpha = 1;
}
function clear(context, dimension) {
    context.clearRect(0, 0, dimension.width, dimension.height);
}
function drawParticle(data) {
    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform } = data;
    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {
        sin: Math.sin(angle),
        cos: Math.cos(angle)
    }, transformData = {
        a: rotateData.cos * (transform.a ?? 1),
        b: rotateData.sin * (transform.b ?? 1),
        c: -rotateData.sin * (transform.c ?? 1),
        d: rotateData.cos * (transform.d ?? 1)
    };
    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);
    context.beginPath();
    if (backgroundMask) {
        context.globalCompositeOperation = composite;
    }
    const shadowColor = particle.shadowColor;
    if (shadow.enable && shadowColor) {
        context.shadowBlur = shadow.blur;
        context.shadowColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromRgb"])(shadowColor);
        context.shadowOffsetX = shadow.offset.x;
        context.shadowOffsetY = shadow.offset.y;
    }
    if (colorStyles.fill) {
        context.fillStyle = colorStyles.fill;
    }
    const strokeWidth = particle.strokeWidth ?? 0;
    context.lineWidth = strokeWidth;
    if (colorStyles.stroke) {
        context.strokeStyle = colorStyles.stroke;
    }
    drawShape(container, context, particle, radius, opacity, delta);
    if (strokeWidth > 0) {
        context.stroke();
    }
    if (particle.close) {
        context.closePath();
    }
    if (particle.fill) {
        context.fill();
    }
    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);
    context.globalCompositeOperation = "source-over";
    context.setTransform(1, 0, 0, 1, 0, 0);
}
function drawShape(container, context, particle, radius, opacity, delta) {
    if (!particle.shape) {
        return;
    }
    const drawer = container.drawers.get(particle.shape);
    if (!drawer) {
        return;
    }
    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);
}
function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {
    if (!particle.shape) {
        return;
    }
    const drawer = container.drawers.get(particle.shape);
    if (!drawer || !drawer.afterEffect) {
        return;
    }
    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);
}
function drawPlugin(context, plugin, delta) {
    if (!plugin.draw) {
        return;
    }
    plugin.draw(context, delta);
}
function drawParticlePlugin(context, plugin, particle, delta) {
    if (!plugin.drawParticle) {
        return;
    }
    plugin.drawParticle(context, particle, delta);
}
function alterHsl(color, type, value) {
    return {
        h: color.h,
        s: color.s,
        l: color.l + (type === "darken" ? -1 : 1) * value
    };
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Canvas.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Canvas": (()=>Canvas)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
;
;
;
;
function setTransformValue(factor, newFactor, key) {
    const newValue = newFactor[key];
    if (newValue !== undefined) {
        factor[key] = (factor[key] ?? 1) * newValue;
    }
}
class Canvas {
    constructor(container){
        this.container = container;
        this._applyPostDrawUpdaters = (particle)=>{
            for (const updater of this._postDrawUpdaters){
                updater.afterDraw && updater.afterDraw(particle);
            }
        };
        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform)=>{
            for (const updater of this._preDrawUpdaters){
                if (updater.getColorStyles) {
                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);
                    if (fill) {
                        colorStyles.fill = fill;
                    }
                    if (stroke) {
                        colorStyles.stroke = stroke;
                    }
                }
                if (updater.getTransformValues) {
                    const updaterTransform = updater.getTransformValues(particle);
                    for(const key in updaterTransform){
                        setTransformValue(transform, updaterTransform, key);
                    }
                }
                updater.beforeDraw && updater.beforeDraw(particle);
            }
        };
        this._applyResizePlugins = ()=>{
            for (const plugin of this._resizePlugins){
                plugin.resize && plugin.resize();
            }
        };
        this._getPluginParticleColors = (particle)=>{
            let fColor, sColor;
            for (const plugin of this._colorPlugins){
                if (!fColor && plugin.particleFillColor) {
                    fColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToHsl"])(plugin.particleFillColor(particle));
                }
                if (!sColor && plugin.particleStrokeColor) {
                    sColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToHsl"])(plugin.particleStrokeColor(particle));
                }
                if (fColor && sColor) {
                    break;
                }
            }
            return [
                fColor,
                sColor
            ];
        };
        this._initCover = ()=>{
            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToRgb"])(color);
            if (coverRgb) {
                const coverColor = {
                    ...coverRgb,
                    a: cover.opacity
                };
                this._coverColorStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromRgb"])(coverColor, coverColor.a);
            }
        };
        this._initStyle = ()=>{
            const element = this.element, options = this.container.actualOptions;
            if (!element) {
                return;
            }
            if (this._fullScreen) {
                this._originalStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])({}, element.style);
                this._setFullScreenStyle();
            } else {
                this._resetOriginalStyle();
            }
            for(const key in options.style){
                if (!key || !options.style) {
                    continue;
                }
                const value = options.style[key];
                if (!value) {
                    continue;
                }
                element.style.setProperty(key, value, "important");
            }
        };
        this._initTrail = async ()=>{
            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;
            if (!trail.enable) {
                return;
            }
            if (trailFill.color) {
                const fillColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToRgb"])(trailFill.color);
                if (!fillColor) {
                    return;
                }
                const trail = options.particles.move.trail;
                this._trailFill = {
                    color: {
                        ...fillColor
                    },
                    opacity: 1 / trail.length
                };
            } else {
                await new Promise((resolve, reject)=>{
                    if (!trailFill.image) {
                        return;
                    }
                    const img = document.createElement("img");
                    img.addEventListener("load", ()=>{
                        this._trailFill = {
                            image: img,
                            opacity: 1 / trail.length
                        };
                        resolve();
                    });
                    img.addEventListener("error", (evt)=>{
                        reject(evt.error);
                    });
                    img.src = trailFill.image;
                });
            }
        };
        this._paintBase = (baseColor)=>{
            this.draw((ctx)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["paintBase"])(ctx, this.size, baseColor));
        };
        this._paintImage = (image, opacity)=>{
            this.draw((ctx)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["paintImage"])(ctx, this.size, image, opacity));
        };
        this._repairStyle = ()=>{
            const element = this.element;
            if (!element) {
                return;
            }
            this._safeMutationObserver((observer)=>observer.disconnect());
            this._initStyle();
            this.initBackground();
            this._safeMutationObserver((observer)=>observer.observe(element, {
                    attributes: true
                }));
        };
        this._resetOriginalStyle = ()=>{
            const element = this.element, originalStyle = this._originalStyle;
            if (!(element && originalStyle)) {
                return;
            }
            const style = element.style;
            style.position = originalStyle.position;
            style.zIndex = originalStyle.zIndex;
            style.top = originalStyle.top;
            style.left = originalStyle.left;
            style.width = originalStyle.width;
            style.height = originalStyle.height;
        };
        this._safeMutationObserver = (callback)=>{
            if (!this._mutationObserver) {
                return;
            }
            callback(this._mutationObserver);
        };
        this._setFullScreenStyle = ()=>{
            const element = this.element;
            if (!element) {
                return;
            }
            const priority = "important", style = element.style;
            style.setProperty("position", "fixed", priority);
            style.setProperty("z-index", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);
            style.setProperty("top", "0", priority);
            style.setProperty("left", "0", priority);
            style.setProperty("width", "100%", priority);
            style.setProperty("height", "100%", priority);
        };
        this.size = {
            height: 0,
            width: 0
        };
        this._context = null;
        this._generated = false;
        this._preDrawUpdaters = [];
        this._postDrawUpdaters = [];
        this._resizePlugins = [];
        this._colorPlugins = [];
    }
    get _fullScreen() {
        return this.container.actualOptions.fullScreen.enable;
    }
    clear() {
        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;
        if (options.backgroundMask.enable) {
            this.paint();
        } else if (trail.enable && trail.length > 0 && trailFill) {
            if (trailFill.color) {
                this._paintBase((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromRgb"])(trailFill.color, trailFill.opacity));
            } else if (trailFill.image) {
                this._paintImage(trailFill.image, trailFill.opacity);
            }
        } else {
            this.draw((ctx)=>{
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clear"])(ctx, this.size);
            });
        }
    }
    destroy() {
        this.stop();
        if (this._generated) {
            const element = this.element;
            element && element.remove();
        } else {
            this._resetOriginalStyle();
        }
        this._preDrawUpdaters = [];
        this._postDrawUpdaters = [];
        this._resizePlugins = [];
        this._colorPlugins = [];
    }
    draw(cb) {
        const ctx = this._context;
        if (!ctx) {
            return;
        }
        return cb(ctx);
    }
    drawParticle(particle, delta) {
        if (particle.spawning || particle.destroyed) {
            return;
        }
        const radius = particle.getRadius();
        if (radius <= 0) {
            return;
        }
        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;
        let [fColor, sColor] = this._getPluginParticleColors(particle);
        if (!fColor) {
            fColor = pfColor;
        }
        if (!sColor) {
            sColor = psColor;
        }
        if (!fColor && !sColor) {
            return;
        }
        this.draw((ctx)=>{
            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {
                fill: fColor ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromHsl"])(fColor, zOpacity) : undefined
            };
            colorStyles.stroke = sColor ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromHsl"])(sColor, zStrokeOpacity) : colorStyles.fill;
            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawParticle"])({
                container,
                context: ctx,
                particle,
                delta,
                colorStyles,
                backgroundMask: options.backgroundMask.enable,
                composite: options.backgroundMask.composite,
                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,
                opacity: zOpacity,
                shadow: particle.options.shadow,
                transform
            });
            this._applyPostDrawUpdaters(particle);
        });
    }
    drawParticlePlugin(plugin, particle, delta) {
        this.draw((ctx)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawParticlePlugin"])(ctx, plugin, particle, delta));
    }
    drawPlugin(plugin, delta) {
        this.draw((ctx)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawPlugin"])(ctx, plugin, delta));
    }
    async init() {
        this._safeMutationObserver((obs)=>obs.disconnect());
        this._mutationObserver = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["safeMutationObserver"])((records)=>{
            for (const record of records){
                if (record.type === "attributes" && record.attributeName === "style") {
                    this._repairStyle();
                }
            }
        });
        this.resize();
        this._initStyle();
        this._initCover();
        try {
            await this._initTrail();
        } catch (e) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLogger"])().error(e);
        }
        this.initBackground();
        this._safeMutationObserver((obs)=>{
            if (!this.element) {
                return;
            }
            obs.observe(this.element, {
                attributes: true
            });
        });
        this.initUpdaters();
        this.initPlugins();
        this.paint();
    }
    initBackground() {
        const options = this.container.actualOptions, background = options.background, element = this.element;
        if (!element) {
            return;
        }
        const elementStyle = element.style;
        if (!elementStyle) {
            return;
        }
        if (background.color) {
            const color = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToRgb"])(background.color);
            elementStyle.backgroundColor = color ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromRgb"])(color, background.opacity) : "";
        } else {
            elementStyle.backgroundColor = "";
        }
        elementStyle.backgroundImage = background.image || "";
        elementStyle.backgroundPosition = background.position || "";
        elementStyle.backgroundRepeat = background.repeat || "";
        elementStyle.backgroundSize = background.size || "";
    }
    initPlugins() {
        this._resizePlugins = [];
        for (const [, plugin] of this.container.plugins){
            if (plugin.resize) {
                this._resizePlugins.push(plugin);
            }
            if (plugin.particleFillColor || plugin.particleStrokeColor) {
                this._colorPlugins.push(plugin);
            }
        }
    }
    initUpdaters() {
        this._preDrawUpdaters = [];
        this._postDrawUpdaters = [];
        for (const updater of this.container.particles.updaters){
            if (updater.afterDraw) {
                this._postDrawUpdaters.push(updater);
            }
            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {
                this._preDrawUpdaters.push(updater);
            }
        }
    }
    loadCanvas(canvas) {
        if (this._generated && this.element) {
            this.element.remove();
        }
        this._generated = canvas.dataset && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generatedAttribute"] in canvas.dataset ? canvas.dataset[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generatedAttribute"]] === "true" : this._generated;
        this.element = canvas;
        this.element.ariaHidden = "true";
        this._originalStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])({}, this.element.style);
        this.size.height = canvas.offsetHeight;
        this.size.width = canvas.offsetWidth;
        this._context = this.element.getContext("2d");
        this._safeMutationObserver((obs)=>{
            if (!this.element) {
                return;
            }
            obs.observe(this.element, {
                attributes: true
            });
        });
        this.container.retina.init();
        this.initBackground();
    }
    paint() {
        const options = this.container.actualOptions;
        this.draw((ctx)=>{
            if (options.backgroundMask.enable && options.backgroundMask.cover) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clear"])(ctx, this.size);
                this._paintBase(this._coverColorStyle);
            } else {
                this._paintBase();
            }
        });
    }
    resize() {
        if (!this.element) {
            return false;
        }
        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {
            width: this.element.offsetWidth * pxRatio,
            height: this.element.offsetHeight * pxRatio
        };
        if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {
            return false;
        }
        const oldSize = {
            ...size
        };
        this.element.width = size.width = this.element.offsetWidth * pxRatio;
        this.element.height = size.height = this.element.offsetHeight * pxRatio;
        if (this.container.started) {
            this.resizeFactor = {
                width: size.width / oldSize.width,
                height: size.height / oldSize.height
            };
        }
        return true;
    }
    stop() {
        this._safeMutationObserver((obs)=>obs.disconnect());
        this._mutationObserver = undefined;
        this.draw((ctx)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clear"])(ctx, this.size));
    }
    async windowResize() {
        if (!this.element || !this.resize()) {
            return;
        }
        const container = this.container, needsRefresh = container.updateActualOptions();
        container.particles.setDensity();
        this._applyResizePlugins();
        if (needsRefresh) {
            await container.refresh();
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Utils/Range.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Range": (()=>Range)
});
class Range {
    constructor(x, y){
        this.position = {
            x: x,
            y: y
        };
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Circle": (()=>Circle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Range$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Range.js [app-client] (ecmascript)");
;
;
;
class Circle extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Range$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Range"] {
    constructor(x, y, radius){
        super(x, y);
        this.radius = radius;
    }
    contains(point) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(point, this.position) <= this.radius;
    }
    intersects(range) {
        const pos1 = this.position, pos2 = range.position, distPos = {
            x: Math.abs(pos2.x - pos1.x),
            y: Math.abs(pos2.y - pos1.y)
        }, r = this.radius;
        if (range instanceof Circle) {
            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);
            return rSum > dist;
        } else if (range instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Rectangle"]) {
            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);
            return edges <= r ** 2 || distPos.x <= r + width && distPos.y <= r + height || distPos.x <= width || distPos.y <= height;
        }
        return false;
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Rectangle": (()=>Rectangle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Range$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Range.js [app-client] (ecmascript)");
;
;
class Rectangle extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Range$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Range"] {
    constructor(x, y, width, height){
        super(x, y);
        this.size = {
            height: height,
            width: width
        };
    }
    contains(point) {
        const w = this.size.width, h = this.size.height, pos = this.position;
        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;
    }
    intersects(range) {
        if (range instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"]) {
            range.intersects(this);
        }
        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : {
            width: 0,
            height: 0
        }, w2 = size2.width, h2 = size2.height;
        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Random.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Random": (()=>Random)
});
class Random {
    constructor(){
        this.enable = false;
        this.minimumValue = 0;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.minimumValue !== undefined) {
            this.minimumValue = data.minimumValue;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AnimationOptions": (()=>AnimationOptions),
    "RangedAnimationOptions": (()=>RangedAnimationOptions)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class AnimationOptions {
    constructor(){
        this.count = 0;
        this.enable = false;
        this.speed = 1;
        this.decay = 0;
        this.delay = 0;
        this.sync = false;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.count !== undefined) {
            this.count = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.count);
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.speed !== undefined) {
            this.speed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.speed);
        }
        if (data.decay !== undefined) {
            this.decay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.decay);
        }
        if (data.delay !== undefined) {
            this.delay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.delay);
        }
        if (data.sync !== undefined) {
            this.sync = data.sync;
        }
    }
}
class RangedAnimationOptions extends AnimationOptions {
    constructor(){
        super();
        this.mode = "auto";
        this.startValue = "random";
    }
    load(data) {
        super.load(data);
        if (!data) {
            return;
        }
        if (data.minimumValue !== undefined) {
            this.minimumValue = data.minimumValue;
        }
        if (data.mode !== undefined) {
            this.mode = data.mode;
        }
        if (data.startValue !== undefined) {
            this.startValue = data.startValue;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AnimationValueWithRandom": (()=>AnimationValueWithRandom),
    "RangedAnimationValueWithRandom": (()=>RangedAnimationValueWithRandom),
    "ValueWithRandom": (()=>ValueWithRandom)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Random$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Random.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$AnimationOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js [app-client] (ecmascript)");
;
;
;
;
class ValueWithRandom {
    constructor(){
        this.random = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Random$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Random"]();
        this.value = 0;
    }
    load(data) {
        if (!data) {
            return;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBoolean"])(data.random)) {
            this.random.enable = data.random;
        } else {
            this.random.load(data.random);
        }
        if (data.value !== undefined) {
            this.value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.value, this.random.enable ? this.random.minimumValue : undefined);
        }
    }
}
class AnimationValueWithRandom extends ValueWithRandom {
    constructor(){
        super();
        this.animation = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$AnimationOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AnimationOptions"]();
    }
    get anim() {
        return this.animation;
    }
    set anim(value) {
        this.animation = value;
    }
    load(data) {
        super.load(data);
        if (!data) {
            return;
        }
        const animation = data.animation ?? data.anim;
        if (animation !== undefined) {
            this.animation.load(animation);
        }
    }
}
class RangedAnimationValueWithRandom extends AnimationValueWithRandom {
    constructor(){
        super();
        this.animation = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$AnimationOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RangedAnimationOptions"]();
    }
    load(data) {
        super.load(data);
        if (!data) {
            return;
        }
        const animation = data.animation ?? data.anim;
        if (animation !== undefined) {
            this.value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(this.value, this.animation.enable ? this.animation.minimumValue : undefined);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ParticlesBounceFactor": (()=>ParticlesBounceFactor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js [app-client] (ecmascript)");
;
class ParticlesBounceFactor extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ValueWithRandom"] {
    constructor(){
        super();
        this.random.minimumValue = 0.1;
        this.value = 1;
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ParticlesBounce": (()=>ParticlesBounce)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Bounce$2f$ParticlesBounceFactor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js [app-client] (ecmascript)");
;
class ParticlesBounce {
    constructor(){
        this.horizontal = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Bounce$2f$ParticlesBounceFactor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ParticlesBounceFactor"]();
        this.vertical = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Bounce$2f$ParticlesBounceFactor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ParticlesBounceFactor"]();
    }
    load(data) {
        if (!data) {
            return;
        }
        this.horizontal.load(data.horizontal);
        this.vertical.load(data.vertical);
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "CollisionsAbsorb": (()=>CollisionsAbsorb)
});
class CollisionsAbsorb {
    constructor(){
        this.speed = 2;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.speed !== undefined) {
            this.speed = data.speed;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "CollisionsOverlap": (()=>CollisionsOverlap)
});
class CollisionsOverlap {
    constructor(){
        this.enable = true;
        this.retries = 0;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.retries !== undefined) {
            this.retries = data.retries;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Collisions": (()=>Collisions)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Collisions$2f$CollisionsAbsorb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Bounce$2f$ParticlesBounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Collisions$2f$CollisionsOverlap$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
;
;
;
class Collisions {
    constructor(){
        this.absorb = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Collisions$2f$CollisionsAbsorb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CollisionsAbsorb"]();
        this.bounce = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Bounce$2f$ParticlesBounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ParticlesBounce"]();
        this.enable = false;
        this.maxSpeed = 50;
        this.mode = "bounce";
        this.overlap = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Collisions$2f$CollisionsOverlap$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CollisionsOverlap"]();
    }
    load(data) {
        if (!data) {
            return;
        }
        this.absorb.load(data.absorb);
        this.bounce.load(data.bounce);
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.maxSpeed !== undefined) {
            this.maxSpeed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.maxSpeed);
        }
        if (data.mode !== undefined) {
            this.mode = data.mode;
        }
        this.overlap.load(data.overlap);
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ColorAnimation": (()=>ColorAnimation)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class ColorAnimation {
    constructor(){
        this.count = 0;
        this.enable = false;
        this.offset = 0;
        this.speed = 1;
        this.delay = 0;
        this.decay = 0;
        this.sync = true;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.count !== undefined) {
            this.count = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.count);
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.offset !== undefined) {
            this.offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.offset);
        }
        if (data.speed !== undefined) {
            this.speed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.speed);
        }
        if (data.decay !== undefined) {
            this.decay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.decay);
        }
        if (data.delay !== undefined) {
            this.delay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.delay);
        }
        if (data.sync !== undefined) {
            this.sync = data.sync;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "HslAnimation": (()=>HslAnimation)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ColorAnimation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js [app-client] (ecmascript)");
;
class HslAnimation {
    constructor(){
        this.h = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ColorAnimation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ColorAnimation"]();
        this.s = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ColorAnimation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ColorAnimation"]();
        this.l = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ColorAnimation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ColorAnimation"]();
    }
    load(data) {
        if (!data) {
            return;
        }
        this.h.load(data.h);
        this.s.load(data.s);
        this.l.load(data.l);
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "OptionsColor": (()=>OptionsColor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
class OptionsColor {
    constructor(){
        this.value = "";
    }
    static create(source, data) {
        const color = new OptionsColor();
        color.load(source);
        if (data !== undefined) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(data) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(data)) {
                color.load({
                    value: data
                });
            } else {
                color.load(data);
            }
        }
        return color;
    }
    load(data) {
        if (data?.value === undefined) {
            return;
        }
        this.value = data.value;
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AnimatableColor": (()=>AnimatableColor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$HslAnimation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
;
;
;
class AnimatableColor extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"] {
    constructor(){
        super();
        this.animation = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$HslAnimation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["HslAnimation"]();
    }
    static create(source, data) {
        const color = new AnimatableColor();
        color.load(source);
        if (data !== undefined) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(data) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(data)) {
                color.load({
                    value: data
                });
            } else {
                color.load(data);
            }
        }
        return color;
    }
    load(data) {
        super.load(data);
        if (!data) {
            return;
        }
        const colorAnimation = data.animation;
        if (colorAnimation !== undefined) {
            if (colorAnimation.enable !== undefined) {
                this.animation.h.load(colorAnimation);
            } else {
                this.animation.load(data.animation);
            }
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MoveAngle": (()=>MoveAngle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class MoveAngle {
    constructor(){
        this.offset = 0;
        this.value = 90;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.offset !== undefined) {
            this.offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.offset);
        }
        if (data.value !== undefined) {
            this.value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.value);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MoveAttract": (()=>MoveAttract)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class MoveAttract {
    constructor(){
        this.distance = 200;
        this.enable = false;
        this.rotate = {
            x: 3000,
            y: 3000
        };
    }
    get rotateX() {
        return this.rotate.x;
    }
    set rotateX(value) {
        this.rotate.x = value;
    }
    get rotateY() {
        return this.rotate.y;
    }
    set rotateY(value) {
        this.rotate.y = value;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.distance !== undefined) {
            this.distance = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.distance);
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        const rotateX = data.rotate?.x ?? data.rotateX;
        if (rotateX !== undefined) {
            this.rotate.x = rotateX;
        }
        const rotateY = data.rotate?.y ?? data.rotateY;
        if (rotateY !== undefined) {
            this.rotate.y = rotateY;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MoveCenter": (()=>MoveCenter)
});
class MoveCenter {
    constructor(){
        this.x = 50;
        this.y = 50;
        this.mode = "percent";
        this.radius = 0;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.x !== undefined) {
            this.x = data.x;
        }
        if (data.y !== undefined) {
            this.y = data.y;
        }
        if (data.mode !== undefined) {
            this.mode = data.mode;
        }
        if (data.radius !== undefined) {
            this.radius = data.radius;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MoveGravity": (()=>MoveGravity)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class MoveGravity {
    constructor(){
        this.acceleration = 9.81;
        this.enable = false;
        this.inverse = false;
        this.maxSpeed = 50;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.acceleration !== undefined) {
            this.acceleration = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.acceleration);
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.inverse !== undefined) {
            this.inverse = data.inverse;
        }
        if (data.maxSpeed !== undefined) {
            this.maxSpeed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.maxSpeed);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MovePath": (()=>MovePath)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
;
class MovePath {
    constructor(){
        this.clamp = true;
        this.delay = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ValueWithRandom"]();
        this.enable = false;
        this.options = {};
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.clamp !== undefined) {
            this.clamp = data.clamp;
        }
        this.delay.load(data.delay);
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        this.generator = data.generator;
        if (data.options) {
            this.options = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])(this.options, data.options);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "OutModes": (()=>OutModes)
});
class OutModes {
    constructor(){
        this.default = "out";
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.default !== undefined) {
            this.default = data.default;
        }
        this.bottom = data.bottom ?? data.default;
        this.left = data.left ?? data.default;
        this.right = data.right ?? data.default;
        this.top = data.top ?? data.default;
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Spin": (()=>Spin)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
;
class Spin {
    constructor(){
        this.acceleration = 0;
        this.enable = false;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.acceleration !== undefined) {
            this.acceleration = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.acceleration);
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.position) {
            this.position = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])({}, data.position);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MoveTrailFill": (()=>MoveTrailFill)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
;
class MoveTrailFill {
    load(data) {
        if (!data) {
            return;
        }
        if (data.color !== undefined) {
            this.color = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(this.color, data.color);
        }
        if (data.image !== undefined) {
            this.image = data.image;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MoveTrail": (()=>MoveTrail)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$MoveTrailFill$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js [app-client] (ecmascript)");
;
class MoveTrail {
    constructor(){
        this.enable = false;
        this.length = 10;
        this.fill = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$MoveTrailFill$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoveTrailFill"]();
    }
    get fillColor() {
        return this.fill.color;
    }
    set fillColor(value) {
        this.fill.load({
            color: value
        });
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.fill !== undefined || data.fillColor !== undefined) {
            this.fill.load(data.fill || {
                color: data.fillColor
            });
        }
        if (data.length !== undefined) {
            this.length = data.length;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Move": (()=>Move)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$MoveAngle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$MoveAttract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$MoveCenter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$MoveGravity$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$Path$2f$MovePath$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$OutModes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$Spin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$MoveTrail$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
class Move {
    constructor(){
        this.angle = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$MoveAngle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoveAngle"]();
        this.attract = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$MoveAttract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoveAttract"]();
        this.center = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$MoveCenter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoveCenter"]();
        this.decay = 0;
        this.distance = {};
        this.direction = "none";
        this.drift = 0;
        this.enable = false;
        this.gravity = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$MoveGravity$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoveGravity"]();
        this.path = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$Path$2f$MovePath$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MovePath"]();
        this.outModes = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$OutModes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OutModes"]();
        this.random = false;
        this.size = false;
        this.speed = 2;
        this.spin = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$Spin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Spin"]();
        this.straight = false;
        this.trail = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$MoveTrail$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MoveTrail"]();
        this.vibrate = false;
        this.warp = false;
    }
    get bounce() {
        return this.collisions;
    }
    set bounce(value) {
        this.collisions = value;
    }
    get collisions() {
        return false;
    }
    set collisions(_) {}
    get noise() {
        return this.path;
    }
    set noise(value) {
        this.path = value;
    }
    get outMode() {
        return this.outModes.default;
    }
    set outMode(value) {
        this.outModes.default = value;
    }
    get out_mode() {
        return this.outMode;
    }
    set out_mode(value) {
        this.outMode = value;
    }
    load(data) {
        if (!data) {
            return;
        }
        this.angle.load((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumber"])(data.angle) ? {
            value: data.angle
        } : data.angle);
        this.attract.load(data.attract);
        this.center.load(data.center);
        if (data.decay !== undefined) {
            this.decay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.decay);
        }
        if (data.direction !== undefined) {
            this.direction = data.direction;
        }
        if (data.distance !== undefined) {
            this.distance = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumber"])(data.distance) ? {
                horizontal: data.distance,
                vertical: data.distance
            } : {
                ...data.distance
            };
        }
        if (data.drift !== undefined) {
            this.drift = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.drift);
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        this.gravity.load(data.gravity);
        const outModes = data.outModes ?? data.outMode ?? data.out_mode;
        if (outModes !== undefined) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])(outModes)) {
                this.outModes.load(outModes);
            } else {
                this.outModes.load({
                    default: outModes
                });
            }
        }
        this.path.load(data.path ?? data.noise);
        if (data.random !== undefined) {
            this.random = data.random;
        }
        if (data.size !== undefined) {
            this.size = data.size;
        }
        if (data.speed !== undefined) {
            this.speed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.speed);
        }
        this.spin.load(data.spin);
        if (data.straight !== undefined) {
            this.straight = data.straight;
        }
        this.trail.load(data.trail);
        if (data.vibrate !== undefined) {
            this.vibrate = data.vibrate;
        }
        if (data.warp !== undefined) {
            this.warp = data.warp;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ParticlesDensity": (()=>ParticlesDensity)
});
class ParticlesDensity {
    constructor(){
        this.enable = false;
        this.width = 1920;
        this.height = 1080;
    }
    get area() {
        return this.width;
    }
    set area(value) {
        this.width = value;
    }
    get factor() {
        return this.height;
    }
    set factor(value) {
        this.height = value;
    }
    get value_area() {
        return this.area;
    }
    set value_area(value) {
        this.area = value;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        const width = data.width ?? data.area ?? data.value_area;
        if (width !== undefined) {
            this.width = width;
        }
        const height = data.height ?? data.factor;
        if (height !== undefined) {
            this.height = height;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ParticlesNumber": (()=>ParticlesNumber)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Number$2f$ParticlesDensity$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js [app-client] (ecmascript)");
;
class ParticlesNumber {
    constructor(){
        this.density = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Number$2f$ParticlesDensity$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ParticlesDensity"]();
        this.limit = 0;
        this.value = 0;
    }
    get max() {
        return this.limit;
    }
    set max(value) {
        this.limit = value;
    }
    load(data) {
        if (!data) {
            return;
        }
        this.density.load(data.density);
        const limit = data.limit ?? data.max;
        if (limit !== undefined) {
            this.limit = limit;
        }
        if (data.value !== undefined) {
            this.value = data.value;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "OpacityAnimation": (()=>OpacityAnimation)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$AnimationOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js [app-client] (ecmascript)");
;
class OpacityAnimation extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$AnimationOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RangedAnimationOptions"] {
    constructor(){
        super();
        this.destroy = "none";
        this.speed = 2;
    }
    get opacity_min() {
        return this.minimumValue;
    }
    set opacity_min(value) {
        this.minimumValue = value;
    }
    load(data) {
        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {
            data.minimumValue = data.opacity_min;
        }
        super.load(data);
        if (!data) {
            return;
        }
        if (data.destroy !== undefined) {
            this.destroy = data.destroy;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Opacity": (()=>Opacity)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Opacity$2f$OpacityAnimation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js [app-client] (ecmascript)");
;
;
;
class Opacity extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ValueWithRandom"] {
    constructor(){
        super();
        this.animation = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Opacity$2f$OpacityAnimation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OpacityAnimation"]();
        this.random.minimumValue = 0.1;
        this.value = 1;
    }
    get anim() {
        return this.animation;
    }
    set anim(value) {
        this.animation = value;
    }
    load(data) {
        if (!data) {
            return;
        }
        super.load(data);
        const animation = data.animation ?? data.anim;
        if (animation !== undefined) {
            this.animation.load(animation);
            this.value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(this.value, this.animation.enable ? this.animation.minimumValue : undefined);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Shadow": (()=>Shadow)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
;
class Shadow {
    constructor(){
        this.blur = 0;
        this.color = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"]();
        this.enable = false;
        this.offset = {
            x: 0,
            y: 0
        };
        this.color.value = "#000";
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.blur !== undefined) {
            this.blur = data.blur;
        }
        this.color = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(this.color, data.color);
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.offset === undefined) {
            return;
        }
        if (data.offset.x !== undefined) {
            this.offset.x = data.offset.x;
        }
        if (data.offset.y !== undefined) {
            this.offset.y = data.offset.y;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Shape": (()=>Shape)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
const charKey = "character", charAltKey = "char", imageKey = "image", imageAltKey = "images", polygonKey = "polygon", polygonAltKey = "star";
class Shape {
    constructor(){
        this.loadShape = (item, mainKey, altKey, altOverride)=>{
            if (!item) {
                return;
            }
            const itemIsArray = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(this.options[mainKey]), altDifferentValues = itemIsArray !== (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(this.options[altKey]);
            if (mainDifferentValues) {
                this.options[mainKey] = emptyValue;
            }
            if (altDifferentValues && altOverride) {
                this.options[altKey] = emptyValue;
            }
            this.options[mainKey] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])(this.options[mainKey] ?? emptyValue, item);
            if (!this.options[altKey] || altOverride) {
                this.options[altKey] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])(this.options[altKey] ?? emptyValue, item);
            }
        };
        this.close = true;
        this.fill = true;
        this.options = {};
        this.type = "circle";
    }
    get character() {
        return this.options[charKey] ?? this.options[charAltKey];
    }
    set character(value) {
        this.options[charAltKey] = this.options[charKey] = value;
    }
    get custom() {
        return this.options;
    }
    set custom(value) {
        this.options = value;
    }
    get image() {
        return this.options[imageKey] ?? this.options[imageAltKey];
    }
    set image(value) {
        this.options[imageAltKey] = this.options[imageKey] = value;
    }
    get images() {
        return this.image;
    }
    set images(value) {
        this.image = value;
    }
    get polygon() {
        return this.options[polygonKey] ?? this.options[polygonAltKey];
    }
    set polygon(value) {
        this.options[polygonAltKey] = this.options[polygonKey] = value;
    }
    get stroke() {
        return [];
    }
    set stroke(_value) {}
    load(data) {
        if (!data) {
            return;
        }
        const options = data.options ?? data.custom;
        if (options !== undefined) {
            for(const shape in options){
                const item = options[shape];
                if (item) {
                    this.options[shape] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])(this.options[shape] ?? {}, item);
                }
            }
        }
        this.loadShape(data.character, charKey, charAltKey, true);
        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);
        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);
        if (data.close !== undefined) {
            this.close = data.close;
        }
        if (data.fill !== undefined) {
            this.fill = data.fill;
        }
        if (data.type !== undefined) {
            this.type = data.type;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SizeAnimation": (()=>SizeAnimation)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$AnimationOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js [app-client] (ecmascript)");
;
class SizeAnimation extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$AnimationOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RangedAnimationOptions"] {
    constructor(){
        super();
        this.destroy = "none";
        this.speed = 5;
    }
    get size_min() {
        return this.minimumValue;
    }
    set size_min(value) {
        this.minimumValue = value;
    }
    load(data) {
        if (data?.size_min !== undefined && data.minimumValue === undefined) {
            data.minimumValue = data.size_min;
        }
        super.load(data);
        if (!data) {
            return;
        }
        if (data.destroy !== undefined) {
            this.destroy = data.destroy;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Size": (()=>Size)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Size$2f$SizeAnimation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js [app-client] (ecmascript)");
;
;
;
class Size extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ValueWithRandom"] {
    constructor(){
        super();
        this.animation = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Size$2f$SizeAnimation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SizeAnimation"]();
        this.random.minimumValue = 1;
        this.value = 3;
    }
    get anim() {
        return this.animation;
    }
    set anim(value) {
        this.animation = value;
    }
    load(data) {
        super.load(data);
        if (!data) {
            return;
        }
        const animation = data.animation ?? data.anim;
        if (animation !== undefined) {
            this.animation.load(animation);
            this.value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(this.value, this.animation.enable ? this.animation.minimumValue : undefined);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Stroke": (()=>Stroke)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$AnimatableColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
;
class Stroke {
    constructor(){
        this.width = 0;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.color !== undefined) {
            this.color = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$AnimatableColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AnimatableColor"].create(this.color, data.color);
        }
        if (data.width !== undefined) {
            this.width = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.width);
        }
        if (data.opacity !== undefined) {
            this.opacity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.opacity);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ZIndex": (()=>ZIndex)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js [app-client] (ecmascript)");
;
class ZIndex extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ValueWithRandom"] {
    constructor(){
        super();
        this.opacityRate = 1;
        this.sizeRate = 1;
        this.velocityRate = 1;
    }
    load(data) {
        super.load(data);
        if (!data) {
            return;
        }
        if (data.opacityRate !== undefined) {
            this.opacityRate = data.opacityRate;
        }
        if (data.sizeRate !== undefined) {
            this.sizeRate = data.sizeRate;
        }
        if (data.velocityRate !== undefined) {
            this.velocityRate = data.velocityRate;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ParticlesOptions": (()=>ParticlesOptions)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Bounce$2f$ParticlesBounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Collisions$2f$Collisions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$AnimatableColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$Move$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Number$2f$ParticlesNumber$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Opacity$2f$Opacity$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Shadow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Shape$2f$Shape$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Size$2f$Size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Stroke$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$ZIndex$2f$ZIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
class ParticlesOptions {
    constructor(engine, container){
        this._engine = engine;
        this._container = container;
        this.bounce = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Bounce$2f$ParticlesBounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ParticlesBounce"]();
        this.collisions = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Collisions$2f$Collisions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Collisions"]();
        this.color = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$AnimatableColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AnimatableColor"]();
        this.color.value = "#fff";
        this.groups = {};
        this.move = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Move$2f$Move$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Move"]();
        this.number = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Number$2f$ParticlesNumber$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ParticlesNumber"]();
        this.opacity = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Opacity$2f$Opacity$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Opacity"]();
        this.reduceDuplicates = false;
        this.shadow = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Shadow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Shadow"]();
        this.shape = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Shape$2f$Shape$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Shape"]();
        this.size = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Size$2f$Size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Size"]();
        this.stroke = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Stroke$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Stroke"]();
        this.zIndex = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$ZIndex$2f$ZIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ZIndex"]();
    }
    load(data) {
        if (!data) {
            return;
        }
        this.bounce.load(data.bounce);
        this.color.load(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$AnimatableColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AnimatableColor"].create(this.color, data.color));
        if (data.groups !== undefined) {
            for(const group in data.groups){
                const item = data.groups[group];
                if (item !== undefined) {
                    this.groups[group] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])(this.groups[group] ?? {}, item);
                }
            }
        }
        this.move.load(data.move);
        this.number.load(data.number);
        this.opacity.load(data.opacity);
        if (data.reduceDuplicates !== undefined) {
            this.reduceDuplicates = data.reduceDuplicates;
        }
        this.shape.load(data.shape);
        this.size.load(data.size);
        this.shadow.load(data.shadow);
        this.zIndex.load(data.zIndex);
        const collisions = data.move?.collisions ?? data.move?.bounce;
        if (collisions !== undefined) {
            this.collisions.enable = collisions;
        }
        this.collisions.load(data.collisions);
        if (data.interactivity !== undefined) {
            this.interactivity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])({}, data.interactivity);
        }
        const strokeToLoad = data.stroke ?? data.shape?.stroke;
        if (strokeToLoad) {
            this.stroke = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(strokeToLoad, (t)=>{
                const tmp = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$Stroke$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Stroke"]();
                tmp.load(t);
                return tmp;
            });
        }
        if (this._container) {
            const updaters = this._engine.plugins.updaters.get(this._container);
            if (updaters) {
                for (const updater of updaters){
                    if (updater.loadOptions) {
                        updater.loadOptions(this, data);
                    }
                }
            }
            const interactors = this._engine.plugins.interactors.get(this._container);
            if (interactors) {
                for (const interactor of interactors){
                    if (interactor.loadParticlesOptions) {
                        interactor.loadParticlesOptions(this, data);
                    }
                }
            }
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadOptions": (()=>loadOptions),
    "loadParticlesOptions": (()=>loadParticlesOptions)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$ParticlesOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js [app-client] (ecmascript)");
;
function loadOptions(options, ...sourceOptionsArr) {
    for (const sourceOptions of sourceOptionsArr){
        options.load(sourceOptions);
    }
}
function loadParticlesOptions(engine, container, ...sourceOptionsArr) {
    const options = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Particles$2f$ParticlesOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ParticlesOptions"](engine, container);
    loadOptions(options, ...sourceOptionsArr);
    return options;
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ClickEvent": (()=>ClickEvent)
});
class ClickEvent {
    constructor(){
        this.enable = false;
        this.mode = [];
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.mode !== undefined) {
            this.mode = data.mode;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "DivEvent": (()=>DivEvent)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
class DivEvent {
    constructor(){
        this.selectors = [];
        this.enable = false;
        this.mode = [];
        this.type = "circle";
    }
    get el() {
        return this.elementId;
    }
    set el(value) {
        this.elementId = value;
    }
    get elementId() {
        return this.ids;
    }
    set elementId(value) {
        this.ids = value;
    }
    get ids() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(this.selectors, (t)=>t.replace("#", ""));
    }
    set ids(value) {
        this.selectors = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(value, (t)=>`#${t}`);
    }
    load(data) {
        if (!data) {
            return;
        }
        const ids = data.ids ?? data.elementId ?? data.el;
        if (ids !== undefined) {
            this.ids = ids;
        }
        if (data.selectors !== undefined) {
            this.selectors = data.selectors;
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.mode !== undefined) {
            this.mode = data.mode;
        }
        if (data.type !== undefined) {
            this.type = data.type;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Parallax": (()=>Parallax)
});
class Parallax {
    constructor(){
        this.enable = false;
        this.force = 2;
        this.smooth = 10;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.force !== undefined) {
            this.force = data.force;
        }
        if (data.smooth !== undefined) {
            this.smooth = data.smooth;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "HoverEvent": (()=>HoverEvent)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Events$2f$Parallax$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js [app-client] (ecmascript)");
;
class HoverEvent {
    constructor(){
        this.enable = false;
        this.mode = [];
        this.parallax = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Events$2f$Parallax$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Parallax"]();
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.mode !== undefined) {
            this.mode = data.mode;
        }
        this.parallax.load(data.parallax);
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ResizeEvent": (()=>ResizeEvent)
});
class ResizeEvent {
    constructor(){
        this.delay = 0.5;
        this.enable = true;
    }
    load(data) {
        if (data === undefined) {
            return;
        }
        if (data.delay !== undefined) {
            this.delay = data.delay;
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Events": (()=>Events)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Events$2f$ClickEvent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Events$2f$DivEvent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Events$2f$HoverEvent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Events$2f$ResizeEvent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
;
;
;
;
class Events {
    constructor(){
        this.onClick = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Events$2f$ClickEvent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ClickEvent"]();
        this.onDiv = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Events$2f$DivEvent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DivEvent"]();
        this.onHover = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Events$2f$HoverEvent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["HoverEvent"]();
        this.resize = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Events$2f$ResizeEvent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ResizeEvent"]();
    }
    get onclick() {
        return this.onClick;
    }
    set onclick(value) {
        this.onClick = value;
    }
    get ondiv() {
        return this.onDiv;
    }
    set ondiv(value) {
        this.onDiv = value;
    }
    get onhover() {
        return this.onHover;
    }
    set onhover(value) {
        this.onHover = value;
    }
    load(data) {
        if (!data) {
            return;
        }
        this.onClick.load(data.onClick ?? data.onclick);
        const onDiv = data.onDiv ?? data.ondiv;
        if (onDiv !== undefined) {
            this.onDiv = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(onDiv, (t)=>{
                const tmp = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Events$2f$DivEvent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DivEvent"]();
                tmp.load(t);
                return tmp;
            });
        }
        this.onHover.load(data.onHover ?? data.onhover);
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBoolean"])(data.resize)) {
            this.resize.enable = data.resize;
        } else {
            this.resize.load(data.resize);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Modes": (()=>Modes)
});
class Modes {
    constructor(engine, container){
        this._engine = engine;
        this._container = container;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (!this._container) {
            return;
        }
        const interactors = this._engine.plugins.interactors.get(this._container);
        if (!interactors) {
            return;
        }
        for (const interactor of interactors){
            if (!interactor.loadModeOptions) {
                continue;
            }
            interactor.loadModeOptions(this, data);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Interactivity": (()=>Interactivity)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Events$2f$Events$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Modes$2f$Modes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js [app-client] (ecmascript)");
;
;
class Interactivity {
    constructor(engine, container){
        this.detectsOn = "window";
        this.events = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Events$2f$Events$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Events"]();
        this.modes = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Modes$2f$Modes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Modes"](engine, container);
    }
    get detect_on() {
        return this.detectsOn;
    }
    set detect_on(value) {
        this.detectsOn = value;
    }
    load(data) {
        if (!data) {
            return;
        }
        const detectsOn = data.detectsOn ?? data.detect_on;
        if (detectsOn !== undefined) {
            this.detectsOn = detectsOn;
        }
        this.events.load(data.events);
        this.modes.load(data.modes);
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Particle.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Particle": (()=>Particle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector3d$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$OptionsUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Interactivity$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
const fixOutMode = (data)=>{
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])(data.outMode, data.checkModes)) {
        return;
    }
    const diameter = data.radius * 2;
    if (data.coord > data.maxCoord - diameter) {
        data.setCb(-data.radius);
    } else if (data.coord < diameter) {
        data.setCb(data.radius);
    }
};
class Particle {
    constructor(engine, id, container, position, overrideOptions, group){
        this.container = container;
        this._calcPosition = (container, position, zIndex, tryCount = 0)=>{
            for (const [, plugin] of container.plugins){
                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;
                if (pluginPos) {
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector3d$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector3d"].create(pluginPos.x, pluginPos.y, zIndex);
                }
            }
            const canvasSize = container.canvas.size, exactPosition = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["calcExactPositionOrRandomFromSize"])({
                size: canvasSize,
                position: position
            }), pos = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector3d$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector3d"].create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode)=>{
                fixOutMode({
                    outMode,
                    checkModes: [
                        "bounce",
                        "bounce-horizontal"
                    ],
                    coord: pos.x,
                    maxCoord: container.canvas.size.width,
                    setCb: (value)=>pos.x += value,
                    radius
                });
            }, fixVertical = (outMode)=>{
                fixOutMode({
                    outMode,
                    checkModes: [
                        "bounce",
                        "bounce-vertical"
                    ],
                    coord: pos.y,
                    maxCoord: container.canvas.size.height,
                    setCb: (value)=>pos.y += value,
                    radius
                });
            };
            fixHorizontal(outModes.left ?? outModes.default);
            fixHorizontal(outModes.right ?? outModes.default);
            fixVertical(outModes.top ?? outModes.default);
            fixVertical(outModes.bottom ?? outModes.default);
            if (this._checkOverlap(pos, tryCount)) {
                return this._calcPosition(container, undefined, zIndex, tryCount + 1);
            }
            return pos;
        };
        this._calculateVelocity = ()=>{
            const baseVelocity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getParticleBaseVelocity"])(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;
            if (moveOptions.direction === "inside" || moveOptions.direction === "outside") {
                return res;
            }
            const rad = Math.PI / 180 * (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(moveOptions.angle.value), radOffset = Math.PI / 180 * (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(moveOptions.angle.offset), range = {
                left: radOffset - rad / 2,
                right: radOffset + rad / 2
            };
            if (!moveOptions.straight) {
                res.angle += (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(range.left, range.right));
            }
            if (moveOptions.random && typeof moveOptions.speed === "number") {
                res.length *= (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])();
            }
            return res;
        };
        this._checkOverlap = (pos, tryCount = 0)=>{
            const collisionsOptions = this.options.collisions, radius = this.getRadius();
            if (!collisionsOptions.enable) {
                return false;
            }
            const overlapOptions = collisionsOptions.overlap;
            if (overlapOptions.enable) {
                return false;
            }
            const retries = overlapOptions.retries;
            if (retries >= 0 && tryCount > retries) {
                throw new Error(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorPrefix"]} particle is overlapping and can't be placed`);
            }
            return !!this.container.particles.find((particle)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(pos, particle.position) < radius + particle.getRadius());
        };
        this._getRollColor = (color)=>{
            if (!color || !this.roll || !this.backColor && !this.roll.alter) {
                return color;
            }
            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;
            if (!rolled) {
                return color;
            }
            if (this.backColor) {
                return this.backColor;
            }
            if (this.roll.alter) {
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["alterHsl"])(color, this.roll.alter.type, this.roll.alter.value);
            }
            return color;
        };
        this._initPosition = (position)=>{
            const container = this.container, zIndexValue = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(this.options.zIndex.value);
            this.position = this._calcPosition(container, position, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])(zIndexValue, 0, container.zLayers));
            this.initialPosition = this.position.copy();
            const canvasSize = container.canvas.size;
            this.moveCenter = {
                ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPosition"])(this.options.move.center, canvasSize),
                radius: this.options.move.center.radius ?? 0,
                mode: this.options.move.center.mode ?? "percent"
            };
            this.direction = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getParticleDirectionAngle"])(this.options.move.direction, this.position, this.moveCenter);
            switch(this.options.move.direction){
                case "inside":
                    this.outType = "inside";
                    break;
                case "outside":
                    this.outType = "outside";
                    break;
            }
            this.offset = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin;
        };
        this._loadShapeData = (shapeOptions, reduceDuplicates)=>{
            const shapeData = shapeOptions.options[this.shape];
            if (!shapeData) {
                return;
            }
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])({
                close: shapeOptions.close,
                fill: shapeOptions.fill
            }, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromSingleOrMultiple"])(shapeData, this.id, reduceDuplicates));
        };
        this._engine = engine;
        this.init(id, position, overrideOptions, group);
    }
    destroy(override) {
        if (this.unbreakable || this.destroyed) {
            return;
        }
        this.destroyed = true;
        this.bubble.inRange = false;
        this.slow.inRange = false;
        const container = this.container, pathGenerator = this.pathGenerator;
        for (const [, plugin] of container.plugins){
            if (plugin.particleDestroyed) {
                plugin.particleDestroyed(this, override);
            }
        }
        for (const updater of container.particles.updaters){
            if (updater.particleDestroyed) {
                updater.particleDestroyed(this, override);
            }
        }
        if (pathGenerator) {
            pathGenerator.reset(this);
        }
    }
    draw(delta) {
        const container = this.container;
        for (const [, plugin] of container.plugins){
            container.canvas.drawParticlePlugin(plugin, this, delta);
        }
        container.canvas.drawParticle(this, delta);
    }
    getFillColor() {
        return this._getRollColor(this.bubble.color ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getHslFromAnimation"])(this.color));
    }
    getMass() {
        return this.getRadius() ** 2 * Math.PI / 2;
    }
    getPosition() {
        return {
            x: this.position.x + this.offset.x,
            y: this.position.y + this.offset.y,
            z: this.position.z
        };
    }
    getRadius() {
        return this.bubble.radius ?? this.size.value;
    }
    getStrokeColor() {
        return this._getRollColor(this.bubble.color ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getHslFromAnimation"])(this.strokeColor));
    }
    init(id, position, overrideOptions, group) {
        const container = this.container, engine = this._engine;
        this.id = id;
        this.group = group;
        this.fill = true;
        this.pathRotation = false;
        this.close = true;
        this.lastPathTime = 0;
        this.destroyed = false;
        this.unbreakable = false;
        this.rotation = 0;
        this.misplaced = false;
        this.retina = {
            maxDistance: {}
        };
        this.outType = "normal";
        this.ignoresResizeRatio = true;
        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$OptionsUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadParticlesOptions"])(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;
        this.shape = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromSingleOrMultiple"])(shapeType, this.id, reduceDuplicates);
        const shapeOptions = particlesOptions.shape;
        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {
            const overrideShapeType = overrideOptions.shape.type, shape = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromSingleOrMultiple"])(overrideShapeType, this.id, reduceDuplicates);
            if (shape) {
                this.shape = shape;
                shapeOptions.load(overrideOptions.shape);
            }
        }
        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);
        particlesOptions.load(overrideOptions);
        const shapeData = this.shapeData;
        if (shapeData) {
            particlesOptions.load(shapeData.particles);
        }
        const interactivity = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Interactivity$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Interactivity"](engine, container);
        interactivity.load(container.actualOptions.interactivity);
        interactivity.load(particlesOptions.interactivity);
        this.interactivity = interactivity;
        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;
        this.close = shapeData?.close ?? particlesOptions.shape.close;
        this.options = particlesOptions;
        const pathOptions = this.options.move.path;
        this.pathDelay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getValue"])(pathOptions.delay) * 1000;
        if (pathOptions.generator) {
            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);
            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {
                this.pathGenerator.init(container);
            }
        }
        container.retina.initParticle(this);
        this.size = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["initParticleNumericAnimationValue"])(this.options.size, pxRatio);
        this.bubble = {
            inRange: false
        };
        this.slow = {
            inRange: false,
            factor: 1
        };
        this._initPosition(position);
        this.initialVelocity = this._calculateVelocity();
        this.velocity = this.initialVelocity.copy();
        this.moveDecay = 1 - (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(this.options.move.decay);
        const particles = container.particles;
        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;
        particles.lastZIndex = this.position.z;
        this.zIndexFactor = this.position.z / container.zLayers;
        this.sides = 24;
        let drawer = container.drawers.get(this.shape);
        if (!drawer) {
            drawer = this._engine.plugins.getShapeDrawer(this.shape);
            if (drawer) {
                container.drawers.set(this.shape, drawer);
            }
        }
        if (drawer && drawer.loadShape) {
            drawer.loadShape(this);
        }
        const sideCountFunc = drawer?.getSidesCount;
        if (sideCountFunc) {
            this.sides = sideCountFunc(this);
        }
        this.spawning = false;
        this.shadowColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToRgb"])(this.options.shadow.color);
        for (const updater of container.particles.updaters){
            updater.init(this);
        }
        for (const mover of container.particles.movers){
            mover.init && mover.init(this);
        }
        if (drawer && drawer.particleInit) {
            drawer.particleInit(container, this);
        }
        for (const [, plugin] of container.plugins){
            plugin.particleCreated && plugin.particleCreated(this);
        }
    }
    isInsideCanvas() {
        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;
        return position.x >= -radius && position.y >= -radius && position.y <= canvasSize.height + radius && position.x <= canvasSize.width + radius;
    }
    isVisible() {
        return !this.destroyed && !this.spawning && this.isInsideCanvas();
    }
    reset() {
        for (const updater of this.container.particles.updaters){
            updater.reset && updater.reset(this);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "InteractionManager": (()=>InteractionManager)
});
class InteractionManager {
    constructor(engine, container){
        this.container = container;
        this._engine = engine;
        this._interactors = engine.plugins.getInteractors(this.container, true);
        this._externalInteractors = [];
        this._particleInteractors = [];
    }
    async externalInteract(delta) {
        for (const interactor of this._externalInteractors){
            interactor.isEnabled() && await interactor.interact(delta);
        }
    }
    handleClickMode(mode) {
        for (const interactor of this._externalInteractors){
            interactor.handleClickMode && interactor.handleClickMode(mode);
        }
    }
    init() {
        this._externalInteractors = [];
        this._particleInteractors = [];
        for (const interactor of this._interactors){
            switch(interactor.type){
                case "external":
                    this._externalInteractors.push(interactor);
                    break;
                case "particles":
                    this._particleInteractors.push(interactor);
                    break;
            }
            interactor.init();
        }
    }
    async particlesInteract(particle, delta) {
        for (const interactor of this._externalInteractors){
            interactor.clear(particle, delta);
        }
        for (const interactor of this._particleInteractors){
            interactor.isEnabled(particle) && await interactor.interact(particle, delta);
        }
    }
    async reset(particle) {
        for (const interactor of this._externalInteractors){
            interactor.isEnabled() && interactor.reset(particle);
        }
        for (const interactor of this._particleInteractors){
            interactor.isEnabled(particle) && interactor.reset(particle);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "QuadTree": (()=>QuadTree)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js [app-client] (ecmascript)");
;
;
;
class QuadTree {
    constructor(rectangle, capacity){
        this.rectangle = rectangle;
        this.capacity = capacity;
        this._subdivide = ()=>{
            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;
            for(let i = 0; i < 4; i++){
                this._subs.push(new QuadTree(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Rectangle"](x + width / 2 * (i % 2), y + height / 2 * (Math.round(i / 2) - i % 2), width / 2, height / 2), capacity));
            }
            this._divided = true;
        };
        this._points = [];
        this._divided = false;
        this._subs = [];
    }
    insert(point) {
        if (!this.rectangle.contains(point.position)) {
            return false;
        }
        if (this._points.length < this.capacity) {
            this._points.push(point);
            return true;
        }
        if (!this._divided) {
            this._subdivide();
        }
        return this._subs.some((sub)=>sub.insert(point));
    }
    query(range, check, found) {
        const res = found || [];
        if (!range.intersects(this.rectangle)) {
            return [];
        }
        for (const p of this._points){
            if (!range.contains(p.position) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(range.position, p.position) > p.particle.getRadius() && (!check || check(p.particle))) {
                continue;
            }
            res.push(p.particle);
        }
        if (this._divided) {
            for (const sub of this._subs){
                sub.query(range, check, res);
            }
        }
        return res;
    }
    queryCircle(position, radius, check) {
        return this.query(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](position.x, position.y, radius), check);
    }
    queryRectangle(position, size, check) {
        return this.query(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Rectangle"](position.x, position.y, size.width, size.height), check);
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Utils/Point.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Point": (()=>Point)
});
class Point {
    constructor(position, particle){
        this.position = position;
        this.particle = particle;
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Particles.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Particles": (()=>Particles)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Particle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Particle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$InteractionManager$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$QuadTree$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Point$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Point.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
const qTreeCapacity = 4;
const qTreeRectangle = (canvasSize)=>{
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Rectangle"](-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2);
};
class Particles {
    constructor(engine, container){
        this._applyDensity = (options, manualCount, group)=>{
            if (!options.number.density?.enable) {
                return;
            }
            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t)=>t.group === group).length);
            this.limit = numberOptions.limit * densityFactor;
            if (particlesCount < particlesNumber) {
                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);
            } else if (particlesCount > particlesNumber) {
                this.removeQuantity(particlesCount - particlesNumber, group);
            }
        };
        this._initDensityFactor = (densityOptions)=>{
            const container = this._container;
            if (!container.canvas.element || !densityOptions.enable) {
                return 1;
            }
            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;
            return canvas.width * canvas.height / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);
        };
        this._pushParticle = (position, overrideOptions, group, initializer)=>{
            try {
                let particle = this.pool.pop();
                if (particle) {
                    particle.init(this._nextId, position, overrideOptions, group);
                } else {
                    particle = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Particle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Particle"](this._engine, this._nextId, this._container, position, overrideOptions, group);
                }
                let canAdd = true;
                if (initializer) {
                    canAdd = initializer(particle);
                }
                if (!canAdd) {
                    return;
                }
                this._array.push(particle);
                this._zArray.push(particle);
                this._nextId++;
                this._engine.dispatchEvent("particleAdded", {
                    container: this._container,
                    data: {
                        particle
                    }
                });
                return particle;
            } catch (e) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLogger"])().warning(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorPrefix"]} adding particle: ${e}`);
                return;
            }
        };
        this._removeParticle = (index, group, override)=>{
            const particle = this._array[index];
            if (!particle || particle.group !== group) {
                return false;
            }
            particle.destroy(override);
            const zIdx = this._zArray.indexOf(particle);
            this._array.splice(index, 1);
            this._zArray.splice(zIdx, 1);
            this.pool.push(particle);
            this._engine.dispatchEvent("particleRemoved", {
                container: this._container,
                data: {
                    particle
                }
            });
            return true;
        };
        this._engine = engine;
        this._container = container;
        this._nextId = 0;
        this._array = [];
        this._zArray = [];
        this.pool = [];
        this.limit = 0;
        this.needsSort = false;
        this.lastZIndex = 0;
        this._interactionManager = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$InteractionManager$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InteractionManager"](engine, container);
        const canvasSize = container.canvas.size;
        this.quadTree = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$QuadTree$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["QuadTree"](qTreeRectangle(canvasSize), qTreeCapacity);
        this.movers = this._engine.plugins.getMovers(container, true);
        this.updaters = this._engine.plugins.getUpdaters(container, true);
    }
    get count() {
        return this._array.length;
    }
    addManualParticles() {
        const container = this._container, options = container.actualOptions;
        for (const particle of options.manualParticles){
            this.addParticle(particle.position ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPosition"])(particle.position, container.canvas.size) : undefined, particle.options);
        }
    }
    addParticle(position, overrideOptions, group, initializer) {
        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;
        if (limit > 0) {
            const countToRemove = this.count + 1 - limit;
            if (countToRemove > 0) {
                this.removeQuantity(countToRemove);
            }
        }
        return this._pushParticle(position, overrideOptions, group, initializer);
    }
    clear() {
        this._array = [];
        this._zArray = [];
    }
    destroy() {
        this._array = [];
        this._zArray = [];
        this.movers = [];
        this.updaters = [];
    }
    async draw(delta) {
        const container = this._container;
        container.canvas.clear();
        await this.update(delta);
        for (const [, plugin] of container.plugins){
            container.canvas.drawPlugin(plugin, delta);
        }
        for (const p of this._zArray){
            p.draw(delta);
        }
    }
    filter(condition) {
        return this._array.filter(condition);
    }
    find(condition) {
        return this._array.find(condition);
    }
    handleClickMode(mode) {
        this._interactionManager.handleClickMode(mode);
    }
    init() {
        const container = this._container, options = container.actualOptions;
        this.lastZIndex = 0;
        this.needsSort = false;
        let handled = false;
        this.updaters = this._engine.plugins.getUpdaters(container, true);
        this._interactionManager.init();
        for (const [, plugin] of container.plugins){
            if (plugin.particlesInitialization !== undefined) {
                handled = plugin.particlesInitialization();
            }
            if (handled) {
                break;
            }
        }
        this._interactionManager.init();
        for (const [, pathGenerator] of container.pathGenerators){
            pathGenerator.init(container);
        }
        this.addManualParticles();
        if (!handled) {
            for(const group in options.particles.groups){
                const groupOptions = options.particles.groups[group];
                for(let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++){
                    this.addParticle(undefined, groupOptions, group);
                }
            }
            for(let i = this.count; i < options.particles.number.value; i++){
                this.addParticle();
            }
        }
    }
    push(nb, mouse, overrideOptions, group) {
        this.pushing = true;
        for(let i = 0; i < nb; i++){
            this.addParticle(mouse?.position, overrideOptions, group);
        }
        this.pushing = false;
    }
    async redraw() {
        this.clear();
        this.init();
        await this.draw({
            value: 0,
            factor: 0
        });
    }
    remove(particle, group, override) {
        this.removeAt(this._array.indexOf(particle), undefined, group, override);
    }
    removeAt(index, quantity = 1, group, override) {
        if (index < 0 || index > this.count) {
            return;
        }
        let deleted = 0;
        for(let i = index; deleted < quantity && i < this.count; i++){
            this._removeParticle(i--, group, override) && deleted++;
        }
    }
    removeQuantity(quantity, group) {
        this.removeAt(0, quantity, group);
    }
    setDensity() {
        const options = this._container.actualOptions, groups = options.particles.groups;
        for(const group in groups){
            this._applyDensity(groups[group], 0, group);
        }
        this._applyDensity(options.particles, options.manualParticles.length);
    }
    async update(delta) {
        const container = this._container, particlesToDelete = new Set();
        this.quadTree = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$QuadTree$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["QuadTree"](qTreeRectangle(container.canvas.size), qTreeCapacity);
        for (const [, pathGenerator] of container.pathGenerators){
            pathGenerator.update();
        }
        for (const [, plugin] of container.plugins){
            plugin.update && plugin.update(delta);
        }
        for (const particle of this._array){
            const resizeFactor = container.canvas.resizeFactor;
            if (resizeFactor && !particle.ignoresResizeRatio) {
                particle.position.x *= resizeFactor.width;
                particle.position.y *= resizeFactor.height;
                particle.initialPosition.x *= resizeFactor.width;
                particle.initialPosition.y *= resizeFactor.height;
            }
            particle.ignoresResizeRatio = false;
            await this._interactionManager.reset(particle);
            for (const [, plugin] of this._container.plugins){
                if (particle.destroyed) {
                    break;
                }
                if (plugin.particleUpdate) {
                    plugin.particleUpdate(particle, delta);
                }
            }
            for (const mover of this.movers){
                mover.isEnabled(particle) && mover.move(particle, delta);
            }
            if (particle.destroyed) {
                particlesToDelete.add(particle);
                continue;
            }
            this.quadTree.insert(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Point$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Point"](particle.getPosition(), particle));
        }
        if (particlesToDelete.size) {
            const checkDelete = (p)=>!particlesToDelete.has(p);
            this._array = this.filter(checkDelete);
            this._zArray = this._zArray.filter(checkDelete);
            this.pool.push(...particlesToDelete);
        }
        await this._interactionManager.externalInteract(delta);
        for (const particle of this._array){
            for (const updater of this.updaters){
                updater.update(particle, delta);
            }
            if (!particle.destroyed && !particle.spawning) {
                await this._interactionManager.particlesInteract(particle, delta);
            }
        }
        delete container.canvas.resizeFactor;
        if (this.needsSort) {
            const zArray = this._zArray;
            zArray.sort((a, b)=>b.position.z - a.position.z || a.id - b.id);
            this.lastZIndex = zArray[zArray.length - 1].position.z;
            this.needsSort = false;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "EventListeners": (()=>EventListeners)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
;
;
function manageListener(element, event, handler, add, options) {
    if (add) {
        let addOptions = {
            passive: true
        };
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBoolean"])(options)) {
            addOptions.capture = options;
        } else if (options !== undefined) {
            addOptions = options;
        }
        element.addEventListener(event, handler, addOptions);
    } else {
        const removeOptions = options;
        element.removeEventListener(event, handler, removeOptions);
    }
}
class EventListeners {
    constructor(container){
        this.container = container;
        this._doMouseTouchClick = (e)=>{
            const container = this.container, options = container.actualOptions;
            if (this._canPush) {
                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;
                if (!mousePos) {
                    return;
                }
                mouseInteractivity.clickPosition = {
                    ...mousePos
                };
                mouseInteractivity.clickTime = new Date().getTime();
                const onClick = options.interactivity.events.onClick;
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(onClick.mode, (mode)=>this.container.handleClickMode(mode));
            }
            if (e.type === "touchend") {
                setTimeout(()=>this._mouseTouchFinish(), 500);
            }
        };
        this._handleThemeChange = (e)=>{
            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme)=>theme.name === themeName);
            if (theme && theme.default.auto) {
                container.loadTheme(themeName);
            }
        };
        this._handleVisibilityChange = ()=>{
            const container = this.container, options = container.actualOptions;
            this._mouseTouchFinish();
            if (!options.pauseOnBlur) {
                return;
            }
            if (document && document.hidden) {
                container.pageHidden = true;
                container.pause();
            } else {
                container.pageHidden = false;
                if (container.getAnimationStatus()) {
                    container.play(true);
                } else {
                    container.draw(true);
                }
            }
        };
        this._handleWindowResize = async ()=>{
            if (this._resizeTimeout) {
                clearTimeout(this._resizeTimeout);
                delete this._resizeTimeout;
            }
            this._resizeTimeout = setTimeout(async ()=>{
                const canvas = this.container.canvas;
                canvas && await canvas.windowResize();
            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);
        };
        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add)=>{
            const handlers = this._handlers, container = this.container, options = container.actualOptions;
            const interactivityEl = container.interactivity.element;
            if (!interactivityEl) {
                return;
            }
            const html = interactivityEl, canvasEl = container.canvas.element;
            if (canvasEl) {
                canvasEl.style.pointerEvents = html === canvasEl ? "initial" : "none";
            }
            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {
                return;
            }
            manageListener(interactivityEl, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseMoveEvent"], handlers.mouseMove, add);
            manageListener(interactivityEl, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["touchStartEvent"], handlers.touchStart, add);
            manageListener(interactivityEl, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["touchMoveEvent"], handlers.touchMove, add);
            if (!options.interactivity.events.onClick.enable) {
                manageListener(interactivityEl, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["touchEndEvent"], handlers.touchEnd, add);
            } else {
                manageListener(interactivityEl, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["touchEndEvent"], handlers.touchEndClick, add);
                manageListener(interactivityEl, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseUpEvent"], handlers.mouseUp, add);
                manageListener(interactivityEl, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseDownEvent"], handlers.mouseDown, add);
            }
            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);
            manageListener(interactivityEl, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["touchCancelEvent"], handlers.touchCancel, add);
        };
        this._manageListeners = (add)=>{
            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;
            let mouseLeaveTmpEvent = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseLeaveEvent"];
            if (detectType === "window") {
                container.interactivity.element = window;
                mouseLeaveTmpEvent = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseOutEvent"];
            } else if (detectType === "parent" && canvasEl) {
                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;
            } else {
                container.interactivity.element = canvasEl;
            }
            this._manageMediaMatch(add);
            this._manageResize(add);
            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);
            if (document) {
                manageListener(document, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["visibilityChangeEvent"], handlers.visibilityChange, add, false);
            }
        };
        this._manageMediaMatch = (add)=>{
            const handlers = this._handlers, mediaMatch = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["safeMatchMedia"])("(prefers-color-scheme: dark)");
            if (!mediaMatch) {
                return;
            }
            if (mediaMatch.addEventListener !== undefined) {
                manageListener(mediaMatch, "change", handlers.themeChange, add);
                return;
            }
            if (mediaMatch.addListener === undefined) {
                return;
            }
            if (add) {
                mediaMatch.addListener(handlers.oldThemeChange);
            } else {
                mediaMatch.removeListener(handlers.oldThemeChange);
            }
        };
        this._manageResize = (add)=>{
            const handlers = this._handlers, container = this.container, options = container.actualOptions;
            if (!options.interactivity.events.resize) {
                return;
            }
            if (typeof ResizeObserver === "undefined") {
                manageListener(window, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resizeEvent"], handlers.resize, add);
                return;
            }
            const canvasEl = container.canvas.element;
            if (this._resizeObserver && !add) {
                if (canvasEl) {
                    this._resizeObserver.unobserve(canvasEl);
                }
                this._resizeObserver.disconnect();
                delete this._resizeObserver;
            } else if (!this._resizeObserver && add && canvasEl) {
                this._resizeObserver = new ResizeObserver(async (entries)=>{
                    const entry = entries.find((e)=>e.target === canvasEl);
                    if (!entry) {
                        return;
                    }
                    await this._handleWindowResize();
                });
                this._resizeObserver.observe(canvasEl);
            }
        };
        this._mouseDown = ()=>{
            const { interactivity } = this.container;
            if (!interactivity) {
                return;
            }
            const { mouse } = interactivity;
            mouse.clicking = true;
            mouse.downPosition = mouse.position;
        };
        this._mouseTouchClick = (e)=>{
            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;
            mouse.inside = true;
            let handled = false;
            const mousePosition = mouse.position;
            if (!mousePosition || !options.interactivity.events.onClick.enable) {
                return;
            }
            for (const [, plugin] of container.plugins){
                if (!plugin.clickPositionValid) {
                    continue;
                }
                handled = plugin.clickPositionValid(mousePosition);
                if (handled) {
                    break;
                }
            }
            if (!handled) {
                this._doMouseTouchClick(e);
            }
            mouse.clicking = false;
        };
        this._mouseTouchFinish = ()=>{
            const interactivity = this.container.interactivity;
            if (!interactivity) {
                return;
            }
            const mouse = interactivity.mouse;
            delete mouse.position;
            delete mouse.clickPosition;
            delete mouse.downPosition;
            interactivity.status = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseLeaveEvent"];
            mouse.inside = false;
            mouse.clicking = false;
        };
        this._mouseTouchMove = (e)=>{
            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;
            if (!interactivity || !interactivity.element) {
                return;
            }
            interactivity.mouse.inside = true;
            let pos;
            if (e.type.startsWith("pointer")) {
                this._canPush = true;
                const mouseEvent = e;
                if (interactivity.element === window) {
                    if (canvasEl) {
                        const clientRect = canvasEl.getBoundingClientRect();
                        pos = {
                            x: mouseEvent.clientX - clientRect.left,
                            y: mouseEvent.clientY - clientRect.top
                        };
                    }
                } else if (options.interactivity.detectsOn === "parent") {
                    const source = mouseEvent.target, target = mouseEvent.currentTarget;
                    if (source && target && canvasEl) {
                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();
                        pos = {
                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),
                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top)
                        };
                    } else {
                        pos = {
                            x: mouseEvent.offsetX ?? mouseEvent.clientX,
                            y: mouseEvent.offsetY ?? mouseEvent.clientY
                        };
                    }
                } else if (mouseEvent.target === canvasEl) {
                    pos = {
                        x: mouseEvent.offsetX ?? mouseEvent.clientX,
                        y: mouseEvent.offsetY ?? mouseEvent.clientY
                    };
                }
            } else {
                this._canPush = e.type !== "touchmove";
                if (canvasEl) {
                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();
                    pos = {
                        x: lastTouch.clientX - (canvasRect.left ?? 0),
                        y: lastTouch.clientY - (canvasRect.top ?? 0)
                    };
                }
            }
            const pxRatio = container.retina.pixelRatio;
            if (pos) {
                pos.x *= pxRatio;
                pos.y *= pxRatio;
            }
            interactivity.mouse.position = pos;
            interactivity.status = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseMoveEvent"];
        };
        this._touchEnd = (e)=>{
            const evt = e, touches = Array.from(evt.changedTouches);
            for (const touch of touches){
                this._touches.delete(touch.identifier);
            }
            this._mouseTouchFinish();
        };
        this._touchEndClick = (e)=>{
            const evt = e, touches = Array.from(evt.changedTouches);
            for (const touch of touches){
                this._touches.delete(touch.identifier);
            }
            this._mouseTouchClick(e);
        };
        this._touchStart = (e)=>{
            const evt = e, touches = Array.from(evt.changedTouches);
            for (const touch of touches){
                this._touches.set(touch.identifier, performance.now());
            }
            this._mouseTouchMove(e);
        };
        this._canPush = true;
        this._touches = new Map();
        this._handlers = {
            mouseDown: ()=>this._mouseDown(),
            mouseLeave: ()=>this._mouseTouchFinish(),
            mouseMove: (e)=>this._mouseTouchMove(e),
            mouseUp: (e)=>this._mouseTouchClick(e),
            touchStart: (e)=>this._touchStart(e),
            touchMove: (e)=>this._mouseTouchMove(e),
            touchEnd: (e)=>this._touchEnd(e),
            touchCancel: (e)=>this._touchEnd(e),
            touchEndClick: (e)=>this._touchEndClick(e),
            visibilityChange: ()=>this._handleVisibilityChange(),
            themeChange: (e)=>this._handleThemeChange(e),
            oldThemeChange: (e)=>this._handleThemeChange(e),
            resize: ()=>{
                this._handleWindowResize();
            }
        };
    }
    addListeners() {
        this._manageListeners(true);
    }
    removeListeners() {
        this._manageListeners(false);
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Background": (()=>Background)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
;
class Background {
    constructor(){
        this.color = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"]();
        this.color.value = "";
        this.image = "";
        this.position = "";
        this.repeat = "";
        this.size = "";
        this.opacity = 1;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.color !== undefined) {
            this.color = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(this.color, data.color);
        }
        if (data.image !== undefined) {
            this.image = data.image;
        }
        if (data.position !== undefined) {
            this.position = data.position;
        }
        if (data.repeat !== undefined) {
            this.repeat = data.repeat;
        }
        if (data.size !== undefined) {
            this.size = data.size;
        }
        if (data.opacity !== undefined) {
            this.opacity = data.opacity;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BackgroundMaskCover": (()=>BackgroundMaskCover)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
;
class BackgroundMaskCover {
    constructor(){
        this.color = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"]();
        this.color.value = "#fff";
        this.opacity = 1;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.color !== undefined) {
            this.color = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(this.color, data.color);
        }
        if (data.opacity !== undefined) {
            this.opacity = data.opacity;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BackgroundMask": (()=>BackgroundMask)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$BackgroundMask$2f$BackgroundMaskCover$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
;
class BackgroundMask {
    constructor(){
        this.composite = "destination-out";
        this.cover = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$BackgroundMask$2f$BackgroundMaskCover$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BackgroundMaskCover"]();
        this.enable = false;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.composite !== undefined) {
            this.composite = data.composite;
        }
        if (data.cover !== undefined) {
            const cover = data.cover;
            const color = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(data.cover) ? {
                color: data.cover
            } : data.cover;
            this.cover.load(cover.color !== undefined ? cover : {
                color: color
            });
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FullScreen": (()=>FullScreen)
});
class FullScreen {
    constructor(){
        this.enable = true;
        this.zIndex = 0;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.zIndex !== undefined) {
            this.zIndex = data.zIndex;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ManualParticle": (()=>ManualParticle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
class ManualParticle {
    load(data) {
        if (!data) {
            return;
        }
        if (data.position) {
            this.position = {
                x: data.position.x ?? 50,
                y: data.position.y ?? 50,
                mode: data.position.mode ?? "percent"
            };
        }
        if (data.options) {
            this.options = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])({}, data.options);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Responsive": (()=>Responsive)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
class Responsive {
    constructor(){
        this.maxWidth = Infinity;
        this.options = {};
        this.mode = "canvas";
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.maxWidth !== undefined) {
            this.maxWidth = data.maxWidth;
        }
        if (data.mode !== undefined) {
            if (data.mode === "screen") {
                this.mode = "screen";
            } else {
                this.mode = "canvas";
            }
        }
        if (data.options !== undefined) {
            this.options = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])({}, data.options);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ThemeDefault": (()=>ThemeDefault)
});
class ThemeDefault {
    constructor(){
        this.auto = false;
        this.mode = "any";
        this.value = false;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.auto !== undefined) {
            this.auto = data.auto;
        }
        if (data.mode !== undefined) {
            this.mode = data.mode;
        }
        if (data.value !== undefined) {
            this.value = data.value;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Theme": (()=>Theme)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Theme$2f$ThemeDefault$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
;
class Theme {
    constructor(){
        this.name = "";
        this.default = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Theme$2f$ThemeDefault$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ThemeDefault"]();
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.name !== undefined) {
            this.name = data.name;
        }
        this.default.load(data.default);
        if (data.options !== undefined) {
            this.options = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])({}, data.options);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Options/Classes/Options.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Options": (()=>Options)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Background$2f$Background$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$BackgroundMask$2f$BackgroundMask$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$FullScreen$2f$FullScreen$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Interactivity$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$OptionsUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ManualParticle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Responsive$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Theme$2f$Theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
class Options {
    constructor(engine, container){
        this._findDefaultTheme = (mode)=>{
            return this.themes.find((theme)=>theme.default.value && theme.default.mode === mode) ?? this.themes.find((theme)=>theme.default.value && theme.default.mode === "any");
        };
        this._importPreset = (preset)=>{
            this.load(this._engine.plugins.getPreset(preset));
        };
        this._engine = engine;
        this._container = container;
        this.autoPlay = true;
        this.background = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Background$2f$Background$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Background"]();
        this.backgroundMask = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$BackgroundMask$2f$BackgroundMask$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BackgroundMask"]();
        this.defaultThemes = {};
        this.delay = 0;
        this.fullScreen = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$FullScreen$2f$FullScreen$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FullScreen"]();
        this.detectRetina = true;
        this.duration = 0;
        this.fpsLimit = 120;
        this.interactivity = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Interactivity$2f$Interactivity$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Interactivity"](engine, container);
        this.manualParticles = [];
        this.particles = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$OptionsUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadParticlesOptions"])(this._engine, this._container);
        this.pauseOnBlur = true;
        this.pauseOnOutsideViewport = true;
        this.responsive = [];
        this.smooth = false;
        this.style = {};
        this.themes = [];
        this.zLayers = 100;
    }
    get backgroundMode() {
        return this.fullScreen;
    }
    set backgroundMode(value) {
        this.fullScreen.load(value);
    }
    get fps_limit() {
        return this.fpsLimit;
    }
    set fps_limit(value) {
        this.fpsLimit = value;
    }
    get retina_detect() {
        return this.detectRetina;
    }
    set retina_detect(value) {
        this.detectRetina = value;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.preset !== undefined) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(data.preset, (preset)=>this._importPreset(preset));
        }
        if (data.autoPlay !== undefined) {
            this.autoPlay = data.autoPlay;
        }
        if (data.delay !== undefined) {
            this.delay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.delay);
        }
        const detectRetina = data.detectRetina ?? data.retina_detect;
        if (detectRetina !== undefined) {
            this.detectRetina = detectRetina;
        }
        if (data.duration !== undefined) {
            this.duration = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.duration);
        }
        const fpsLimit = data.fpsLimit ?? data.fps_limit;
        if (fpsLimit !== undefined) {
            this.fpsLimit = fpsLimit;
        }
        if (data.pauseOnBlur !== undefined) {
            this.pauseOnBlur = data.pauseOnBlur;
        }
        if (data.pauseOnOutsideViewport !== undefined) {
            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;
        }
        if (data.zLayers !== undefined) {
            this.zLayers = data.zLayers;
        }
        this.background.load(data.background);
        const fullScreen = data.fullScreen ?? data.backgroundMode;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBoolean"])(fullScreen)) {
            this.fullScreen.enable = fullScreen;
        } else {
            this.fullScreen.load(fullScreen);
        }
        this.backgroundMask.load(data.backgroundMask);
        this.interactivity.load(data.interactivity);
        if (data.manualParticles) {
            this.manualParticles = data.manualParticles.map((t)=>{
                const tmp = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ManualParticle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ManualParticle"]();
                tmp.load(t);
                return tmp;
            });
        }
        this.particles.load(data.particles);
        this.style = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])(this.style, data.style);
        this._engine.plugins.loadOptions(this, data);
        if (data.smooth !== undefined) {
            this.smooth = data.smooth;
        }
        const interactors = this._engine.plugins.interactors.get(this._container);
        if (interactors) {
            for (const interactor of interactors){
                if (interactor.loadOptions) {
                    interactor.loadOptions(this, data);
                }
            }
        }
        if (data.responsive !== undefined) {
            for (const responsive of data.responsive){
                const optResponsive = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Responsive$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Responsive"]();
                optResponsive.load(responsive);
                this.responsive.push(optResponsive);
            }
        }
        this.responsive.sort((a, b)=>a.maxWidth - b.maxWidth);
        if (data.themes !== undefined) {
            for (const theme of data.themes){
                const existingTheme = this.themes.find((t)=>t.name === theme.name);
                if (!existingTheme) {
                    const optTheme = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Theme$2f$Theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Theme"]();
                    optTheme.load(theme);
                    this.themes.push(optTheme);
                } else {
                    existingTheme.load(theme);
                }
            }
        }
        this.defaultThemes.dark = this._findDefaultTheme("dark")?.name;
        this.defaultThemes.light = this._findDefaultTheme("light")?.name;
    }
    setResponsive(width, pxRatio, defaultOptions) {
        this.load(defaultOptions);
        const responsiveOptions = this.responsive.find((t)=>t.mode === "screen" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);
        this.load(responsiveOptions?.options);
        return responsiveOptions?.maxWidth;
    }
    setTheme(name) {
        if (name) {
            const chosenTheme = this.themes.find((theme)=>theme.name === name);
            if (chosenTheme) {
                this.load(chosenTheme.options);
            }
        } else {
            const mediaMatch = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["safeMatchMedia"])("(prefers-color-scheme: dark)"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? "dark" : "light");
            if (defaultTheme) {
                this.load(defaultTheme.options);
            }
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Container.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Container": (()=>Container)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Retina$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Retina.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Canvas$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Canvas.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Particles$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Particles.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$EventListeners$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/Options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$OptionsUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
function guardCheck(container) {
    return container && !container.destroyed;
}
function initDelta(value, fpsLimit = 60, smooth = false) {
    return {
        value,
        factor: smooth ? 60 / fpsLimit : 60 * value / 1000
    };
}
function loadContainerOptions(engine, container, ...sourceOptionsArr) {
    const options = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$Options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Options"](engine, container);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$OptionsUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadOptions"])(options, ...sourceOptionsArr);
    return options;
}
const defaultPathGeneratorKey = "default", defaultPathGenerator = {
    generate: (p)=>p.velocity,
    init: ()=>{},
    update: ()=>{},
    reset: ()=>{}
};
class Container {
    constructor(engine, id, sourceOptions){
        this.id = id;
        this._intersectionManager = (entries)=>{
            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {
                return;
            }
            for (const entry of entries){
                if (entry.target !== this.interactivity.element) {
                    continue;
                }
                (entry.isIntersecting ? this.play : this.pause)();
            }
        };
        this._nextFrame = async (timestamp)=>{
            try {
                if (!this.smooth && this.lastFrameTime !== undefined && timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {
                    this.draw(false);
                    return;
                }
                this.lastFrameTime ??= timestamp;
                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);
                this.addLifeTime(delta.value);
                this.lastFrameTime = timestamp;
                if (delta.value > 1000) {
                    this.draw(false);
                    return;
                }
                await this.particles.draw(delta);
                if (!this.alive()) {
                    this.destroy();
                    return;
                }
                if (this.getAnimationStatus()) {
                    this.draw(false);
                }
            } catch (e) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLogger"])().error(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorPrefix"]} in animation loop`, e);
            }
        };
        this._engine = engine;
        this.fpsLimit = 120;
        this.smooth = false;
        this._delay = 0;
        this._duration = 0;
        this._lifeTime = 0;
        this._firstStart = true;
        this.started = false;
        this.destroyed = false;
        this._paused = true;
        this.lastFrameTime = 0;
        this.zLayers = 100;
        this.pageHidden = false;
        this._sourceOptions = sourceOptions;
        this._initialSourceOptions = sourceOptions;
        this.retina = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Retina$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Retina"](this);
        this.canvas = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Canvas$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Canvas"](this);
        this.particles = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Particles$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Particles"](this._engine, this);
        this.pathGenerators = new Map();
        this.interactivity = {
            mouse: {
                clicking: false,
                inside: false
            }
        };
        this.plugins = new Map();
        this.drawers = new Map();
        this._options = loadContainerOptions(this._engine, this);
        this.actualOptions = loadContainerOptions(this._engine, this);
        this._eventListeners = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$EventListeners$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EventListeners"](this);
        if (typeof IntersectionObserver !== "undefined" && IntersectionObserver) {
            this._intersectionObserver = new IntersectionObserver((entries)=>this._intersectionManager(entries));
        }
        this._engine.dispatchEvent("containerBuilt", {
            container: this
        });
    }
    get options() {
        return this._options;
    }
    get sourceOptions() {
        return this._sourceOptions;
    }
    addClickHandler(callback) {
        if (!guardCheck(this)) {
            return;
        }
        const el = this.interactivity.element;
        if (!el) {
            return;
        }
        const clickOrTouchHandler = (e, pos, radius)=>{
            if (!guardCheck(this)) {
                return;
            }
            const pxRatio = this.retina.pixelRatio, posRetina = {
                x: pos.x * pxRatio,
                y: pos.y * pxRatio
            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);
            callback(e, particles);
        };
        const clickHandler = (e)=>{
            if (!guardCheck(this)) {
                return;
            }
            const mouseEvent = e, pos = {
                x: mouseEvent.offsetX || mouseEvent.clientX,
                y: mouseEvent.offsetY || mouseEvent.clientY
            };
            clickOrTouchHandler(e, pos, 1);
        };
        const touchStartHandler = ()=>{
            if (!guardCheck(this)) {
                return;
            }
            touched = true;
            touchMoved = false;
        };
        const touchMoveHandler = ()=>{
            if (!guardCheck(this)) {
                return;
            }
            touchMoved = true;
        };
        const touchEndHandler = (e)=>{
            if (!guardCheck(this)) {
                return;
            }
            if (touched && !touchMoved) {
                const touchEvent = e;
                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];
                if (!lastTouch) {
                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];
                    if (!lastTouch) {
                        return;
                    }
                }
                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {
                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),
                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0)
                };
                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));
            }
            touched = false;
            touchMoved = false;
        };
        const touchCancelHandler = ()=>{
            if (!guardCheck(this)) {
                return;
            }
            touched = false;
            touchMoved = false;
        };
        let touched = false, touchMoved = false;
        el.addEventListener("click", clickHandler);
        el.addEventListener("touchstart", touchStartHandler);
        el.addEventListener("touchmove", touchMoveHandler);
        el.addEventListener("touchend", touchEndHandler);
        el.addEventListener("touchcancel", touchCancelHandler);
    }
    addLifeTime(value) {
        this._lifeTime += value;
    }
    addPath(key, generator, override = false) {
        if (!guardCheck(this) || !override && this.pathGenerators.has(key)) {
            return false;
        }
        this.pathGenerators.set(key, generator ?? defaultPathGenerator);
        return true;
    }
    alive() {
        return !this._duration || this._lifeTime <= this._duration;
    }
    destroy() {
        if (!guardCheck(this)) {
            return;
        }
        this.stop();
        this.particles.destroy();
        this.canvas.destroy();
        for (const [, drawer] of this.drawers){
            drawer.destroy && drawer.destroy(this);
        }
        for (const key of this.drawers.keys()){
            this.drawers.delete(key);
        }
        this._engine.plugins.destroy(this);
        this.destroyed = true;
        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t)=>t === this);
        if (idx >= 0) {
            mainArr.splice(idx, 1);
        }
        this._engine.dispatchEvent("containerDestroyed", {
            container: this
        });
    }
    draw(force) {
        if (!guardCheck(this)) {
            return;
        }
        let refreshTime = force;
        this._drawAnimationFrame = requestAnimationFrame(async (timestamp)=>{
            if (refreshTime) {
                this.lastFrameTime = undefined;
                refreshTime = false;
            }
            await this._nextFrame(timestamp);
        });
    }
    async export(type, options = {}) {
        for (const [, plugin] of this.plugins){
            if (!plugin.export) {
                continue;
            }
            const res = await plugin.export(type, options);
            if (!res.supported) {
                continue;
            }
            return res.blob;
        }
        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);
    }
    getAnimationStatus() {
        return !this._paused && !this.pageHidden && guardCheck(this);
    }
    handleClickMode(mode) {
        if (!guardCheck(this)) {
            return;
        }
        this.particles.handleClickMode(mode);
        for (const [, plugin] of this.plugins){
            plugin.handleClickMode && plugin.handleClickMode(mode);
        }
    }
    async init() {
        if (!guardCheck(this)) {
            return;
        }
        const shapes = this._engine.plugins.getSupportedShapes();
        for (const type of shapes){
            const drawer = this._engine.plugins.getShapeDrawer(type);
            if (drawer) {
                this.drawers.set(type, drawer);
            }
        }
        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);
        this.actualOptions = loadContainerOptions(this._engine, this, this._options);
        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);
        for (const [id, plugin] of availablePlugins){
            this.plugins.set(id, plugin);
        }
        this.retina.init();
        await this.canvas.init();
        this.updateActualOptions();
        this.canvas.initBackground();
        this.canvas.resize();
        this.zLayers = this.actualOptions.zLayers;
        this._duration = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(this.actualOptions.duration) * 1000;
        this._delay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(this.actualOptions.delay) * 1000;
        this._lifeTime = 0;
        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;
        this.smooth = this.actualOptions.smooth;
        for (const [, drawer] of this.drawers){
            drawer.init && await drawer.init(this);
        }
        for (const [, plugin] of this.plugins){
            plugin.init && await plugin.init();
        }
        this._engine.dispatchEvent("containerInit", {
            container: this
        });
        this.particles.init();
        this.particles.setDensity();
        for (const [, plugin] of this.plugins){
            plugin.particlesSetup && plugin.particlesSetup();
        }
        this._engine.dispatchEvent("particlesSetup", {
            container: this
        });
    }
    async loadTheme(name) {
        if (!guardCheck(this)) {
            return;
        }
        this._currentTheme = name;
        await this.refresh();
    }
    pause() {
        if (!guardCheck(this)) {
            return;
        }
        if (this._drawAnimationFrame !== undefined) {
            cancelAnimationFrame(this._drawAnimationFrame);
            delete this._drawAnimationFrame;
        }
        if (this._paused) {
            return;
        }
        for (const [, plugin] of this.plugins){
            plugin.pause && plugin.pause();
        }
        if (!this.pageHidden) {
            this._paused = true;
        }
        this._engine.dispatchEvent("containerPaused", {
            container: this
        });
    }
    play(force) {
        if (!guardCheck(this)) {
            return;
        }
        const needsUpdate = this._paused || force;
        if (this._firstStart && !this.actualOptions.autoPlay) {
            this._firstStart = false;
            return;
        }
        if (this._paused) {
            this._paused = false;
        }
        if (needsUpdate) {
            for (const [, plugin] of this.plugins){
                if (plugin.play) {
                    plugin.play();
                }
            }
        }
        this._engine.dispatchEvent("containerPlay", {
            container: this
        });
        this.draw(needsUpdate || false);
    }
    async refresh() {
        if (!guardCheck(this)) {
            return;
        }
        this.stop();
        return this.start();
    }
    async reset() {
        if (!guardCheck(this)) {
            return;
        }
        this._initialSourceOptions = undefined;
        this._options = loadContainerOptions(this._engine, this);
        this.actualOptions = loadContainerOptions(this._engine, this, this._options);
        return this.refresh();
    }
    setNoise(noiseOrGenerator, init, update) {
        if (!guardCheck(this)) {
            return;
        }
        this.setPath(noiseOrGenerator, init, update);
    }
    setPath(pathOrGenerator, init, update) {
        if (!pathOrGenerator || !guardCheck(this)) {
            return;
        }
        const pathGenerator = {
            ...defaultPathGenerator
        };
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isFunction"])(pathOrGenerator)) {
            pathGenerator.generate = pathOrGenerator;
            if (init) {
                pathGenerator.init = init;
            }
            if (update) {
                pathGenerator.update = update;
            }
        } else {
            const oldGenerator = pathGenerator;
            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;
            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;
            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;
        }
        this.addPath(defaultPathGeneratorKey, pathGenerator, true);
    }
    async start() {
        if (!guardCheck(this) || this.started) {
            return;
        }
        await this.init();
        this.started = true;
        await new Promise((resolve)=>{
            this._delayTimeout = setTimeout(async ()=>{
                this._eventListeners.addListeners();
                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {
                    this._intersectionObserver.observe(this.interactivity.element);
                }
                for (const [, plugin] of this.plugins){
                    plugin.start && await plugin.start();
                }
                this._engine.dispatchEvent("containerStarted", {
                    container: this
                });
                this.play();
                resolve();
            }, this._delay);
        });
    }
    stop() {
        if (!guardCheck(this) || !this.started) {
            return;
        }
        if (this._delayTimeout) {
            clearTimeout(this._delayTimeout);
            delete this._delayTimeout;
        }
        this._firstStart = true;
        this.started = false;
        this._eventListeners.removeListeners();
        this.pause();
        this.particles.clear();
        this.canvas.stop();
        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {
            this._intersectionObserver.unobserve(this.interactivity.element);
        }
        for (const [, plugin] of this.plugins){
            plugin.stop && plugin.stop();
        }
        for (const key of this.plugins.keys()){
            this.plugins.delete(key);
        }
        this._sourceOptions = this._options;
        this._engine.dispatchEvent("containerStopped", {
            container: this
        });
    }
    updateActualOptions() {
        this.actualOptions.responsive = [];
        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);
        this.actualOptions.setTheme(this._currentTheme);
        if (this.responsiveMaxWidth === newMaxWidth) {
            return false;
        }
        this.responsiveMaxWidth = newMaxWidth;
        return true;
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Engine.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Engine": (()=>Engine)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$EventDispatcher$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Plugins$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Container$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Container.js [app-client] (ecmascript)");
;
;
;
;
;
;
async function getDataFromUrl(data) {
    const url = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromSingleOrMultiple"])(data.url, data.index);
    if (!url) {
        return data.fallback;
    }
    const response = await fetch(url);
    if (response.ok) {
        return response.json();
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLogger"])().error(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorPrefix"]} ${response.status} while retrieving config file`);
    return data.fallback;
}
function isParamsEmpty(params) {
    return !params.id && !params.element && !params.url && !params.options;
}
function isParams(obj) {
    return !isParamsEmpty(obj);
}
class Engine {
    constructor(){
        this._configs = new Map();
        this._domArray = [];
        this._eventDispatcher = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$EventDispatcher$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EventDispatcher"]();
        this._initialized = false;
        this.plugins = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Plugins$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Plugins"](this);
    }
    get configs() {
        const res = {};
        for (const [name, config] of this._configs){
            res[name] = config;
        }
        return res;
    }
    get version() {
        return "2.12.0";
    }
    addConfig(nameOrConfig, config) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(nameOrConfig)) {
            if (config) {
                config.name = nameOrConfig;
                this._configs.set(nameOrConfig, config);
            }
        } else {
            this._configs.set(nameOrConfig.name ?? "default", nameOrConfig);
        }
    }
    addEventListener(type, listener) {
        this._eventDispatcher.addEventListener(type, listener);
    }
    async addInteractor(name, interactorInitializer, refresh = true) {
        this.plugins.addInteractor(name, interactorInitializer);
        await this.refresh(refresh);
    }
    async addMover(name, moverInitializer, refresh = true) {
        this.plugins.addParticleMover(name, moverInitializer);
        await this.refresh(refresh);
    }
    async addParticleUpdater(name, updaterInitializer, refresh = true) {
        this.plugins.addParticleUpdater(name, updaterInitializer);
        await this.refresh(refresh);
    }
    async addPathGenerator(name, generator, refresh = true) {
        this.plugins.addPathGenerator(name, generator);
        await this.refresh(refresh);
    }
    async addPlugin(plugin, refresh = true) {
        this.plugins.addPlugin(plugin);
        await this.refresh(refresh);
    }
    async addPreset(preset, options, override = false, refresh = true) {
        this.plugins.addPreset(preset, options, override);
        await this.refresh(refresh);
    }
    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {
        let customDrawer;
        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBoolean"])(initOrRefresh)) {
            realRefresh = initOrRefresh;
            realInit = undefined;
        } else {
            realInit = initOrRefresh;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBoolean"])(afterEffectOrRefresh)) {
            realRefresh = afterEffectOrRefresh;
            realAfterEffect = undefined;
        } else {
            realAfterEffect = afterEffectOrRefresh;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBoolean"])(destroyOrRefresh)) {
            realRefresh = destroyOrRefresh;
            realDestroy = undefined;
        } else {
            realDestroy = destroyOrRefresh;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isFunction"])(drawer)) {
            customDrawer = {
                afterEffect: realAfterEffect,
                destroy: realDestroy,
                draw: drawer,
                init: realInit
            };
        } else {
            customDrawer = drawer;
        }
        this.plugins.addShapeDrawer(shape, customDrawer);
        await this.refresh(realRefresh);
    }
    dispatchEvent(type, args) {
        this._eventDispatcher.dispatchEvent(type, args);
    }
    dom() {
        return this._domArray;
    }
    domItem(index) {
        const dom = this.dom(), item = dom[index];
        if (!item || item.destroyed) {
            dom.splice(index, 1);
            return;
        }
        return item;
    }
    init() {
        if (this._initialized) {
            return;
        }
        this._initialized = true;
    }
    async load(tagIdOrOptionsOrParams, options) {
        return this.loadFromArray(tagIdOrOptionsOrParams, options);
    }
    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {
        let params;
        if (!isParams(tagIdOrOptionsOrParams)) {
            params = {};
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(tagIdOrOptionsOrParams)) {
                params.id = tagIdOrOptionsOrParams;
            } else {
                params.options = tagIdOrOptionsOrParams;
            }
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumber"])(optionsOrIndex)) {
                params.index = optionsOrIndex;
            } else {
                params.options = optionsOrIndex ?? params.options;
            }
            params.index = index ?? params.index;
        } else {
            params = tagIdOrOptionsOrParams;
        }
        return this._loadParams(params);
    }
    async loadJSON(tagId, pathConfigJson, index) {
        let url, id;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumber"])(pathConfigJson) || pathConfigJson === undefined) {
            url = tagId;
        } else {
            id = tagId;
            url = pathConfigJson;
        }
        return this._loadParams({
            id: id,
            url,
            index
        });
    }
    async refresh(refresh = true) {
        if (!refresh) {
            return;
        }
        this.dom().forEach((t)=>t.refresh());
    }
    removeEventListener(type, listener) {
        this._eventDispatcher.removeEventListener(type, listener);
    }
    async set(id, element, options, index) {
        const params = {
            index
        };
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(id)) {
            params.id = id;
        } else {
            params.element = id;
        }
        if (element instanceof HTMLElement) {
            params.element = element;
        } else {
            params.options = element;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumber"])(options)) {
            params.index = options;
        } else {
            params.options = options ?? params.options;
        }
        return this._loadParams(params);
    }
    async setJSON(id, element, pathConfigJson, index) {
        const params = {};
        if (id instanceof HTMLElement) {
            params.element = id;
            params.url = element;
            params.index = pathConfigJson;
        } else {
            params.id = id;
            params.element = element;
            params.url = pathConfigJson;
            params.index = index;
        }
        return this._loadParams(params);
    }
    setOnClickHandler(callback) {
        const dom = this.dom();
        if (!dom.length) {
            throw new Error(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorPrefix"]} can only set click handlers after calling tsParticles.load()`);
        }
        for (const domItem of dom){
            domItem.addClickHandler(callback);
        }
    }
    async _loadParams(params) {
        const id = params.id ?? `tsparticles${Math.floor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({
            fallback: params.options,
            url,
            index
        }) : params.options;
        let domContainer = params.element ?? document.getElementById(id);
        if (!domContainer) {
            domContainer = document.createElement("div");
            domContainer.id = id;
            document.body.append(domContainer);
        }
        const currentOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromSingleOrMultiple"])(options, index), dom = this.dom(), oldIndex = dom.findIndex((v)=>v.id === id);
        if (oldIndex >= 0) {
            const old = this.domItem(oldIndex);
            if (old && !old.destroyed) {
                old.destroy();
                dom.splice(oldIndex, 1);
            }
        }
        let canvasEl;
        if (domContainer.tagName.toLowerCase() === "canvas") {
            canvasEl = domContainer;
            canvasEl.dataset[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generatedAttribute"]] = "false";
        } else {
            const existingCanvases = domContainer.getElementsByTagName("canvas");
            if (existingCanvases.length) {
                canvasEl = existingCanvases[0];
                canvasEl.dataset[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generatedAttribute"]] = "false";
            } else {
                canvasEl = document.createElement("canvas");
                canvasEl.dataset[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generatedAttribute"]] = "true";
                domContainer.appendChild(canvasEl);
            }
        }
        if (!canvasEl.style.width) {
            canvasEl.style.width = "100%";
        }
        if (!canvasEl.style.height) {
            canvasEl.style.height = "100%";
        }
        const newItem = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Container$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Container"](this, id, currentOptions);
        if (oldIndex >= 0) {
            dom.splice(oldIndex, 0, newItem);
        } else {
            dom.push(newItem);
        }
        newItem.canvas.loadCanvas(canvasEl);
        await newItem.start();
        return newItem;
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/init.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "init": (()=>init)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$RgbColorManager$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$HslColorManager$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/HslColorManager.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Engine$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Engine.js [app-client] (ecmascript)");
;
;
;
;
function init() {
    const rgbColorManager = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$RgbColorManager$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RgbColorManager"](), hslColorManager = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$HslColorManager$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["HslColorManager"]();
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addColorManager"])(rgbColorManager);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addColorManager"])(hslColorManager);
    const engine = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Engine$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Engine"]();
    engine.init();
    return engine;
}
}}),
"[project]/node_modules/tsparticles-engine/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "tsParticles": (()=>tsParticles)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/init.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
;
const tsParticles = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["init"])();
if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isSsr"])()) {
    window.tsParticles = tsParticles;
}
;
;
;
}}),
"[project]/node_modules/react-tsparticles/esm/Particles.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$tsparticles$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-tsparticles/esm/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/index.js [app-client] (ecmascript) <locals>");
;
;
;
const defaultId = "tsparticles";
class Particles extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Component"] {
    constructor(props){
        super(props);
        this.state = {
            init: false,
            library: undefined
        };
    }
    destroy() {
        if (!this.state.library) {
            return;
        }
        this.state.library.destroy();
        this.setState({
            library: undefined
        });
    }
    shouldComponentUpdate(nextProps) {
        const nextOptions = nextProps.options ?? nextProps.params, currentOptions = this.props.options ?? this.props.params;
        return nextProps.url !== this.props.url || nextProps.id !== this.props.id || nextProps.canvasClassName !== this.props.canvasClassName || nextProps.className !== this.props.className || nextProps.height !== this.props.height || nextProps.width !== this.props.width || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$tsparticles$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepCompare"])(nextProps.style, this.props.style) || nextProps.init !== this.props.init || nextProps.loaded !== this.props.loaded || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$tsparticles$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepCompare"])(nextOptions, currentOptions, (key)=>key.startsWith("_"));
    }
    componentDidUpdate() {
        this.refresh();
    }
    forceUpdate() {
        this.refresh().then(()=>{
            super.forceUpdate();
        });
    }
    componentDidMount() {
        (async ()=>{
            if (this.props.init) {
                await this.props.init(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["tsParticles"]);
            }
            this.setState({
                init: true
            }, async ()=>{
                await this.loadParticles();
            });
        })();
    }
    componentWillUnmount() {
        this.destroy();
    }
    render() {
        const { width, height, className, canvasClassName, id } = this.props;
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
            className: className,
            id: id
        }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("canvas", {
            className: canvasClassName,
            style: {
                ...this.props.style,
                width,
                height
            }
        }));
    }
    async refresh() {
        this.destroy();
        await this.loadParticles();
    }
    async loadParticles() {
        if (!this.state.init) {
            return;
        }
        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = await __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["tsParticles"].load({
            url: this.props.url,
            id,
            options: this.props.options ?? this.props.params
        });
        if (this.props.container) {
            this.props.container.current = container;
        }
        this.setState({
            library: container
        });
        if (this.props.loaded) {
            await this.props.loaded(container);
        }
    }
}
Particles.defaultProps = {
    width: "100%",
    height: "100%",
    options: {},
    style: {},
    url: undefined,
    id: defaultId
};
const __TURBOPACK__default__export__ = Particles;
}}),
"[project]/node_modules/react-tsparticles/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$tsparticles$2f$esm$2f$Particles$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-tsparticles/esm/Particles.js [app-client] (ecmascript)");
;
const __TURBOPACK__default__export__ = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$tsparticles$2f$esm$2f$Particles$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"];
;
}}),
"[project]/node_modules/react-tsparticles/esm/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$tsparticles$2f$esm$2f$Particles$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-tsparticles/esm/Particles.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$tsparticles$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/react-tsparticles/esm/index.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "initParticlesJS": (()=>initParticlesJS)
});
const initParticlesJS = (engine)=>{
    const particlesJS = (tagId, options)=>{
        return engine.load(tagId, options);
    };
    particlesJS.load = (tagId, pathConfigJson, callback)=>{
        engine.loadJSON(tagId, pathConfigJson).then((container)=>{
            if (container) {
                callback(container);
            }
        }).catch(()=>{
            callback(undefined);
        });
    };
    particlesJS.setOnClickHandler = (callback)=>{
        engine.setOnClickHandler(callback);
    };
    const pJSDom = engine.dom();
    return {
        particlesJS,
        pJSDom
    };
};
;
}}),
"[project]/node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Particles": (()=>Particles)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/index.js [app-client] (ecmascript) <locals>");
;
class Particles {
    static init(options) {
        const particles = new Particles(), selector = options.selector;
        if (!selector) {
            throw new Error("No selector provided");
        }
        const el = document.querySelector(selector);
        if (!el) {
            throw new Error("No element found for selector");
        }
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["tsParticles"].set(selector.replace(".", "").replace("!", ""), el, {
            fullScreen: {
                enable: false
            },
            particles: {
                color: {
                    value: options.color ?? "!000000"
                },
                links: {
                    color: "random",
                    distance: options.minDistance ?? 120,
                    enable: options.connectParticles ?? false
                },
                move: {
                    enable: true,
                    speed: options.speed ?? 0.5
                },
                number: {
                    value: options.maxParticles ?? 100
                },
                size: {
                    value: {
                        min: 1,
                        max: options.sizeVariations ?? 3
                    }
                }
            },
            responsive: options.responsive?.map((responsive)=>({
                    maxWidth: responsive.breakpoint,
                    options: {
                        particles: {
                            color: {
                                value: responsive.options?.color
                            },
                            links: {
                                distance: responsive.options?.minDistance,
                                enable: responsive.options?.connectParticles
                            },
                            number: {
                                value: options.maxParticles
                            },
                            move: {
                                enable: true,
                                speed: responsive.options?.speed
                            },
                            size: {
                                value: responsive.options?.sizeVariations
                            }
                        }
                    }
                }))
        }).then((container)=>{
            particles._container = container;
        });
        return particles;
    }
    destroy() {
        const container = this._container;
        container && container.destroy();
    }
    pauseAnimation() {
        const container = this._container;
        container && container.pause();
    }
    resumeAnimation() {
        const container = this._container;
        container && container.play();
    }
}
}}),
"[project]/node_modules/tsparticles-particles.js/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "initPjs": (()=>initPjs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$particles$2e$js$2f$esm$2f$VincentGarreau$2f$particles$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$particles$2e$js$2f$esm$2f$marcbruederlin$2f$Particles$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js [app-client] (ecmascript)");
;
;
const initPjs = (engine)=>{
    const { particlesJS, pJSDom } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$particles$2e$js$2f$esm$2f$VincentGarreau$2f$particles$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["initParticlesJS"])(engine);
    window.particlesJS = particlesJS;
    window.pJSDom = pJSDom;
    window.Particles = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$particles$2e$js$2f$esm$2f$marcbruederlin$2f$Particles$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Particles"];
    return {
        particlesJS,
        pJSDom,
        Particles: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$particles$2e$js$2f$esm$2f$marcbruederlin$2f$Particles$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Particles"]
    };
};
;
}}),
"[project]/node_modules/tsparticles-move-parallax/esm/ParallaxMover.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ParallaxMover": (()=>ParallaxMover)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
class ParallaxMover {
    init() {}
    isEnabled(particle) {
        return !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isSsr"])() && !particle.destroyed && particle.container.actualOptions.interactivity.events.onHover.parallax.enable;
    }
    move(particle) {
        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isSsr"])() || !parallaxOptions.enable) {
            return;
        }
        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;
        if (!mousePos) {
            return;
        }
        const canvasSize = container.canvas.size, canvasCenter = {
            x: canvasSize.width / 2,
            y: canvasSize.height / 2
        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {
            x: (mousePos.x - canvasCenter.x) * factor,
            y: (mousePos.y - canvasCenter.y) * factor
        }, { offset } = particle;
        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;
        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;
    }
}
}}),
"[project]/node_modules/tsparticles-move-parallax/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadParallaxMover": (()=>loadParallaxMover)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$parallax$2f$esm$2f$ParallaxMover$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-move-parallax/esm/ParallaxMover.js [app-client] (ecmascript)");
;
async function loadParallaxMover(engine, refresh = true) {
    await engine.addMover("parallax", ()=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$parallax$2f$esm$2f$ParallaxMover$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ParallaxMover"](), refresh);
}
}}),
"[project]/node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Attract": (()=>Attract)
});
class Attract {
    constructor(){
        this.distance = 200;
        this.duration = 0.4;
        this.easing = "ease-out-quad";
        this.factor = 1;
        this.maxSpeed = 50;
        this.speed = 1;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.distance !== undefined) {
            this.distance = data.distance;
        }
        if (data.duration !== undefined) {
            this.duration = data.duration;
        }
        if (data.easing !== undefined) {
            this.easing = data.easing;
        }
        if (data.factor !== undefined) {
            this.factor = data.factor;
        }
        if (data.maxSpeed !== undefined) {
            this.maxSpeed = data.maxSpeed;
        }
        if (data.speed !== undefined) {
            this.speed = data.speed;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ExternalInteractorBase": (()=>ExternalInteractorBase)
});
class ExternalInteractorBase {
    constructor(container){
        this.container = container;
        this.type = "external";
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-attract/esm/Attractor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Attractor": (()=>Attractor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$attract$2f$esm$2f$Options$2f$Classes$2f$Attract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
;
;
class Attractor extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    constructor(engine, container){
        super(container);
        this._clickAttract = ()=>{
            const container = this.container;
            if (!container.attract) {
                container.attract = {
                    particles: []
                };
            }
            const { attract } = container;
            if (!attract.finish) {
                if (!attract.count) {
                    attract.count = 0;
                }
                attract.count++;
                if (attract.count === container.particles.count) {
                    attract.finish = true;
                }
            }
            if (attract.clicking) {
                const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;
                if (!attractRadius || attractRadius < 0 || !mousePos) {
                    return;
                }
                this._processAttract(mousePos, attractRadius, new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](mousePos.x, mousePos.y, attractRadius));
            } else if (attract.clicking === false) {
                attract.particles = [];
            }
            return;
        };
        this._hoverAttract = ()=>{
            const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;
            if (!attractRadius || attractRadius < 0 || !mousePos) {
                return;
            }
            this._processAttract(mousePos, attractRadius, new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](mousePos.x, mousePos.y, attractRadius));
        };
        this._processAttract = (position, attractRadius, area)=>{
            const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;
            if (!attractOptions) {
                return;
            }
            const query = container.particles.quadTree.query(area, (p)=>this.isEnabled(p));
            for (const particle of query){
                const { dx, dy, distance } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(particle.position, position);
                const velocity = attractOptions.speed * attractOptions.factor;
                const attractFactor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEasing"])(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);
                const normVec = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].create(distance === 0 ? velocity : dx / distance * attractFactor, distance === 0 ? velocity : dy / distance * attractFactor);
                particle.position.subFrom(normVec);
            }
        };
        this._engine = engine;
        if (!container.attract) {
            container.attract = {
                particles: []
            };
        }
        this.handleClickMode = (mode)=>{
            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;
            if (!attract || mode !== "attract") {
                return;
            }
            if (!container.attract) {
                container.attract = {
                    particles: []
                };
            }
            container.attract.clicking = true;
            container.attract.count = 0;
            for (const particle of container.attract.particles){
                if (!this.isEnabled(particle)) {
                    continue;
                }
                particle.velocity.setTo(particle.initialVelocity);
            }
            container.attract.particles = [];
            container.attract.finish = false;
            setTimeout(()=>{
                if (container.destroyed) {
                    return;
                }
                if (!container.attract) {
                    container.attract = {
                        particles: []
                    };
                }
                container.attract.clicking = false;
            }, attract.duration * 1000);
        };
    }
    clear() {}
    init() {
        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;
        if (!attract) {
            return;
        }
        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;
    }
    async interact() {
        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseMoveEvent"], events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;
        if (mouseMoveStatus && hoverEnabled && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("attract", hoverMode)) {
            this._hoverAttract();
        } else if (clickEnabled && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("attract", clickMode)) {
            this._clickAttract();
        }
    }
    isEnabled(particle) {
        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;
        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {
            return false;
        }
        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("attract", hoverMode) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("attract", clickMode);
    }
    loadModeOptions(options, ...sources) {
        if (!options.attract) {
            options.attract = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$attract$2f$esm$2f$Options$2f$Classes$2f$Attract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Attract"]();
        }
        for (const source of sources){
            options.attract.load(source?.attract);
        }
    }
    reset() {}
}
}}),
"[project]/node_modules/tsparticles-interaction-external-attract/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadExternalAttractInteraction": (()=>loadExternalAttractInteraction)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$attract$2f$esm$2f$Attractor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-attract/esm/Attractor.js [app-client] (ecmascript)");
;
async function loadExternalAttractInteraction(engine, refresh = true) {
    await engine.addInteractor("externalAttract", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$attract$2f$esm$2f$Attractor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Attractor"](engine, container), refresh);
}
;
;
}}),
"[project]/node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Bounce": (()=>Bounce)
});
class Bounce {
    constructor(){
        this.distance = 200;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.distance !== undefined) {
            this.distance = data.distance;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Bouncer": (()=>Bouncer)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bounce$2f$esm$2f$Options$2f$Classes$2f$Bounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
;
;
class Bouncer extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    constructor(container){
        super(container);
        this._processBounce = (position, radius, area)=>{
            const query = this.container.particles.quadTree.query(area, (p)=>this.isEnabled(p));
            for (const particle of query){
                if (area instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"]) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["circleBounce"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["circleBounceDataFromParticle"])(particle), {
                        position,
                        radius,
                        mass: radius ** 2 * Math.PI / 2,
                        velocity: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin,
                        factor: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin
                    });
                } else if (area instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Rectangle"]) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rectBounce"])(particle, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["calculateBounds"])(position, radius));
                }
            }
        };
        this._processMouseBounce = ()=>{
            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;
            if (!radius || radius < 0 || !mousePos) {
                return;
            }
            this._processBounce(mousePos, radius, new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](mousePos.x, mousePos.y, radius + tolerance));
        };
        this._singleSelectorBounce = (selector, div)=>{
            const container = this.container, query = document.querySelectorAll(selector);
            if (!query.length) {
                return;
            }
            query.forEach((item)=>{
                const elem = item, pxRatio = container.retina.pixelRatio, pos = {
                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,
                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio
                }, radius = elem.offsetWidth / 2 * pxRatio, tolerance = 10 * pxRatio, area = div.type === "circle" ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](pos.x, pos.y, radius + tolerance) : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Rectangle"](elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);
                this._processBounce(pos, radius, area);
            });
        };
    }
    clear() {}
    init() {
        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;
        if (!bounce) {
            return;
        }
        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;
    }
    async interact() {
        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseMoveEvent"], hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;
        if (mouseMoveStatus && hoverEnabled && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("bounce", hoverMode)) {
            this._processMouseBounce();
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["divModeExecute"])("bounce", divs, (selector, div)=>this._singleSelectorBounce(selector, div));
        }
    }
    isEnabled(particle) {
        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;
        return mouse.position && events.onHover.enable && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("bounce", events.onHover.mode) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isDivModeEnabled"])("bounce", divs);
    }
    loadModeOptions(options, ...sources) {
        if (!options.bounce) {
            options.bounce = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bounce$2f$esm$2f$Options$2f$Classes$2f$Bounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Bounce"]();
        }
        for (const source of sources){
            options.bounce.load(source?.bounce);
        }
    }
    reset() {}
}
}}),
"[project]/node_modules/tsparticles-interaction-external-bounce/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadExternalBounceInteraction": (()=>loadExternalBounceInteraction)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bounce$2f$esm$2f$Bouncer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js [app-client] (ecmascript)");
;
async function loadExternalBounceInteraction(engine, refresh = true) {
    await engine.addInteractor("externalBounce", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bounce$2f$esm$2f$Bouncer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Bouncer"](container), refresh);
}
;
;
}}),
"[project]/node_modules/tsparticles-interaction-external-bubble/esm/Utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "calculateBubbleValue": (()=>calculateBubbleValue)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {
    if (modeValue >= optionsValue) {
        const value = particleValue + (modeValue - optionsValue) * ratio;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])(value, particleValue, modeValue);
    } else if (modeValue < optionsValue) {
        const value = particleValue - (optionsValue - modeValue) * ratio;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])(value, modeValue, particleValue);
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BubbleBase": (()=>BubbleBase)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
;
class BubbleBase {
    constructor(){
        this.distance = 200;
        this.duration = 0.4;
        this.mix = false;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.distance !== undefined) {
            this.distance = data.distance;
        }
        if (data.duration !== undefined) {
            this.duration = data.duration;
        }
        if (data.mix !== undefined) {
            this.mix = data.mix;
        }
        if (data.opacity !== undefined) {
            this.opacity = data.opacity;
        }
        if (data.color !== undefined) {
            const sourceColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(this.color) ? undefined : this.color;
            this.color = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(data.color, (color)=>{
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(sourceColor, color);
            });
        }
        if (data.size !== undefined) {
            this.size = data.size;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BubbleDiv": (()=>BubbleDiv)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Options$2f$Classes$2f$BubbleBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js [app-client] (ecmascript)");
;
;
class BubbleDiv extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Options$2f$Classes$2f$BubbleBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BubbleBase"] {
    constructor(){
        super();
        this.selectors = [];
    }
    get ids() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(this.selectors, (t)=>t.replace("#", ""));
    }
    set ids(value) {
        this.selectors = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(value, (t)=>`#${t}`);
    }
    load(data) {
        super.load(data);
        if (!data) {
            return;
        }
        if (data.ids !== undefined) {
            this.ids = data.ids;
        }
        if (data.selectors !== undefined) {
            this.selectors = data.selectors;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Bubble": (()=>Bubble)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Options$2f$Classes$2f$BubbleDiv$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Options$2f$Classes$2f$BubbleBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js [app-client] (ecmascript)");
;
;
;
class Bubble extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Options$2f$Classes$2f$BubbleBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BubbleBase"] {
    load(data) {
        super.load(data);
        if (!data) {
            return;
        }
        this.divs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(data.divs, (div)=>{
            const tmp = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Options$2f$Classes$2f$BubbleDiv$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BubbleDiv"]();
            tmp.load(div);
            return tmp;
        });
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Bubbler": (()=>Bubbler)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-bubble/esm/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Options$2f$Classes$2f$Bubble$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
;
;
;
class Bubbler extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    constructor(container){
        super(container);
        this._clickBubble = ()=>{
            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;
            if (!bubbleOptions || !mouseClickPos) {
                return;
            }
            if (!container.bubble) {
                container.bubble = {};
            }
            const distance = container.retina.bubbleModeDistance;
            if (!distance || distance < 0) {
                return;
            }
            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p)=>this.isEnabled(p)), { bubble } = container;
            for (const particle of query){
                if (!bubble.clicking) {
                    continue;
                }
                particle.bubble.inRange = !bubble.durationEnd;
                const pos = particle.getPosition(), distMouse = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;
                if (timeSpent > bubbleOptions.duration) {
                    bubble.durationEnd = true;
                }
                if (timeSpent > bubbleOptions.duration * 2) {
                    bubble.clicking = false;
                    bubble.durationEnd = false;
                }
                const sizeData = {
                    bubbleObj: {
                        optValue: container.retina.bubbleModeSize,
                        value: particle.bubble.radius
                    },
                    particlesObj: {
                        optValue: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeMax"])(particle.options.size.value) * container.retina.pixelRatio,
                        value: particle.size.value
                    },
                    type: "size"
                };
                this._process(particle, distMouse, timeSpent, sizeData);
                const opacityData = {
                    bubbleObj: {
                        optValue: bubbleOptions.opacity,
                        value: particle.bubble.opacity
                    },
                    particlesObj: {
                        optValue: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeMax"])(particle.options.opacity.value),
                        value: particle.opacity?.value ?? 1
                    },
                    type: "opacity"
                };
                this._process(particle, distMouse, timeSpent, opacityData);
                if (!bubble.durationEnd && distMouse <= distance) {
                    this._hoverBubbleColor(particle, distMouse);
                } else {
                    delete particle.bubble.color;
                }
            }
        };
        this._hoverBubble = ()=>{
            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;
            if (!distance || distance < 0 || mousePos === undefined) {
                return;
            }
            const query = container.particles.quadTree.queryCircle(mousePos, distance, (p)=>this.isEnabled(p));
            for (const particle of query){
                particle.bubble.inRange = true;
                const pos = particle.getPosition(), pointDistance = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(pos, mousePos), ratio = 1 - pointDistance / distance;
                if (pointDistance <= distance) {
                    if (ratio >= 0 && container.interactivity.status === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseMoveEvent"]) {
                        this._hoverBubbleSize(particle, ratio);
                        this._hoverBubbleOpacity(particle, ratio);
                        this._hoverBubbleColor(particle, ratio);
                    }
                } else {
                    this.reset(particle);
                }
                if (container.interactivity.status === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseLeaveEvent"]) {
                    this.reset(particle);
                }
            }
        };
        this._hoverBubbleColor = (particle, ratio, divBubble)=>{
            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;
            if (!bubbleOptions) {
                return;
            }
            if (!particle.bubble.finalColor) {
                const modeColor = bubbleOptions.color;
                if (!modeColor) {
                    return;
                }
                const bubbleColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromSingleOrMultiple"])(modeColor);
                particle.bubble.finalColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToHsl"])(bubbleColor);
            }
            if (!particle.bubble.finalColor) {
                return;
            }
            if (bubbleOptions.mix) {
                particle.bubble.color = undefined;
                const pColor = particle.getFillColor();
                particle.bubble.color = pColor ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rgbToHsl"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["colorMix"])(pColor, particle.bubble.finalColor, 1 - ratio, ratio)) : particle.bubble.finalColor;
            } else {
                particle.bubble.color = particle.bubble.finalColor;
            }
        };
        this._hoverBubbleOpacity = (particle, ratio, divBubble)=>{
            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;
            if (!modeOpacity) {
                return;
            }
            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? 1, opacity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["calculateBubbleValue"])(pOpacity, modeOpacity, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeMax"])(optOpacity), ratio);
            if (opacity !== undefined) {
                particle.bubble.opacity = opacity;
            }
        };
        this._hoverBubbleSize = (particle, ratio, divBubble)=>{
            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;
            if (modeSize === undefined) {
                return;
            }
            const optSize = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeMax"])(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["calculateBubbleValue"])(pSize, modeSize, optSize, ratio);
            if (size !== undefined) {
                particle.bubble.radius = size;
            }
        };
        this._process = (particle, distMouse, timeSpent, data)=>{
            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;
            if (!bubbleOptions || bubbleParam === undefined) {
                return;
            }
            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;
            if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {
                return;
            }
            if (!container.bubble) {
                container.bubble = {};
            }
            if (container.bubble.durationEnd) {
                if (pObjBubble) {
                    if (type === "size") {
                        delete particle.bubble.radius;
                    }
                    if (type === "opacity") {
                        delete particle.bubble.opacity;
                    }
                }
            } else {
                if (distMouse <= bubbleDistance) {
                    const obj = pObjBubble ?? pObj;
                    if (obj !== bubbleParam) {
                        const value = pObj - timeSpent * (pObj - bubbleParam) / bubbleDuration;
                        if (type === "size") {
                            particle.bubble.radius = value;
                        }
                        if (type === "opacity") {
                            particle.bubble.opacity = value;
                        }
                    }
                } else {
                    if (type === "size") {
                        delete particle.bubble.radius;
                    }
                    if (type === "opacity") {
                        delete particle.bubble.opacity;
                    }
                }
            }
        };
        this._singleSelectorHover = (delta, selector, div)=>{
            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;
            if (!bubble || !selectors.length) {
                return;
            }
            selectors.forEach((item)=>{
                const elem = item, pxRatio = container.retina.pixelRatio, pos = {
                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,
                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio
                }, repulseRadius = elem.offsetWidth / 2 * pxRatio, area = div.type === "circle" ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](pos.x, pos.y, repulseRadius) : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Rectangle"](elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p)=>this.isEnabled(p));
                for (const particle of query){
                    if (!area.contains(particle.getPosition())) {
                        continue;
                    }
                    particle.bubble.inRange = true;
                    const divs = bubble.divs, divBubble = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["divMode"])(divs, elem);
                    if (!particle.bubble.div || particle.bubble.div !== elem) {
                        this.clear(particle, delta, true);
                        particle.bubble.div = elem;
                    }
                    this._hoverBubbleSize(particle, 1, divBubble);
                    this._hoverBubbleOpacity(particle, 1, divBubble);
                    this._hoverBubbleColor(particle, 1, divBubble);
                }
            });
        };
        if (!container.bubble) {
            container.bubble = {};
        }
        this.handleClickMode = (mode)=>{
            if (mode !== "bubble") {
                return;
            }
            if (!container.bubble) {
                container.bubble = {};
            }
            container.bubble.clicking = true;
        };
    }
    clear(particle, delta, force) {
        if (particle.bubble.inRange && !force) {
            return;
        }
        delete particle.bubble.div;
        delete particle.bubble.opacity;
        delete particle.bubble.radius;
        delete particle.bubble.color;
    }
    init() {
        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;
        if (!bubble) {
            return;
        }
        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;
        if (bubble.size !== undefined) {
            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;
        }
    }
    async interact(delta) {
        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;
        if (hoverEnabled && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("bubble", hoverMode)) {
            this._hoverBubble();
        } else if (clickEnabled && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("bubble", clickMode)) {
            this._clickBubble();
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["divModeExecute"])("bubble", divs, (selector, div)=>this._singleSelectorHover(delta, selector, div));
        }
    }
    isEnabled(particle) {
        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isDivModeEnabled"])("bubble", onDiv);
        if (!(divBubble || onHover.enable && mouse.position || onClick.enable && mouse.clickPosition)) {
            return false;
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("bubble", onHover.mode) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("bubble", onClick.mode) || divBubble;
    }
    loadModeOptions(options, ...sources) {
        if (!options.bubble) {
            options.bubble = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Options$2f$Classes$2f$Bubble$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Bubble"]();
        }
        for (const source of sources){
            options.bubble.load(source?.bubble);
        }
    }
    reset(particle) {
        particle.bubble.inRange = false;
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-bubble/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadExternalBubbleInteraction": (()=>loadExternalBubbleInteraction)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Bubbler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js [app-client] (ecmascript)");
;
async function loadExternalBubbleInteraction(engine, refresh = true) {
    await engine.addInteractor("externalBubble", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Bubbler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Bubbler"](container), refresh);
}
;
;
;
;
;
;
}}),
"[project]/node_modules/tsparticles-interaction-external-connect/esm/Utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "drawConnectLine": (()=>drawConnectLine),
    "drawConnection": (()=>drawConnection),
    "gradient": (()=>gradient),
    "lineStyle": (()=>lineStyle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js [app-client] (ecmascript)");
;
function gradient(context, p1, p2, opacity) {
    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();
    if (!color1 || !color2) {
        return;
    }
    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["colorMix"])(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);
    grad.addColorStop(0, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromHsl"])(color1, opacity));
    grad.addColorStop(gradStop > 1 ? 1 : gradStop, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromRgb"])(midRgb, opacity));
    grad.addColorStop(1, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromHsl"])(color2, opacity));
    return grad;
}
function drawConnectLine(context, width, lineStyle, begin, end) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawLine"])(context, begin, end);
    context.lineWidth = width;
    context.strokeStyle = lineStyle;
    context.stroke();
}
function lineStyle(container, ctx, p1, p2) {
    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;
    if (!connectOptions) {
        return;
    }
    return gradient(ctx, p1, p2, connectOptions.links.opacity);
}
function drawConnection(container, p1, p2) {
    container.canvas.draw((ctx)=>{
        const ls = lineStyle(container, ctx, p1, p2);
        if (!ls) {
            return;
        }
        const pos1 = p1.getPosition(), pos2 = p2.getPosition();
        drawConnectLine(ctx, p1.retina.linksWidth ?? 0, ls, pos1, pos2);
    });
}
}}),
"[project]/node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ConnectLinks": (()=>ConnectLinks)
});
class ConnectLinks {
    constructor(){
        this.opacity = 0.5;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.opacity !== undefined) {
            this.opacity = data.opacity;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Connect": (()=>Connect)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$Options$2f$Classes$2f$ConnectLinks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js [app-client] (ecmascript)");
;
class Connect {
    constructor(){
        this.distance = 80;
        this.links = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$Options$2f$Classes$2f$ConnectLinks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ConnectLinks"]();
        this.radius = 60;
    }
    get lineLinked() {
        return this.links;
    }
    set lineLinked(value) {
        this.links = value;
    }
    get line_linked() {
        return this.links;
    }
    set line_linked(value) {
        this.links = value;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.distance !== undefined) {
            this.distance = data.distance;
        }
        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);
        if (data.radius !== undefined) {
            this.radius = data.radius;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-connect/esm/Connector.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Connector": (()=>Connector)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-connect/esm/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$Options$2f$Classes$2f$Connect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
;
;
;
class Connector extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    constructor(container){
        super(container);
    }
    clear() {}
    init() {
        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;
        if (!connect) {
            return;
        }
        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;
        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;
    }
    async interact() {
        const container = this.container, options = container.actualOptions;
        if (options.interactivity.events.onHover.enable && container.interactivity.status === "pointermove") {
            const mousePos = container.interactivity.mouse.position;
            if (!container.retina.connectModeDistance || container.retina.connectModeDistance < 0 || !container.retina.connectModeRadius || container.retina.connectModeRadius < 0 || !mousePos) {
                return;
            }
            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p)=>this.isEnabled(p));
            let i = 0;
            for (const p1 of query){
                const pos1 = p1.getPosition();
                for (const p2 of query.slice(i + 1)){
                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);
                    if (xDiff < distMax && yDiff < distMax) {
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawConnection"])(container, p1, p2);
                    }
                }
                ++i;
            }
        }
    }
    isEnabled(particle) {
        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;
        if (!(events.onHover.enable && mouse.position)) {
            return false;
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("connect", events.onHover.mode);
    }
    loadModeOptions(options, ...sources) {
        if (!options.connect) {
            options.connect = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$Options$2f$Classes$2f$Connect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Connect"]();
        }
        for (const source of sources){
            options.connect.load(source?.connect);
        }
    }
    reset() {}
}
}}),
"[project]/node_modules/tsparticles-interaction-external-connect/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadExternalConnectInteraction": (()=>loadExternalConnectInteraction)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$Connector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-connect/esm/Connector.js [app-client] (ecmascript)");
;
async function loadExternalConnectInteraction(engine, refresh = true) {
    await engine.addInteractor("externalConnect", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$Connector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Connector"](container), refresh);
}
;
;
;
;
}}),
"[project]/node_modules/tsparticles-interaction-external-grab/esm/Utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "drawGrab": (()=>drawGrab),
    "drawGrabLine": (()=>drawGrabLine)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
;
function drawGrabLine(context, width, begin, end, colorLine, opacity) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawLine"])(context, begin, end);
    context.strokeStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromRgb"])(colorLine, opacity);
    context.lineWidth = width;
    context.stroke();
}
function drawGrab(container, particle, lineColor, opacity, mousePos) {
    container.canvas.draw((ctx)=>{
        const beginPos = particle.getPosition();
        drawGrabLine(ctx, particle.retina.linksWidth ?? 0, beginPos, mousePos, lineColor, opacity);
    });
}
}}),
"[project]/node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "GrabLinks": (()=>GrabLinks)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
;
class GrabLinks {
    constructor(){
        this.blink = false;
        this.consent = false;
        this.opacity = 1;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.blink !== undefined) {
            this.blink = data.blink;
        }
        if (data.color !== undefined) {
            this.color = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(this.color, data.color);
        }
        if (data.consent !== undefined) {
            this.consent = data.consent;
        }
        if (data.opacity !== undefined) {
            this.opacity = data.opacity;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Grab": (()=>Grab)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$Options$2f$Classes$2f$GrabLinks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js [app-client] (ecmascript)");
;
class Grab {
    constructor(){
        this.distance = 100;
        this.links = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$Options$2f$Classes$2f$GrabLinks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GrabLinks"]();
    }
    get lineLinked() {
        return this.links;
    }
    set lineLinked(value) {
        this.links = value;
    }
    get line_linked() {
        return this.links;
    }
    set line_linked(value) {
        this.links = value;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.distance !== undefined) {
            this.distance = data.distance;
        }
        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-grab/esm/Grabber.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Grabber": (()=>Grabber)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-grab/esm/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$Options$2f$Classes$2f$Grab$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
;
;
;
class Grabber extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    constructor(container){
        super(container);
    }
    clear() {}
    init() {
        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;
        if (!grab) {
            return;
        }
        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;
    }
    async interact() {
        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;
        if (!interactivity.modes.grab || !interactivity.events.onHover.enable || container.interactivity.status !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseMoveEvent"]) {
            return;
        }
        const mousePos = container.interactivity.mouse.position;
        if (!mousePos) {
            return;
        }
        const distance = container.retina.grabModeDistance;
        if (!distance || distance < 0) {
            return;
        }
        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p)=>this.isEnabled(p));
        for (const particle of query){
            const pos = particle.getPosition(), pointDistance = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(pos, mousePos);
            if (pointDistance > distance) {
                continue;
            }
            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - pointDistance * lineOpacity / distance;
            if (opacityLine <= 0) {
                continue;
            }
            const optColor = grabLineOptions.color ?? particle.options.links?.color;
            if (!container.particles.grabLineColor && optColor) {
                const linksOptions = interactivity.modes.grab.links;
                container.particles.grabLineColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLinkRandomColor"])(optColor, linksOptions.blink, linksOptions.consent);
            }
            const colorLine = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLinkColor"])(particle, undefined, container.particles.grabLineColor);
            if (!colorLine) {
                continue;
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawGrab"])(container, particle, colorLine, opacityLine, mousePos);
        }
    }
    isEnabled(particle) {
        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;
        return events.onHover.enable && !!mouse.position && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("grab", events.onHover.mode);
    }
    loadModeOptions(options, ...sources) {
        if (!options.grab) {
            options.grab = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$Options$2f$Classes$2f$Grab$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Grab"]();
        }
        for (const source of sources){
            options.grab.load(source?.grab);
        }
    }
    reset() {}
}
}}),
"[project]/node_modules/tsparticles-interaction-external-grab/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadExternalGrabInteraction": (()=>loadExternalGrabInteraction)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$Grabber$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-grab/esm/Grabber.js [app-client] (ecmascript)");
;
async function loadExternalGrabInteraction(engine, refresh = true) {
    await engine.addInteractor("externalGrab", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$Grabber$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Grabber"](container), refresh);
}
;
;
;
;
}}),
"[project]/node_modules/tsparticles-interaction-external-pause/esm/Pauser.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Pauser": (()=>Pauser)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
;
class Pauser extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    constructor(container){
        super(container);
        this.handleClickMode = (mode)=>{
            if (mode !== "pause") {
                return;
            }
            const container = this.container;
            if (container.getAnimationStatus()) {
                container.pause();
            } else {
                container.play();
            }
        };
    }
    clear() {}
    init() {}
    async interact() {}
    isEnabled() {
        return true;
    }
    reset() {}
}
}}),
"[project]/node_modules/tsparticles-interaction-external-pause/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadExternalPauseInteraction": (()=>loadExternalPauseInteraction)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$pause$2f$esm$2f$Pauser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-pause/esm/Pauser.js [app-client] (ecmascript)");
;
async function loadExternalPauseInteraction(engine, refresh = true) {
    await engine.addInteractor("externalPause", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$pause$2f$esm$2f$Pauser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Pauser"](container), refresh);
}
}}),
"[project]/node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Push": (()=>Push)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class Push {
    constructor(){
        this.default = true;
        this.groups = [];
        this.quantity = 4;
    }
    get particles_nb() {
        return this.quantity;
    }
    set particles_nb(value) {
        this.quantity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(value);
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.default !== undefined) {
            this.default = data.default;
        }
        if (data.groups !== undefined) {
            this.groups = data.groups.map((t)=>t);
        }
        if (!this.groups.length) {
            this.default = true;
        }
        const quantity = data.quantity ?? data.particles_nb;
        if (quantity !== undefined) {
            this.quantity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(quantity);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-push/esm/Pusher.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Pusher": (()=>Pusher)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$push$2f$esm$2f$Options$2f$Classes$2f$Push$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
;
;
class Pusher extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    constructor(container){
        super(container);
        this.handleClickMode = (mode)=>{
            if (mode !== "push") {
                return;
            }
            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;
            if (!pushOptions) {
                return;
            }
            const quantity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(pushOptions.quantity);
            if (quantity <= 0) {
                return;
            }
            const group = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromArray"])([
                undefined,
                ...pushOptions.groups
            ]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;
            container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);
        };
    }
    clear() {}
    init() {}
    async interact() {}
    isEnabled() {
        return true;
    }
    loadModeOptions(options, ...sources) {
        if (!options.push) {
            options.push = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$push$2f$esm$2f$Options$2f$Classes$2f$Push$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Push"]();
        }
        for (const source of sources){
            options.push.load(source?.push);
        }
    }
    reset() {}
}
}}),
"[project]/node_modules/tsparticles-interaction-external-push/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadExternalPushInteraction": (()=>loadExternalPushInteraction)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$push$2f$esm$2f$Pusher$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-push/esm/Pusher.js [app-client] (ecmascript)");
;
async function loadExternalPushInteraction(engine, refresh = true) {
    await engine.addInteractor("externalPush", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$push$2f$esm$2f$Pusher$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Pusher"](container), refresh);
}
;
;
}}),
"[project]/node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Remove": (()=>Remove)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class Remove {
    constructor(){
        this.quantity = 2;
    }
    get particles_nb() {
        return this.quantity;
    }
    set particles_nb(value) {
        this.quantity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(value);
    }
    load(data) {
        if (!data) {
            return;
        }
        const quantity = data.quantity ?? data.particles_nb;
        if (quantity !== undefined) {
            this.quantity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(quantity);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-remove/esm/Remover.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Remover": (()=>Remover)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$remove$2f$esm$2f$Options$2f$Classes$2f$Remove$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
;
;
class Remover extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    constructor(container){
        super(container);
        this.handleClickMode = (mode)=>{
            const container = this.container, options = container.actualOptions;
            if (!options.interactivity.modes.remove || mode !== "remove") {
                return;
            }
            const removeNb = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(options.interactivity.modes.remove.quantity);
            container.particles.removeQuantity(removeNb);
        };
    }
    clear() {}
    init() {}
    async interact() {}
    isEnabled() {
        return true;
    }
    loadModeOptions(options, ...sources) {
        if (!options.remove) {
            options.remove = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$remove$2f$esm$2f$Options$2f$Classes$2f$Remove$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Remove"]();
        }
        for (const source of sources){
            options.remove.load(source?.remove);
        }
    }
    reset() {}
}
}}),
"[project]/node_modules/tsparticles-interaction-external-remove/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadExternalRemoveInteraction": (()=>loadExternalRemoveInteraction)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$remove$2f$esm$2f$Remover$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-remove/esm/Remover.js [app-client] (ecmascript)");
;
async function loadExternalRemoveInteraction(engine, refresh = true) {
    await engine.addInteractor("externalRemove", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$remove$2f$esm$2f$Remover$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Remover"](container), refresh);
}
;
;
}}),
"[project]/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "RepulseBase": (()=>RepulseBase)
});
class RepulseBase {
    constructor(){
        this.distance = 200;
        this.duration = 0.4;
        this.factor = 100;
        this.speed = 1;
        this.maxSpeed = 50;
        this.easing = "ease-out-quad";
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.distance !== undefined) {
            this.distance = data.distance;
        }
        if (data.duration !== undefined) {
            this.duration = data.duration;
        }
        if (data.easing !== undefined) {
            this.easing = data.easing;
        }
        if (data.factor !== undefined) {
            this.factor = data.factor;
        }
        if (data.speed !== undefined) {
            this.speed = data.speed;
        }
        if (data.maxSpeed !== undefined) {
            this.maxSpeed = data.maxSpeed;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "RepulseDiv": (()=>RepulseDiv)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Options$2f$Classes$2f$RepulseBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js [app-client] (ecmascript)");
;
;
class RepulseDiv extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Options$2f$Classes$2f$RepulseBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RepulseBase"] {
    constructor(){
        super();
        this.selectors = [];
    }
    get ids() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(this.selectors, (t)=>t.replace("#", ""));
    }
    set ids(value) {
        this.selectors = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(value, (t)=>`#${t}`);
    }
    load(data) {
        super.load(data);
        if (!data) {
            return;
        }
        if (data.ids !== undefined) {
            this.ids = data.ids;
        }
        if (data.selectors !== undefined) {
            this.selectors = data.selectors;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Repulse": (()=>Repulse)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Options$2f$Classes$2f$RepulseDiv$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Options$2f$Classes$2f$RepulseBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js [app-client] (ecmascript)");
;
;
;
class Repulse extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Options$2f$Classes$2f$RepulseBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RepulseBase"] {
    load(data) {
        super.load(data);
        if (!data) {
            return;
        }
        this.divs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(data.divs, (div)=>{
            const tmp = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Options$2f$Classes$2f$RepulseDiv$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RepulseDiv"]();
            tmp.load(div);
            return tmp;
        });
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Repulser": (()=>Repulser)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Options$2f$Classes$2f$Repulse$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
;
;
class Repulser extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    constructor(engine, container){
        super(container);
        this._clickRepulse = ()=>{
            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;
            if (!repulseOptions) {
                return;
            }
            const repulse = container.repulse || {
                particles: []
            };
            if (!repulse.finish) {
                if (!repulse.count) {
                    repulse.count = 0;
                }
                repulse.count++;
                if (repulse.count === container.particles.count) {
                    repulse.finish = true;
                }
            }
            if (repulse.clicking) {
                const repulseDistance = container.retina.repulseModeDistance;
                if (!repulseDistance || repulseDistance < 0) {
                    return;
                }
                const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;
                if (mouseClickPos === undefined) {
                    return;
                }
                const range = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p)=>this.isEnabled(p));
                for (const particle of query){
                    const { dx, dy, distance } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(mouseClickPos, particle.position), d = distance ** 2, velocity = repulseOptions.speed, force = -repulseRadius * velocity / d;
                    if (d <= repulseRadius) {
                        repulse.particles.push(particle);
                        const vect = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].create(dx, dy);
                        vect.length = force;
                        particle.velocity.setTo(vect);
                    }
                }
            } else if (repulse.clicking === false) {
                for (const particle of repulse.particles){
                    particle.velocity.setTo(particle.initialVelocity);
                }
                repulse.particles = [];
            }
        };
        this._hoverRepulse = ()=>{
            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;
            if (!repulseRadius || repulseRadius < 0 || !mousePos) {
                return;
            }
            this._processRepulse(mousePos, repulseRadius, new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](mousePos.x, mousePos.y, repulseRadius));
        };
        this._processRepulse = (position, repulseRadius, area, divRepulse)=>{
            const container = this.container, query = container.particles.quadTree.query(area, (p)=>this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;
            if (!repulseOptions) {
                return;
            }
            for (const particle of query){
                const { dx, dy, distance } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(particle.position, position), velocity = (divRepulse?.speed ?? repulseOptions.speed) * repulseOptions.factor, repulseFactor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEasing"])(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].create(distance === 0 ? velocity : dx / distance * repulseFactor, distance === 0 ? velocity : dy / distance * repulseFactor);
                particle.position.addTo(normVec);
            }
        };
        this._singleSelectorRepulse = (selector, div)=>{
            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;
            if (!repulse) {
                return;
            }
            const query = document.querySelectorAll(selector);
            if (!query.length) {
                return;
            }
            query.forEach((item)=>{
                const elem = item, pxRatio = container.retina.pixelRatio, pos = {
                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,
                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio
                }, repulseRadius = elem.offsetWidth / 2 * pxRatio, area = div.type === "circle" ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](pos.x, pos.y, repulseRadius) : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Rectangle"](elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["divMode"])(divs, elem);
                this._processRepulse(pos, repulseRadius, area, divRepulse);
            });
        };
        this._engine = engine;
        if (!container.repulse) {
            container.repulse = {
                particles: []
            };
        }
        this.handleClickMode = (mode)=>{
            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;
            if (!repulseOpts || mode !== "repulse") {
                return;
            }
            if (!container.repulse) {
                container.repulse = {
                    particles: []
                };
            }
            const repulse = container.repulse;
            repulse.clicking = true;
            repulse.count = 0;
            for (const particle of container.repulse.particles){
                if (!this.isEnabled(particle)) {
                    continue;
                }
                particle.velocity.setTo(particle.initialVelocity);
            }
            repulse.particles = [];
            repulse.finish = false;
            setTimeout(()=>{
                if (container.destroyed) {
                    return;
                }
                repulse.clicking = false;
            }, repulseOpts.duration * 1000);
        };
    }
    clear() {}
    init() {
        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;
        if (!repulse) {
            return;
        }
        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;
    }
    async interact() {
        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseMoveEvent"], events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;
        if (mouseMoveStatus && hoverEnabled && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("repulse", hoverMode)) {
            this._hoverRepulse();
        } else if (clickEnabled && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("repulse", clickMode)) {
            this._clickRepulse();
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["divModeExecute"])("repulse", divs, (selector, div)=>this._singleSelectorRepulse(selector, div));
        }
    }
    isEnabled(particle) {
        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isDivModeEnabled"])("repulse", divs);
        if (!(divRepulse || hover.enable && mouse.position || click.enable && mouse.clickPosition)) {
            return false;
        }
        const hoverMode = hover.mode, clickMode = click.mode;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("repulse", hoverMode) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("repulse", clickMode) || divRepulse;
    }
    loadModeOptions(options, ...sources) {
        if (!options.repulse) {
            options.repulse = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Options$2f$Classes$2f$Repulse$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Repulse"]();
        }
        for (const source of sources){
            options.repulse.load(source?.repulse);
        }
    }
    reset() {}
}
}}),
"[project]/node_modules/tsparticles-interaction-external-repulse/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadExternalRepulseInteraction": (()=>loadExternalRepulseInteraction)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Repulser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js [app-client] (ecmascript)");
;
async function loadExternalRepulseInteraction(engine, refresh = true) {
    await engine.addInteractor("externalRepulse", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Repulser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Repulser"](engine, container), refresh);
}
;
;
;
;
;
;
}}),
"[project]/node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Slow": (()=>Slow)
});
class Slow {
    constructor(){
        this.factor = 3;
        this.radius = 200;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.factor !== undefined) {
            this.factor = data.factor;
        }
        if (data.radius !== undefined) {
            this.radius = data.radius;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-slow/esm/Slower.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Slower": (()=>Slower)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$slow$2f$esm$2f$Options$2f$Classes$2f$Slow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
;
;
class Slower extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    constructor(container){
        super(container);
    }
    clear(particle, delta, force) {
        if (particle.slow.inRange && !force) {
            return;
        }
        particle.slow.factor = 1;
    }
    init() {
        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;
        if (!slow) {
            return;
        }
        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;
    }
    async interact() {}
    isEnabled(particle) {
        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;
        return events.onHover.enable && !!mouse.position && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("slow", events.onHover.mode);
    }
    loadModeOptions(options, ...sources) {
        if (!options.slow) {
            options.slow = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$slow$2f$esm$2f$Options$2f$Classes$2f$Slow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Slow"]();
        }
        for (const source of sources){
            options.slow.load(source?.slow);
        }
    }
    reset(particle) {
        particle.slow.inRange = false;
        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;
        if (!slowOptions || !radius || radius < 0 || !mousePos) {
            return;
        }
        const particlePos = particle.getPosition(), dist = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;
        if (dist > radius) {
            return;
        }
        slow.inRange = true;
        slow.factor = proximityFactor / slowFactor;
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-external-slow/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadExternalSlowInteraction": (()=>loadExternalSlowInteraction)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$slow$2f$esm$2f$Slower$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-slow/esm/Slower.js [app-client] (ecmascript)");
;
async function loadExternalSlowInteraction(engine, refresh = true) {
    await engine.addInteractor("externalSlow", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$slow$2f$esm$2f$Slower$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Slower"](container), refresh);
}
;
;
}}),
"[project]/node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ParticlesInteractorBase": (()=>ParticlesInteractorBase)
});
class ParticlesInteractorBase {
    constructor(container){
        this.container = container;
        this.type = "particles";
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Attractor": (()=>Attractor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ParticlesInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js [app-client] (ecmascript)");
;
class Attractor extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ParticlesInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ParticlesInteractorBase"] {
    constructor(container){
        super(container);
    }
    clear() {}
    init() {}
    async interact(p1) {
        const container = this.container, distance = p1.retina.attractDistance ?? container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);
        for (const p2 of query){
            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {
                continue;
            }
            const pos2 = p2.getPosition(), { dx, dy } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;
            p1.velocity.x -= ax * p1Factor;
            p1.velocity.y -= ay * p1Factor;
            p2.velocity.x += ax * p2Factor;
            p2.velocity.y += ay * p2Factor;
        }
    }
    isEnabled(particle) {
        return particle.options.move.attract.enable;
    }
    reset() {}
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-attract/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadParticlesAttractInteraction": (()=>loadParticlesAttractInteraction)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$attract$2f$esm$2f$Attractor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js [app-client] (ecmascript)");
;
async function loadParticlesAttractInteraction(engine, refresh = true) {
    await engine.addInteractor("particlesAttract", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$attract$2f$esm$2f$Attractor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Attractor"](container), refresh);
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "absorb": (()=>absorb)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
function updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {
    const factor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])(p1.options.collisions.absorb.speed * delta.factor / 10, 0, r2);
    p1.size.value += factor / 2;
    p2.size.value -= factor;
    if (r2 <= pixelRatio) {
        p2.size.value = 0;
        p2.destroy();
    }
}
function absorb(p1, p2, delta, pixelRatio) {
    const r1 = p1.getRadius(), r2 = p2.getRadius();
    if (r1 === undefined && r2 !== undefined) {
        p1.destroy();
    } else if (r1 !== undefined && r2 === undefined) {
        p2.destroy();
    } else if (r1 !== undefined && r2 !== undefined) {
        if (r1 >= r2) {
            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);
        } else {
            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);
        }
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "bounce": (()=>bounce)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
const fixBounceSpeed = (p)=>{
    if (p.collisionMaxSpeed === undefined) {
        p.collisionMaxSpeed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(p.options.collisions.maxSpeed);
    }
    if (p.velocity.length > p.collisionMaxSpeed) {
        p.velocity.length = p.collisionMaxSpeed;
    }
};
function bounce(p1, p2) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["circleBounce"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["circleBounceDataFromParticle"])(p1), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["circleBounceDataFromParticle"])(p2));
    fixBounceSpeed(p1);
    fixBounceSpeed(p2);
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "destroy": (()=>destroy)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Bounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js [app-client] (ecmascript)");
;
function destroy(p1, p2) {
    if (!p1.unbreakable && !p2.unbreakable) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Bounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bounce"])(p1, p2);
    }
    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {
        p1.destroy();
    } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {
        p2.destroy();
    } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {
        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;
        deleteP.destroy();
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "resolveCollision": (()=>resolveCollision)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Absorb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Bounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Destroy$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js [app-client] (ecmascript)");
;
;
;
function resolveCollision(p1, p2, delta, pixelRatio) {
    switch(p1.options.collisions.mode){
        case "absorb":
            {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Absorb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["absorb"])(p1, p2, delta, pixelRatio);
                break;
            }
        case "bounce":
            {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Bounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bounce"])(p1, p2);
                break;
            }
        case "destroy":
            {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Destroy$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["destroy"])(p1, p2);
                break;
            }
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Collider": (()=>Collider)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$ResolveCollision$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ParticlesInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js [app-client] (ecmascript)");
;
;
class Collider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ParticlesInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ParticlesInteractorBase"] {
    constructor(container){
        super(container);
    }
    clear() {}
    init() {}
    async interact(p1, delta) {
        if (p1.destroyed || p1.spawning) {
            return;
        }
        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);
        for (const p2 of query){
            if (p1 === p2 || !p2.options.collisions.enable || p1.options.collisions.mode !== p2.options.collisions.mode || p2.destroyed || p2.spawning) {
                continue;
            }
            const pos2 = p2.getPosition(), radius2 = p2.getRadius();
            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {
                continue;
            }
            const dist = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(pos1, pos2), distP = radius1 + radius2;
            if (dist > distP) {
                continue;
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$ResolveCollision$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveCollision"])(p1, p2, delta, container.retina.pixelRatio);
        }
    }
    isEnabled(particle) {
        return particle.options.collisions.enable;
    }
    reset() {}
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-collisions/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadParticlesCollisionsInteraction": (()=>loadParticlesCollisionsInteraction)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Collider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js [app-client] (ecmascript)");
;
async function loadParticlesCollisionsInteraction(engine, refresh = true) {
    await engine.addInteractor("particlesCollisions", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Collider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Collider"](container), refresh);
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "CircleWarp": (()=>CircleWarp)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js [app-client] (ecmascript)");
;
class CircleWarp extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"] {
    constructor(x, y, radius, canvasSize){
        super(x, y, radius);
        this.canvasSize = canvasSize;
        this.canvasSize = {
            ...canvasSize
        };
    }
    contains(point) {
        const { width, height } = this.canvasSize;
        const { x, y } = point;
        return super.contains(point) || super.contains({
            x: x - width,
            y
        }) || super.contains({
            x: x - width,
            y: y - height
        }) || super.contains({
            x,
            y: y - height
        });
    }
    intersects(range) {
        if (super.intersects(range)) {
            return true;
        }
        const rect = range, circle = range, newPos = {
            x: range.position.x - this.canvasSize.width,
            y: range.position.y - this.canvasSize.height
        };
        if (circle.radius !== undefined) {
            const biggerCircle = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](newPos.x, newPos.y, circle.radius * 2);
            return super.intersects(biggerCircle);
        } else if (rect.size !== undefined) {
            const rectSW = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Rectangle"](newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);
            return super.intersects(rectSW);
        }
        return false;
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "LinksShadow": (()=>LinksShadow)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
;
class LinksShadow {
    constructor(){
        this.blur = 5;
        this.color = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"]();
        this.color.value = "#000";
        this.enable = false;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.blur !== undefined) {
            this.blur = data.blur;
        }
        this.color = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(this.color, data.color);
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "LinksTriangle": (()=>LinksTriangle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
;
class LinksTriangle {
    constructor(){
        this.enable = false;
        this.frequency = 1;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.color !== undefined) {
            this.color = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(this.color, data.color);
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.frequency !== undefined) {
            this.frequency = data.frequency;
        }
        if (data.opacity !== undefined) {
            this.opacity = data.opacity;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Links": (()=>Links)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Options$2f$Classes$2f$LinksShadow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Options$2f$Classes$2f$LinksTriangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js [app-client] (ecmascript)");
;
;
;
class Links {
    constructor(){
        this.blink = false;
        this.color = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"]();
        this.color.value = "#fff";
        this.consent = false;
        this.distance = 100;
        this.enable = false;
        this.frequency = 1;
        this.opacity = 1;
        this.shadow = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Options$2f$Classes$2f$LinksShadow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LinksShadow"]();
        this.triangles = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Options$2f$Classes$2f$LinksTriangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LinksTriangle"]();
        this.width = 1;
        this.warp = false;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.id !== undefined) {
            this.id = data.id;
        }
        if (data.blink !== undefined) {
            this.blink = data.blink;
        }
        this.color = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(this.color, data.color);
        if (data.consent !== undefined) {
            this.consent = data.consent;
        }
        if (data.distance !== undefined) {
            this.distance = data.distance;
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.frequency !== undefined) {
            this.frequency = data.frequency;
        }
        if (data.opacity !== undefined) {
            this.opacity = data.opacity;
        }
        this.shadow.load(data.shadow);
        this.triangles.load(data.triangles);
        if (data.width !== undefined) {
            this.width = data.width;
        }
        if (data.warp !== undefined) {
            this.warp = data.warp;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/Linker.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Linker": (()=>Linker)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$CircleWarp$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Options$2f$Classes$2f$Links$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ParticlesInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
;
;
function getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {
    const { dx, dy, distance } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(pos1, pos2);
    if (!warp || distance <= optDistance) {
        return distance;
    }
    const absDiffs = {
        x: Math.abs(dx),
        y: Math.abs(dy)
    }, warpDistances = {
        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),
        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y)
    };
    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);
}
class Linker extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ParticlesInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ParticlesInteractorBase"] {
    constructor(container){
        super(container);
        this._setColor = (p1)=>{
            if (!p1.options.links) {
                return;
            }
            const container = this.linkContainer, linksOptions = p1.options.links;
            let linkColor = linksOptions.id === undefined ? container.particles.linksColor : container.particles.linksColors.get(linksOptions.id);
            if (linkColor) {
                return;
            }
            const optColor = linksOptions.color;
            linkColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLinkRandomColor"])(optColor, linksOptions.blink, linksOptions.consent);
            if (linksOptions.id === undefined) {
                container.particles.linksColor = linkColor;
            } else {
                container.particles.linksColors.set(linksOptions.id, linkColor);
            }
        };
        this.linkContainer = container;
    }
    clear() {}
    init() {
        this.linkContainer.particles.linksColor = undefined;
        this.linkContainer.particles.linksColors = new Map();
    }
    async interact(p1) {
        if (!p1.options.links) {
            return;
        }
        p1.links = [];
        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;
        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {
            return;
        }
        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$CircleWarp$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CircleWarp"](pos1.x, pos1.y, optDistance, canvasSize) : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);
        for (const p2 of query){
            const linkOpt2 = p2.options.links;
            if (p1 === p2 || !linkOpt2?.enable || linkOpt1.id !== linkOpt2.id || p2.spawning || p2.destroyed || !p2.links || p1.links.some((t)=>t.destination === p2) || p2.links.some((t)=>t.destination === p1)) {
                continue;
            }
            const pos2 = p2.getPosition();
            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {
                continue;
            }
            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);
            if (distance > optDistance) {
                continue;
            }
            const opacityLine = (1 - distance / optDistance) * optOpacity;
            this._setColor(p1);
            p1.links.push({
                destination: p2,
                opacity: opacityLine
            });
        }
    }
    isEnabled(particle) {
        return !!particle.options.links?.enable;
    }
    loadParticlesOptions(options, ...sources) {
        if (!options.links) {
            options.links = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Options$2f$Classes$2f$Links$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Links"]();
        }
        for (const source of sources){
            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);
        }
    }
    reset() {}
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/interaction.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadLinksInteraction": (()=>loadLinksInteraction)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Linker$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-links/esm/Linker.js [app-client] (ecmascript)");
;
async function loadLinksInteraction(engine, refresh = true) {
    await engine.addInteractor("particlesLinks", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Linker$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Linker"](container), refresh);
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/Utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "drawLinkLine": (()=>drawLinkLine),
    "drawLinkTriangle": (()=>drawLinkTriangle),
    "getLinkKey": (()=>getLinkKey),
    "setLinkFrequency": (()=>setLinkFrequency)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
;
function drawLinkLine(params) {
    let drawn = false;
    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(begin, end) <= maxDistance) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawLine"])(context, begin, end);
        drawn = true;
    } else if (links.warp) {
        let pi1;
        let pi2;
        const endNE = {
            x: end.x - canvasSize.width,
            y: end.y
        };
        const d1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(begin, endNE);
        if (d1.distance <= maxDistance) {
            const yi = begin.y - d1.dy / d1.dx * begin.x;
            pi1 = {
                x: 0,
                y: yi
            };
            pi2 = {
                x: canvasSize.width,
                y: yi
            };
        } else {
            const endSW = {
                x: end.x,
                y: end.y - canvasSize.height
            };
            const d2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(begin, endSW);
            if (d2.distance <= maxDistance) {
                const yi = begin.y - d2.dy / d2.dx * begin.x;
                const xi = -yi / (d2.dy / d2.dx);
                pi1 = {
                    x: xi,
                    y: 0
                };
                pi2 = {
                    x: xi,
                    y: canvasSize.height
                };
            } else {
                const endSE = {
                    x: end.x - canvasSize.width,
                    y: end.y - canvasSize.height
                };
                const d3 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(begin, endSE);
                if (d3.distance <= maxDistance) {
                    const yi = begin.y - d3.dy / d3.dx * begin.x;
                    const xi = -yi / (d3.dy / d3.dx);
                    pi1 = {
                        x: xi,
                        y: yi
                    };
                    pi2 = {
                        x: pi1.x + canvasSize.width,
                        y: pi1.y + canvasSize.height
                    };
                }
            }
        }
        if (pi1 && pi2) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawLine"])(context, begin, pi1);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawLine"])(context, end, pi2);
            drawn = true;
        }
    }
    if (!drawn) {
        return;
    }
    context.lineWidth = width;
    if (backgroundMask.enable) {
        context.globalCompositeOperation = backgroundMask.composite;
    }
    context.strokeStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromRgb"])(colorLine, opacity);
    const { shadow } = links;
    if (shadow.enable) {
        const shadowColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToRgb"])(shadow.color);
        if (shadowColor) {
            context.shadowBlur = shadow.blur;
            context.shadowColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromRgb"])(shadowColor);
        }
    }
    context.stroke();
}
function drawLinkTriangle(params) {
    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawTriangle"])(context, pos1, pos2, pos3);
    if (backgroundMask.enable) {
        context.globalCompositeOperation = backgroundMask.composite;
    }
    context.fillStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromRgb"])(colorTriangle, opacityTriangle);
    context.fill();
}
function getLinkKey(ids) {
    ids.sort((a, b)=>a - b);
    return ids.join("_");
}
function setLinkFrequency(particles, dictionary) {
    const key = getLinkKey(particles.map((t)=>t.id));
    let res = dictionary.get(key);
    if (res === undefined) {
        res = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])();
        dictionary.set(key, res);
    }
    return res;
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "LinkInstance": (()=>LinkInstance)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-links/esm/Utils.js [app-client] (ecmascript)");
;
;
class LinkInstance {
    constructor(container){
        this.container = container;
        this._drawLinkLine = (p1, link)=>{
            const p1LinksOptions = p1.options.links;
            if (!p1LinksOptions?.enable) {
                return;
            }
            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();
            let opacity = link.opacity;
            container.canvas.draw((ctx)=>{
                let colorLine;
                const twinkle = p1.options.twinkle?.lines;
                if (twinkle?.enable) {
                    const twinkleFreq = twinkle.frequency, twinkleRgb = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToRgb"])(twinkle.color), twinkling = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() < twinkleFreq;
                    if (twinkling && twinkleRgb) {
                        colorLine = twinkleRgb;
                        opacity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(twinkle.opacity);
                    }
                }
                if (!colorLine) {
                    const linkColor = p1LinksOptions.id !== undefined ? container.particles.linksColors.get(p1LinksOptions.id) : container.particles.linksColor;
                    colorLine = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLinkColor"])(p1, p2, linkColor);
                }
                if (!colorLine) {
                    return;
                }
                const width = p1.retina.linksWidth ?? 0, maxDistance = p1.retina.linksDistance ?? 0, { backgroundMask } = options;
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawLinkLine"])({
                    context: ctx,
                    width,
                    begin: pos1,
                    end: pos2,
                    maxDistance,
                    canvasSize: container.canvas.size,
                    links: p1LinksOptions,
                    backgroundMask: backgroundMask,
                    colorLine,
                    opacity
                });
            });
        };
        this._drawLinkTriangle = (p1, link1, link2)=>{
            const linksOptions = p1.options.links;
            if (!linksOptions?.enable) {
                return;
            }
            const triangleOptions = linksOptions.triangles;
            if (!triangleOptions.enable) {
                return;
            }
            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) / 2;
            if (opacityTriangle <= 0) {
                return;
            }
            container.canvas.draw((ctx)=>{
                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? 0;
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(pos1, pos2) > linksDistance || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(pos3, pos2) > linksDistance || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(pos3, pos1) > linksDistance) {
                    return;
                }
                let colorTriangle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToRgb"])(triangleOptions.color);
                if (!colorTriangle) {
                    const linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;
                    colorTriangle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLinkColor"])(p1, p2, linkColor);
                }
                if (!colorTriangle) {
                    return;
                }
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawLinkTriangle"])({
                    context: ctx,
                    pos1,
                    pos2,
                    pos3,
                    backgroundMask: options.backgroundMask,
                    colorTriangle,
                    opacityTriangle
                });
            });
        };
        this._drawTriangles = (options, p1, link, p1Links)=>{
            const p2 = link.destination;
            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {
                return;
            }
            const vertices = p2.links?.filter((t)=>{
                const linkFreq = this._getLinkFrequency(p2, t.destination);
                return p2.options.links && linkFreq <= p2.options.links.frequency && p1Links.findIndex((l)=>l.destination === t.destination) >= 0;
            });
            if (!vertices?.length) {
                return;
            }
            for (const vertex of vertices){
                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);
                if (triangleFreq > options.links.triangles.frequency) {
                    continue;
                }
                this._drawLinkTriangle(p1, link, vertex);
            }
        };
        this._getLinkFrequency = (p1, p2)=>{
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setLinkFrequency"])([
                p1,
                p2
            ], this._freqs.links);
        };
        this._getTriangleFrequency = (p1, p2, p3)=>{
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setLinkFrequency"])([
                p1,
                p2,
                p3
            ], this._freqs.triangles);
        };
        this._freqs = {
            links: new Map(),
            triangles: new Map()
        };
    }
    drawParticle(context, particle) {
        const { links, options } = particle;
        if (!links || links.length <= 0) {
            return;
        }
        const p1Links = links.filter((l)=>options.links && this._getLinkFrequency(particle, l.destination) <= options.links.frequency);
        for (const link of p1Links){
            this._drawTriangles(options, particle, link, p1Links);
            if (link.opacity > 0 && (particle.retina.linksWidth ?? 0) > 0) {
                this._drawLinkLine(particle, link);
            }
        }
    }
    async init() {
        this._freqs.links = new Map();
        this._freqs.triangles = new Map();
    }
    particleCreated(particle) {
        particle.links = [];
        if (!particle.options.links) {
            return;
        }
        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;
        retina.linksDistance = distance * ratio;
        retina.linksWidth = width * ratio;
    }
    particleDestroyed(particle) {
        particle.links = [];
    }
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/plugin.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadLinksPlugin": (()=>loadLinksPlugin)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$LinkInstance$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js [app-client] (ecmascript)");
;
class LinksPlugin {
    constructor(){
        this.id = "links";
    }
    getPlugin(container) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$LinkInstance$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LinkInstance"](container);
    }
    loadOptions() {}
    needsPlugin() {
        return true;
    }
}
async function loadLinksPlugin(engine, refresh = true) {
    const plugin = new LinksPlugin();
    await engine.addPlugin(plugin, refresh);
}
}}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadParticlesLinksInteraction": (()=>loadParticlesLinksInteraction)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$interaction$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-links/esm/interaction.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$plugin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-links/esm/plugin.js [app-client] (ecmascript)");
;
;
async function loadParticlesLinksInteraction(engine, refresh = true) {
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$interaction$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadLinksInteraction"])(engine, refresh);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$plugin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadLinksPlugin"])(engine, refresh);
}
;
;
;
;
;
;
}}),
"[project]/node_modules/tsparticles-plugin-easing-quad/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadEasingQuadPlugin": (()=>loadEasingQuadPlugin)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
async function loadEasingQuadPlugin() {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEasing"])("ease-in-quad", (value)=>value ** 2);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEasing"])("ease-out-quad", (value)=>1 - (1 - value) ** 2);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEasing"])("ease-in-out-quad", (value)=>value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2);
}
}}),
"[project]/node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "InterlaceOffsets": (()=>InterlaceOffsets),
    "InterlaceSteps": (()=>InterlaceSteps)
});
const InterlaceOffsets = [
    0,
    4,
    2,
    1
];
const InterlaceSteps = [
    8,
    8,
    4,
    2
];
}}),
"[project]/node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ByteStream": (()=>ByteStream)
});
class ByteStream {
    constructor(bytes){
        this.pos = 0;
        this.data = new Uint8ClampedArray(bytes);
    }
    getString(count) {
        const slice = this.data.slice(this.pos, this.pos + count);
        this.pos += slice.length;
        return slice.reduce((acc, curr)=>acc + String.fromCharCode(curr), "");
    }
    nextByte() {
        return this.data[this.pos++];
    }
    nextTwoBytes() {
        this.pos += 2;
        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);
    }
    readSubBlocks() {
        let blockString = "", size = 0;
        do {
            size = this.data[this.pos++];
            for(let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])){}
        }while (size !== 0)
        return blockString;
    }
    readSubBlocksBin() {
        let size = 0, len = 0;
        for(let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1){
            len += size;
        }
        const blockData = new Uint8Array(len);
        for(let i = 0; (size = this.data[this.pos++]) !== 0;){
            for(let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]){}
        }
        return blockData;
    }
    skipSubBlocks() {
        for(; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1){}
        this.pos++;
    }
}
}}),
"[project]/node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "decodeGIF": (()=>decodeGIF),
    "getGIFLoopAmount": (()=>getGIFLoopAmount)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$ByteStream$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js [app-client] (ecmascript)");
;
;
function parseColorTable(byteStream, count) {
    const colors = [];
    for(let i = 0; i < count; i++){
        colors.push({
            r: byteStream.data[byteStream.pos],
            g: byteStream.data[byteStream.pos + 1],
            b: byteStream.data[byteStream.pos + 2]
        });
        byteStream.pos += 3;
    }
    return colors;
}
async function parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {
    switch(byteStream.nextByte()){
        case 249:
            {
                const frame = gif.frames[getFrameIndex(false)];
                byteStream.pos++;
                const packedByte = byteStream.nextByte();
                frame.GCreserved = (packedByte & 0xe0) >>> 5;
                frame.disposalMethod = (packedByte & 0x1c) >>> 2;
                frame.userInputDelayFlag = (packedByte & 2) === 2;
                const transparencyFlag = (packedByte & 1) === 1;
                frame.delayTime = byteStream.nextTwoBytes() * 0xa;
                const transparencyIndex = byteStream.nextByte();
                if (transparencyFlag) {
                    getTransparencyIndex(transparencyIndex);
                }
                byteStream.pos++;
                break;
            }
        case 255:
            {
                byteStream.pos++;
                const applicationExtension = {
                    identifier: byteStream.getString(8),
                    authenticationCode: byteStream.getString(3),
                    data: byteStream.readSubBlocksBin()
                };
                gif.applicationExtensions.push(applicationExtension);
                break;
            }
        case 254:
            {
                gif.comments.push([
                    getFrameIndex(false),
                    byteStream.readSubBlocks()
                ]);
                break;
            }
        case 1:
            {
                if (gif.globalColorTable.length === 0) {
                    throw new EvalError("plain text extension without global color table");
                }
                byteStream.pos++;
                gif.frames[getFrameIndex(false)].plainTextData = {
                    left: byteStream.nextTwoBytes(),
                    top: byteStream.nextTwoBytes(),
                    width: byteStream.nextTwoBytes(),
                    height: byteStream.nextTwoBytes(),
                    charSize: {
                        width: byteStream.nextTwoBytes(),
                        height: byteStream.nextTwoBytes()
                    },
                    foregroundColor: byteStream.nextByte(),
                    backgroundColor: byteStream.nextByte(),
                    text: byteStream.readSubBlocks()
                };
                break;
            }
        default:
            byteStream.skipSubBlocks();
            break;
    }
}
async function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {
    const frame = gif.frames[getFrameIndex(true)];
    frame.left = byteStream.nextTwoBytes();
    frame.top = byteStream.nextTwoBytes();
    frame.width = byteStream.nextTwoBytes();
    frame.height = byteStream.nextTwoBytes();
    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;
    frame.sortFlag = (packedByte & 0x20) === 0x20;
    frame.reserved = (packedByte & 0x18) >>> 3;
    const localColorCount = 1 << (packedByte & 7) + 1;
    if (localColorTableFlag) {
        frame.localColorTable = parseColorTable(byteStream, localColorCount);
    }
    const getColor = (index)=>{
        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];
        return {
            r,
            g,
            b,
            a: index === getTransparencyIndex(null) ? avgAlpha ? ~~((r + g + b) / 3) : 0 : 255
        };
    };
    const image = (()=>{
        try {
            return new ImageData(frame.width, frame.height, {
                colorSpace: "srgb"
            });
        } catch (error) {
            if (error instanceof DOMException && error.name === "IndexSizeError") {
                return null;
            }
            throw error;
        }
    })();
    if (image == null) {
        throw new EvalError("GIF frame size is to large");
    }
    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;
    const readBits = (pos, len)=>{
        const bytePos = pos >>> 3, bitPos = pos & 7;
        return (imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16) & (1 << len) - 1 << bitPos) >>> bitPos;
    };
    if (interlacedFlag) {
        for(let code = 0, size = minCodeSize + 1, pos = 0, dic = [
            [
                0
            ]
        ], pass = 0; pass < 4; pass++){
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InterlaceOffsets"][pass] < frame.height) {
                for(let pixelPos = 0, lineIndex = 0;;){
                    const last = code;
                    code = readBits(pos, size);
                    pos += size + 1;
                    if (code === clearCode) {
                        size = minCodeSize + 1;
                        dic.length = clearCode + 2;
                        for(let i = 0; i < dic.length; i++){
                            dic[i] = i < clearCode ? [
                                i
                            ] : [];
                        }
                    } else {
                        if (code >= dic.length) {
                            dic.push(dic[last].concat(dic[last][0]));
                        } else if (last !== clearCode) {
                            dic.push(dic[last].concat(dic[code][0]));
                        }
                        for(let i = 0; i < dic[code].length; i++){
                            const { r, g, b, a } = getColor(dic[code][i]);
                            image.data.set([
                                r,
                                g,
                                b,
                                a
                            ], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InterlaceOffsets"][pass] * frame.width + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InterlaceSteps"][pass] * lineIndex + pixelPos % (frame.width * 4));
                            pixelPos += 4;
                        }
                        if (dic.length === 1 << size && size < 0xc) {
                            size++;
                        }
                    }
                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {
                        lineIndex++;
                        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InterlaceOffsets"][pass] + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InterlaceSteps"][pass] * lineIndex >= frame.height) {
                            break;
                        }
                    }
                }
            }
            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, {
                x: frame.left,
                y: frame.top
            }, {
                width: gif.width,
                height: gif.height
            });
        }
        frame.image = image;
        frame.bitmap = await createImageBitmap(image);
    } else {
        for(let code = 0, size = minCodeSize + 1, pos = 0, dic = [
            [
                0
            ]
        ], pixelPos = -4;;){
            const last = code;
            code = readBits(pos, size);
            pos += size;
            if (code === clearCode) {
                size = minCodeSize + 1;
                dic.length = clearCode + 2;
                for(let i = 0; i < dic.length; i++){
                    dic[i] = i < clearCode ? [
                        i
                    ] : [];
                }
            } else {
                if (code === clearCode + 1) {
                    break;
                }
                if (code >= dic.length) {
                    dic.push(dic[last].concat(dic[last][0]));
                } else if (last !== clearCode) {
                    dic.push(dic[last].concat(dic[code][0]));
                }
                for(let i = 0; i < dic[code].length; i++){
                    const { r, g, b, a } = getColor(dic[code][i]);
                    image.data.set([
                        r,
                        g,
                        b,
                        a
                    ], pixelPos += 4);
                }
                if (dic.length >= 1 << size && size < 0xc) {
                    size++;
                }
            }
        }
        frame.image = image;
        frame.bitmap = await createImageBitmap(image);
        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, {
            x: frame.left,
            y: frame.top
        }, {
            width: gif.width,
            height: gif.height
        });
    }
}
async function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {
    switch(byteStream.nextByte()){
        case 59:
            return true;
        case 44:
            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);
            break;
        case 33:
            await parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);
            break;
        default:
            throw new EvalError("undefined block found");
    }
    return false;
}
function getGIFLoopAmount(gif) {
    for (const extension of gif.applicationExtensions){
        if (extension.identifier + extension.authenticationCode !== "NETSCAPE2.0") {
            continue;
        }
        return extension.data[1] + (extension.data[2] << 8);
    }
    return NaN;
}
async function decodeGIF(gifURL, progressCallback, avgAlpha) {
    if (!avgAlpha) avgAlpha = false;
    const res = await fetch(gifURL);
    if (!res.ok && res.status === 404) {
        throw new EvalError("file not found");
    }
    const buffer = await res.arrayBuffer();
    const gif = {
        width: 0,
        height: 0,
        totalTime: 0,
        colorRes: 0,
        pixelAspectRatio: 0,
        frames: [],
        sortFlag: false,
        globalColorTable: [],
        backgroundImage: new ImageData(1, 1, {
            colorSpace: "srgb"
        }),
        comments: [],
        applicationExtensions: []
    }, byteStream = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$ByteStream$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ByteStream"](new Uint8ClampedArray(buffer));
    if (byteStream.getString(6) !== "GIF89a") {
        throw new Error("not a supported GIF file");
    }
    gif.width = byteStream.nextTwoBytes();
    gif.height = byteStream.nextTwoBytes();
    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;
    gif.colorRes = (packedByte & 0x70) >>> 4;
    gif.sortFlag = (packedByte & 8) === 8;
    const globalColorCount = 1 << (packedByte & 7) + 1, backgroundColorIndex = byteStream.nextByte();
    gif.pixelAspectRatio = byteStream.nextByte();
    if (gif.pixelAspectRatio !== 0) {
        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;
    }
    if (globalColorTableFlag) {
        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);
    }
    const backgroundImage = (()=>{
        try {
            return new ImageData(gif.width, gif.height, {
                colorSpace: "srgb"
            });
        } catch (error) {
            if (error instanceof DOMException && error.name === "IndexSizeError") {
                return null;
            }
            throw error;
        }
    })();
    if (backgroundImage == null) {
        throw new Error("GIF frame size is to large");
    }
    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];
    backgroundImage.data.set(globalColorTableFlag ? [
        r,
        g,
        b,
        255
    ] : [
        0,
        0,
        0,
        0
    ]);
    for(let i = 4; i < backgroundImage.data.length; i *= 2){
        backgroundImage.data.copyWithin(i, 0, i);
    }
    gif.backgroundImage = backgroundImage;
    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;
    const getframeIndex = (increment)=>{
        if (increment) {
            incrementFrameIndex = true;
        }
        return frameIndex;
    };
    const getTransparencyIndex = (newValue)=>{
        if (newValue != null) {
            transparencyIndex = newValue;
        }
        return transparencyIndex;
    };
    try {
        do {
            if (incrementFrameIndex) {
                gif.frames.push({
                    left: 0,
                    top: 0,
                    width: 0,
                    height: 0,
                    disposalMethod: 0,
                    image: new ImageData(1, 1, {
                        colorSpace: "srgb"
                    }),
                    plainTextData: null,
                    userInputDelayFlag: false,
                    delayTime: 0,
                    sortFlag: false,
                    localColorTable: [],
                    reserved: 0,
                    GCreserved: 0
                });
                frameIndex++;
                transparencyIndex = -1;
                incrementFrameIndex = false;
            }
        }while (!await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback))
        gif.frames.length--;
        for (const frame of gif.frames){
            if (frame.userInputDelayFlag && frame.delayTime === 0) {
                gif.totalTime = Infinity;
                break;
            }
            gif.totalTime += frame.delayTime;
        }
        return gif;
    } catch (error) {
        if (error instanceof EvalError) {
            throw new Error(`error while parsing frame ${frameIndex} "${error.message}"`);
        }
        throw error;
    }
}
}}),
"[project]/node_modules/tsparticles-shape-image/esm/Utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "downloadSvgImage": (()=>downloadSvgImage),
    "loadGifImage": (()=>loadGifImage),
    "loadImage": (()=>loadImage),
    "replaceImageColor": (()=>replaceImageColor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js [app-client] (ecmascript)");
;
;
const currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d.]+%?\))|currentcolor/gi;
function replaceColorSvg(imageShape, color, opacity) {
    const { svgData } = imageShape;
    if (!svgData) {
        return "";
    }
    const colorStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromHsl"])(color, opacity);
    if (svgData.includes("fill")) {
        return svgData.replace(currentColorRegex, ()=>colorStyle);
    }
    const preFillIndex = svgData.indexOf(">");
    return `${svgData.substring(0, preFillIndex)} fill="${colorStyle}"${svgData.substring(preFillIndex)}`;
}
async function loadImage(image) {
    return new Promise((resolve)=>{
        image.loading = true;
        const img = new Image();
        image.element = img;
        img.addEventListener("load", ()=>{
            image.loading = false;
            resolve();
        });
        img.addEventListener("error", ()=>{
            image.element = undefined;
            image.error = true;
            image.loading = false;
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLogger"])().error(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorPrefix"]} loading image: ${image.source}`);
            resolve();
        });
        img.src = image.source;
    });
}
async function loadGifImage(image) {
    if (image.type !== "gif") {
        await loadImage(image);
        return;
    }
    image.loading = true;
    try {
        image.gifData = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeGIF"])(image.source);
        image.gifLoopCount = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGIFLoopAmount"])(image.gifData) ?? 0;
        if (image.gifLoopCount === 0) {
            image.gifLoopCount = Infinity;
        }
    } catch  {
        image.error = true;
    }
    image.loading = false;
}
async function downloadSvgImage(image) {
    if (image.type !== "svg") {
        await loadImage(image);
        return;
    }
    image.loading = true;
    const response = await fetch(image.source);
    if (!response.ok) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLogger"])().error(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorPrefix"]} Image not found`);
        image.error = true;
    } else {
        image.svgData = await response.text();
    }
    image.loading = false;
}
function replaceImageColor(image, imageData, color, particle) {
    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {
        color,
        gif: imageData.gif,
        data: {
            ...image,
            svgData: svgColoredData
        },
        loaded: false,
        ratio: imageData.width / imageData.height,
        replaceColor: imageData.replaceColor ?? imageData.replace_color,
        source: imageData.src
    };
    return new Promise((resolve)=>{
        const svg = new Blob([
            svgColoredData
        ], {
            type: "image/svg+xml"
        }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();
        img.addEventListener("load", ()=>{
            imageRes.loaded = true;
            imageRes.element = img;
            resolve(imageRes);
            domUrl.revokeObjectURL(url);
        });
        img.addEventListener("error", async ()=>{
            domUrl.revokeObjectURL(url);
            const img2 = {
                ...image,
                error: false,
                loading: true
            };
            await loadImage(img2);
            imageRes.loaded = true;
            imageRes.element = img2.element;
            resolve(imageRes);
        });
        img.src = url;
    });
}
}}),
"[project]/node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Preload": (()=>Preload)
});
class Preload {
    constructor(){
        this.src = "";
        this.gif = false;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.gif !== undefined) {
            this.gif = data.gif;
        }
        if (data.height !== undefined) {
            this.height = data.height;
        }
        if (data.name !== undefined) {
            this.name = data.name;
        }
        if (data.replaceColor !== undefined) {
            this.replaceColor = data.replaceColor;
        }
        if (data.src !== undefined) {
            this.src = data.src;
        }
        if (data.width !== undefined) {
            this.width = data.width;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-shape-image/esm/ImagePreloader.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ImagePreloaderPlugin": (()=>ImagePreloaderPlugin)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$Options$2f$Classes$2f$Preload$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js [app-client] (ecmascript)");
;
class ImagePreloaderPlugin {
    constructor(engine){
        this.id = "imagePreloader";
        this._engine = engine;
    }
    getPlugin() {
        return {};
    }
    loadOptions(options, source) {
        if (!source || !source.preload) {
            return;
        }
        if (!options.preload) {
            options.preload = [];
        }
        const preloadOptions = options.preload;
        for (const item of source.preload){
            const existing = preloadOptions.find((t)=>t.name === item.name || t.src === item.src);
            if (existing) {
                existing.load(item);
            } else {
                const preload = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$Options$2f$Classes$2f$Preload$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Preload"]();
                preload.load(item);
                preloadOptions.push(preload);
            }
        }
    }
    needsPlugin() {
        return true;
    }
}
}}),
"[project]/node_modules/tsparticles-shape-image/esm/ImageDrawer.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ImageDrawer": (()=>ImageDrawer)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-image/esm/Utils.js [app-client] (ecmascript)");
;
;
class ImageDrawer {
    constructor(engine){
        this.loadImageShape = async (imageShape)=>{
            if (!this._engine.loadImage) {
                throw new Error(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorPrefix"]} image shape not initialized`);
            }
            await this._engine.loadImage({
                gif: imageShape.gif,
                name: imageShape.name,
                replaceColor: imageShape.replaceColor ?? imageShape.replace_color ?? false,
                src: imageShape.src
            });
        };
        this._engine = engine;
    }
    addImage(image) {
        if (!this._engine.images) {
            this._engine.images = [];
        }
        this._engine.images.push(image);
    }
    draw(context, particle, radius, opacity, delta) {
        const image = particle.image, element = image?.element;
        if (!image) {
            return;
        }
        context.globalAlpha = opacity;
        if (image.gif && image.gifData) {
            const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext("2d");
            if (!offscreenContext) {
                throw new Error("could not create offscreen canvas context");
            }
            offscreenContext.imageSmoothingQuality = "low";
            offscreenContext.imageSmoothingEnabled = false;
            offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);
            if (particle.gifLoopCount === undefined) {
                particle.gifLoopCount = image.gifLoopCount ?? 0;
            }
            let frameIndex = particle.gifFrame ?? 0;
            const pos = {
                x: -image.gifData.width * 0.5,
                y: -image.gifData.height * 0.5
            }, frame = image.gifData.frames[frameIndex];
            if (particle.gifTime === undefined) {
                particle.gifTime = 0;
            }
            if (!frame.bitmap) {
                return;
            }
            context.scale(radius / image.gifData.width, radius / image.gifData.height);
            switch(frame.disposalMethod){
                case 4:
                case 5:
                case 6:
                case 7:
                case 0:
                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);
                    context.drawImage(offscreenCanvas, pos.x, pos.y);
                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);
                    break;
                case 1:
                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);
                    context.drawImage(offscreenCanvas, pos.x, pos.y);
                    break;
                case 2:
                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);
                    context.drawImage(offscreenCanvas, pos.x, pos.y);
                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);
                    if (image.gifData.globalColorTable.length === 0) {
                        offscreenContext.putImageData(image.gifData.frames[0].image, pos.x + frame.left, pos.y + frame.top);
                    } else {
                        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);
                    }
                    break;
                case 3:
                    {
                        const previousImageData = offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height);
                        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);
                        context.drawImage(offscreenCanvas, pos.x, pos.y);
                        offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);
                        offscreenContext.putImageData(previousImageData, 0, 0);
                    }
                    break;
            }
            particle.gifTime += delta.value;
            if (particle.gifTime > frame.delayTime) {
                particle.gifTime -= frame.delayTime;
                if (++frameIndex >= image.gifData.frames.length) {
                    if (--particle.gifLoopCount <= 0) {
                        return;
                    }
                    frameIndex = 0;
                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);
                }
                particle.gifFrame = frameIndex;
            }
            context.scale(image.gifData.width / radius, image.gifData.height / radius);
        } else if (element) {
            const ratio = image.ratio, pos = {
                x: -radius,
                y: -radius
            };
            context.drawImage(element, pos.x, pos.y, radius * 2, radius * 2 / ratio);
        }
        context.globalAlpha = 1;
    }
    getSidesCount() {
        return 12;
    }
    async init(container) {
        const options = container.actualOptions;
        if (!options.preload || !this._engine.loadImage) {
            return;
        }
        for (const imageData of options.preload){
            await this._engine.loadImage(imageData);
        }
    }
    loadShape(particle) {
        if (particle.shape !== "image" && particle.shape !== "images") {
            return;
        }
        if (!this._engine.images) {
            this._engine.images = [];
        }
        const imageData = particle.shapeData, image = this._engine.images.find((t)=>t.name === imageData.name || t.source === imageData.src);
        if (!image) {
            this.loadImageShape(imageData).then(()=>{
                this.loadShape(particle);
            });
        }
    }
    particleInit(container, particle) {
        if (particle.shape !== "image" && particle.shape !== "images") {
            return;
        }
        if (!this._engine.images) {
            this._engine.images = [];
        }
        const images = this._engine.images, imageData = particle.shapeData, color = particle.getFillColor(), image = images.find((t)=>t.name === imageData.name || t.source === imageData.src);
        if (!image) {
            return;
        }
        const replaceColor = imageData.replaceColor ?? imageData.replace_color ?? image.replaceColor;
        if (image.loading) {
            setTimeout(()=>{
                this.particleInit(container, particle);
            });
            return;
        }
        (async ()=>{
            let imageRes;
            if (image.svgData && color) {
                imageRes = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["replaceImageColor"])(image, imageData, color, particle);
            } else {
                imageRes = {
                    color,
                    data: image,
                    element: image.element,
                    gif: image.gif,
                    gifData: image.gifData,
                    gifLoopCount: image.gifLoopCount,
                    loaded: true,
                    ratio: imageData.width && imageData.height ? imageData.width / imageData.height : image.ratio ?? 1,
                    replaceColor: replaceColor,
                    source: imageData.src
                };
            }
            if (!imageRes.ratio) {
                imageRes.ratio = 1;
            }
            const fill = imageData.fill ?? particle.fill, close = imageData.close ?? particle.close, imageShape = {
                image: imageRes,
                fill,
                close
            };
            particle.image = imageShape.image;
            particle.fill = imageShape.fill;
            particle.close = imageShape.close;
        })();
    }
}
}}),
"[project]/node_modules/tsparticles-shape-image/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadImageShape": (()=>loadImageShape)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-image/esm/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$ImagePreloader$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-image/esm/ImagePreloader.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$ImageDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-image/esm/ImageDrawer.js [app-client] (ecmascript)");
;
;
;
;
function addLoadImageToEngine(engine) {
    if (engine.loadImage) {
        return;
    }
    engine.loadImage = async (data)=>{
        if (!data.name && !data.src) {
            throw new Error(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorPrefix"]} no image source provided`);
        }
        if (!engine.images) {
            engine.images = [];
        }
        if (engine.images.find((t)=>t.name === data.name || t.source === data.src)) {
            return;
        }
        try {
            const image = {
                gif: data.gif ?? false,
                name: data.name ?? data.src,
                source: data.src,
                type: data.src.substring(data.src.length - 3),
                error: false,
                loading: true,
                replaceColor: data.replaceColor,
                ratio: data.width && data.height ? data.width / data.height : undefined
            };
            engine.images.push(image);
            const imageFunc = data.gif ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadGifImage"] : data.replaceColor ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["downloadSvgImage"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadImage"];
            await imageFunc(image);
        } catch  {
            throw new Error(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorPrefix"]} ${data.name ?? data.src} not found`);
        }
    };
}
async function loadImageShape(engine, refresh = true) {
    addLoadImageToEngine(engine);
    const preloader = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$ImagePreloader$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ImagePreloaderPlugin"](engine);
    await engine.addPlugin(preloader, refresh);
    await engine.addShape([
        "image",
        "images"
    ], new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$ImageDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ImageDrawer"](engine), refresh);
}
}}),
"[project]/node_modules/tsparticles-shape-line/esm/LineDrawer.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "LineDrawer": (()=>LineDrawer)
});
class LineDrawer {
    draw(context, particle, radius) {
        const shapeData = particle.shapeData;
        context.moveTo(-radius / 2, 0);
        context.lineTo(radius / 2, 0);
        context.lineCap = shapeData?.cap ?? "butt";
    }
    getSidesCount() {
        return 1;
    }
}
}}),
"[project]/node_modules/tsparticles-shape-line/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadLineShape": (()=>loadLineShape)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$line$2f$esm$2f$LineDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-line/esm/LineDrawer.js [app-client] (ecmascript)");
;
async function loadLineShape(engine, refresh = true) {
    await engine.addShape("line", new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$line$2f$esm$2f$LineDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LineDrawer"](), refresh);
}
}}),
"[project]/node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "PolygonDrawerBase": (()=>PolygonDrawerBase)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class PolygonDrawerBase {
    draw(context, particle, radius) {
        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = 180 * (decimalSides - 2) / decimalSides, interiorAngle = Math.PI - Math.PI * interiorAngleDegrees / 180;
        if (!context) {
            return;
        }
        context.beginPath();
        context.translate(start.x, start.y);
        context.moveTo(0, 0);
        for(let i = 0; i < sideCount; i++){
            context.lineTo(side.length, 0);
            context.translate(side.length, 0);
            context.rotate(interiorAngle);
        }
    }
    getSidesCount(particle) {
        const polygon = particle.shapeData;
        return Math.round((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(polygon?.sides ?? polygon?.nb_sides ?? 5));
    }
}
}}),
"[project]/node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "PolygonDrawer": (()=>PolygonDrawer)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$PolygonDrawerBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js [app-client] (ecmascript)");
;
class PolygonDrawer extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$PolygonDrawerBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PolygonDrawerBase"] {
    getCenter(particle, radius) {
        return {
            x: -radius / (particle.sides / 3.5),
            y: -radius / (2.66 / 3.5)
        };
    }
    getSidesData(particle, radius) {
        const sides = particle.sides;
        return {
            count: {
                denominator: 1,
                numerator: sides
            },
            length: radius * 2.66 / (sides / 3)
        };
    }
}
}}),
"[project]/node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "TriangleDrawer": (()=>TriangleDrawer)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$PolygonDrawerBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js [app-client] (ecmascript)");
;
class TriangleDrawer extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$PolygonDrawerBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PolygonDrawerBase"] {
    getCenter(particle, radius) {
        return {
            x: -radius,
            y: radius / 1.66
        };
    }
    getSidesCount() {
        return 3;
    }
    getSidesData(particle, radius) {
        return {
            count: {
                denominator: 2,
                numerator: 3
            },
            length: radius * 2
        };
    }
}
}}),
"[project]/node_modules/tsparticles-shape-polygon/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadGenericPolygonShape": (()=>loadGenericPolygonShape),
    "loadPolygonShape": (()=>loadPolygonShape),
    "loadTriangleShape": (()=>loadTriangleShape)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$PolygonDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$TriangleDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js [app-client] (ecmascript)");
;
;
async function loadGenericPolygonShape(engine, refresh = true) {
    await engine.addShape("polygon", new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$PolygonDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PolygonDrawer"](), refresh);
}
async function loadTriangleShape(engine, refresh = true) {
    await engine.addShape("triangle", new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$TriangleDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TriangleDrawer"](), refresh);
}
async function loadPolygonShape(engine, refresh = true) {
    await loadGenericPolygonShape(engine, refresh);
    await loadTriangleShape(engine, refresh);
}
}}),
"[project]/node_modules/tsparticles-shape-square/esm/SquareDrawer.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SquareDrawer": (()=>SquareDrawer)
});
const fixFactor = Math.sqrt(2);
class SquareDrawer {
    draw(context, particle, radius) {
        const fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * 2;
        context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);
    }
    getSidesCount() {
        return 4;
    }
}
}}),
"[project]/node_modules/tsparticles-shape-square/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadSquareShape": (()=>loadSquareShape)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$square$2f$esm$2f$SquareDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-square/esm/SquareDrawer.js [app-client] (ecmascript)");
;
async function loadSquareShape(engine, refresh = true) {
    await engine.addShape([
        "edge",
        "square"
    ], new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$square$2f$esm$2f$SquareDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SquareDrawer"](), refresh);
}
}}),
"[project]/node_modules/tsparticles-shape-star/esm/StarDrawer.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "StarDrawer": (()=>StarDrawer)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class StarDrawer {
    draw(context, particle, radius) {
        const sides = particle.sides, inset = particle.starInset ?? 2;
        context.moveTo(0, 0 - radius);
        for(let i = 0; i < sides; i++){
            context.rotate(Math.PI / sides);
            context.lineTo(0, 0 - radius * inset);
            context.rotate(Math.PI / sides);
            context.lineTo(0, 0 - radius);
        }
    }
    getSidesCount(particle) {
        const star = particle.shapeData;
        return Math.round((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(star?.sides ?? star?.nb_sides ?? 5));
    }
    particleInit(container, particle) {
        const star = particle.shapeData, inset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(star?.inset ?? 2);
        particle.starInset = inset;
    }
}
}}),
"[project]/node_modules/tsparticles-shape-star/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadStarShape": (()=>loadStarShape)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$star$2f$esm$2f$StarDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-star/esm/StarDrawer.js [app-client] (ecmascript)");
;
async function loadStarShape(engine, refresh = true) {
    await engine.addShape("star", new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$star$2f$esm$2f$StarDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StarDrawer"](), refresh);
}
}}),
"[project]/node_modules/tsparticles-shape-text/esm/TextDrawer.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "TextDrawer": (()=>TextDrawer),
    "validTypes": (()=>validTypes)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
const validTypes = [
    "text",
    "character",
    "char"
];
class TextDrawer {
    draw(context, particle, radius, opacity) {
        const character = particle.shapeData;
        if (character === undefined) {
            return;
        }
        const textData = character.value;
        if (textData === undefined) {
            return;
        }
        if (particle.text === undefined) {
            particle.text = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromSingleOrMultiple"])(textData, particle.randomIndexData);
        }
        const text = particle.text, style = character.style ?? "", weight = character.weight ?? "400", size = Math.round(radius) * 2, font = character.font ?? "Verdana", fill = particle.fill, offsetX = text.length * radius / 2;
        context.font = `${style} ${weight} ${size}px "${font}"`;
        const pos = {
            x: -offsetX,
            y: radius / 2
        };
        context.globalAlpha = opacity;
        if (fill) {
            context.fillText(text, pos.x, pos.y);
        } else {
            context.strokeText(text, pos.x, pos.y);
        }
        context.globalAlpha = 1;
    }
    getSidesCount() {
        return 12;
    }
    async init(container) {
        const options = container.actualOptions;
        if (validTypes.find((t)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])(t, options.particles.shape.type))) {
            const shapeOptions = validTypes.map((t)=>options.particles.shape.options[t]).find((t)=>!!t), promises = [];
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(shapeOptions, (shape)=>{
                promises.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadFont"])(shape.font, shape.weight));
            });
            await Promise.all(promises);
        }
    }
    particleInit(container, particle) {
        if (!particle.shape || !validTypes.includes(particle.shape)) {
            return;
        }
        const character = particle.shapeData;
        if (character === undefined) {
            return;
        }
        const textData = character.value;
        if (textData === undefined) {
            return;
        }
        particle.text = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromSingleOrMultiple"])(textData, particle.randomIndexData);
    }
}
}}),
"[project]/node_modules/tsparticles-shape-text/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadTextShape": (()=>loadTextShape)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$text$2f$esm$2f$TextDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-text/esm/TextDrawer.js [app-client] (ecmascript)");
;
async function loadTextShape(engine, refresh = true) {
    await engine.addShape(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$text$2f$esm$2f$TextDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validTypes"], new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$text$2f$esm$2f$TextDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TextDrawer"](), refresh);
}
}}),
"[project]/node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "LifeDelay": (()=>LifeDelay)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js [app-client] (ecmascript)");
;
class LifeDelay extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ValueWithRandom"] {
    constructor(){
        super();
        this.sync = false;
    }
    load(data) {
        if (!data) {
            return;
        }
        super.load(data);
        if (data.sync !== undefined) {
            this.sync = data.sync;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "LifeDuration": (()=>LifeDuration)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js [app-client] (ecmascript)");
;
class LifeDuration extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ValueWithRandom"] {
    constructor(){
        super();
        this.random.minimumValue = 0.0001;
        this.sync = false;
    }
    load(data) {
        if (!data) {
            return;
        }
        super.load(data);
        if (data.sync !== undefined) {
            this.sync = data.sync;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Life": (()=>Life)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$Options$2f$Classes$2f$LifeDelay$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$Options$2f$Classes$2f$LifeDuration$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js [app-client] (ecmascript)");
;
;
class Life {
    constructor(){
        this.count = 0;
        this.delay = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$Options$2f$Classes$2f$LifeDelay$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LifeDelay"]();
        this.duration = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$Options$2f$Classes$2f$LifeDuration$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LifeDuration"]();
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.count !== undefined) {
            this.count = data.count;
        }
        this.delay.load(data.delay);
        this.duration.load(data.duration);
    }
}
}}),
"[project]/node_modules/tsparticles-updater-life/esm/LifeUpdater.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "LifeUpdater": (()=>LifeUpdater)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$Options$2f$Classes$2f$Life$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js [app-client] (ecmascript)");
;
;
class LifeUpdater {
    constructor(container){
        this.container = container;
    }
    init(particle) {
        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;
        if (!lifeOptions) {
            return;
        }
        particle.life = {
            delay: container.retina.reduceFactor ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])()) / container.retina.reduceFactor * 1000 : 0,
            delayTime: 0,
            duration: container.retina.reduceFactor ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])()) / container.retina.reduceFactor * 1000 : 0,
            time: 0,
            count: lifeOptions.count
        };
        if (particle.life.duration <= 0) {
            particle.life.duration = -1;
        }
        if (particle.life.count <= 0) {
            particle.life.count = -1;
        }
        if (particle.life) {
            particle.spawning = particle.life.delay > 0;
        }
    }
    isEnabled(particle) {
        return !particle.destroyed;
    }
    loadOptions(options, ...sources) {
        if (!options.life) {
            options.life = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$Options$2f$Classes$2f$Life$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Life"]();
        }
        for (const source of sources){
            options.life.load(source?.life);
        }
    }
    update(particle, delta) {
        if (!this.isEnabled(particle) || !particle.life) {
            return;
        }
        const life = particle.life;
        let justSpawned = false;
        if (particle.spawning) {
            life.delayTime += delta.value;
            if (life.delayTime >= particle.life.delay) {
                justSpawned = true;
                particle.spawning = false;
                life.delayTime = 0;
                life.time = 0;
            } else {
                return;
            }
        }
        if (life.duration === -1) {
            return;
        }
        if (particle.spawning) {
            return;
        }
        if (justSpawned) {
            life.time = 0;
        } else {
            life.time += delta.value;
        }
        if (life.time < life.duration) {
            return;
        }
        life.time = 0;
        if (particle.life.count > 0) {
            particle.life.count--;
        }
        if (particle.life.count === 0) {
            particle.destroy();
            return;
        }
        const canvasSize = this.container.canvas.size, widthRange = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(0, canvasSize.width), heightRange = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(0, canvasSize.width);
        particle.position.x = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])(widthRange);
        particle.position.y = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])(heightRange);
        particle.spawning = true;
        life.delayTime = 0;
        life.time = 0;
        particle.reset();
        const lifeOptions = particle.options.life;
        if (lifeOptions) {
            life.delay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(lifeOptions.delay.value) * 1000;
            life.duration = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(lifeOptions.duration.value) * 1000;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-updater-life/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadLifeUpdater": (()=>loadLifeUpdater)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$LifeUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-life/esm/LifeUpdater.js [app-client] (ecmascript)");
;
async function loadLifeUpdater(engine, refresh = true) {
    await engine.addParticleUpdater("life", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$LifeUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LifeUpdater"](container), refresh);
}
}}),
"[project]/node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "RotateAnimation": (()=>RotateAnimation)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class RotateAnimation {
    constructor(){
        this.enable = false;
        this.speed = 0;
        this.decay = 0;
        this.sync = false;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.speed !== undefined) {
            this.speed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.speed);
        }
        if (data.decay !== undefined) {
            this.decay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.decay);
        }
        if (data.sync !== undefined) {
            this.sync = data.sync;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Rotate": (()=>Rotate)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$rotate$2f$esm$2f$Options$2f$Classes$2f$RotateAnimation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js [app-client] (ecmascript)");
;
;
class Rotate extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ValueWithRandom"] {
    constructor(){
        super();
        this.animation = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$rotate$2f$esm$2f$Options$2f$Classes$2f$RotateAnimation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RotateAnimation"]();
        this.direction = "clockwise";
        this.path = false;
        this.value = 0;
    }
    load(data) {
        if (!data) {
            return;
        }
        super.load(data);
        if (data.direction !== undefined) {
            this.direction = data.direction;
        }
        this.animation.load(data.animation);
        if (data.path !== undefined) {
            this.path = data.path;
        }
    }
}
}}),
"[project]/node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "RotateUpdater": (()=>RotateUpdater)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$rotate$2f$esm$2f$Options$2f$Classes$2f$Rotate$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js [app-client] (ecmascript)");
;
;
function updateRotate(particle, delta) {
    const rotate = particle.rotate, rotateOptions = particle.options.rotate;
    if (!rotate || !rotateOptions) {
        return;
    }
    const rotateAnimation = rotateOptions.animation, speed = (rotate.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = rotate.decay ?? 1;
    if (!rotateAnimation.enable) {
        return;
    }
    switch(rotate.status){
        case "increasing":
            rotate.value += speed;
            if (rotate.value > max) {
                rotate.value -= max;
            }
            break;
        case "decreasing":
        default:
            rotate.value -= speed;
            if (rotate.value < 0) {
                rotate.value += max;
            }
            break;
    }
    if (rotate.velocity && decay !== 1) {
        rotate.velocity *= decay;
    }
}
class RotateUpdater {
    constructor(container){
        this.container = container;
    }
    init(particle) {
        const rotateOptions = particle.options.rotate;
        if (!rotateOptions) {
            return;
        }
        particle.rotate = {
            enable: rotateOptions.animation.enable,
            value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(rotateOptions.value) * Math.PI / 180
        };
        particle.pathRotation = rotateOptions.path;
        let rotateDirection = rotateOptions.direction;
        if (rotateDirection === "random") {
            const index = Math.floor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * 2);
            rotateDirection = index > 0 ? "counter-clockwise" : "clockwise";
        }
        switch(rotateDirection){
            case "counter-clockwise":
            case "counterClockwise":
                particle.rotate.status = "decreasing";
                break;
            case "clockwise":
                particle.rotate.status = "increasing";
                break;
        }
        const rotateAnimation = rotateOptions.animation;
        if (rotateAnimation.enable) {
            particle.rotate.decay = 1 - (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(rotateAnimation.decay);
            particle.rotate.velocity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(rotateAnimation.speed) / 360 * this.container.retina.reduceFactor;
            if (!rotateAnimation.sync) {
                particle.rotate.velocity *= (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])();
            }
        }
        particle.rotation = particle.rotate.value;
    }
    isEnabled(particle) {
        const rotate = particle.options.rotate;
        if (!rotate) {
            return false;
        }
        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;
    }
    loadOptions(options, ...sources) {
        if (!options.rotate) {
            options.rotate = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$rotate$2f$esm$2f$Options$2f$Classes$2f$Rotate$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Rotate"]();
        }
        for (const source of sources){
            options.rotate.load(source?.rotate);
        }
    }
    update(particle, delta) {
        if (!this.isEnabled(particle)) {
            return;
        }
        updateRotate(particle, delta);
        particle.rotation = particle.rotate?.value ?? 0;
    }
}
}}),
"[project]/node_modules/tsparticles-updater-rotate/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadRotateUpdater": (()=>loadRotateUpdater)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$rotate$2f$esm$2f$RotateUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js [app-client] (ecmascript)");
;
async function loadRotateUpdater(engine, refresh = true) {
    await engine.addParticleUpdater("rotate", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$rotate$2f$esm$2f$RotateUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RotateUpdater"](container), refresh);
}
}}),
"[project]/node_modules/tsparticles-updater-stroke-color/esm/Utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "updateStrokeColor": (()=>updateStrokeColor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
function updateColorValue(delta, colorValue, valueAnimation, max, decrease) {
    if (!colorValue || !valueAnimation.enable || (colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0)) {
        return;
    }
    if (!colorValue.time) {
        colorValue.time = 0;
    }
    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {
        colorValue.time += delta.value;
    }
    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {
        return;
    }
    const offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;
    if (!decrease || colorValue.status === "increasing") {
        colorValue.value += velocity;
        if (colorValue.value > max) {
            if (!colorValue.loops) {
                colorValue.loops = 0;
            }
            colorValue.loops++;
            if (decrease) {
                colorValue.status = "decreasing";
                colorValue.value -= colorValue.value % max;
            }
        }
    } else {
        colorValue.value -= velocity;
        if (colorValue.value < 0) {
            if (!colorValue.loops) {
                colorValue.loops = 0;
            }
            colorValue.loops++;
            colorValue.status = "increasing";
            colorValue.value += colorValue.value;
        }
    }
    if (colorValue.velocity && decay !== 1) {
        colorValue.velocity *= decay;
    }
    if (colorValue.value > max) {
        colorValue.value %= max;
    }
}
function updateStrokeColor(particle, delta) {
    if (!particle.strokeColor || !particle.strokeAnimation) {
        return;
    }
    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;
    if (h) {
        updateColorValue(delta, h, hAnimation, 360, false);
    }
    if (s) {
        updateColorValue(delta, s, sAnimation, 100, true);
    }
    if (l) {
        updateColorValue(delta, l, lAnimation, 100, true);
    }
}
}}),
"[project]/node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "StrokeColorUpdater": (()=>StrokeColorUpdater)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$stroke$2d$color$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-stroke-color/esm/Utils.js [app-client] (ecmascript)");
;
;
class StrokeColorUpdater {
    constructor(container){
        this.container = container;
    }
    init(particle) {
        const container = this.container, options = particle.options;
        const stroke = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromSingleOrMultiple"])(options.stroke, particle.id, options.reduceDuplicates);
        particle.strokeWidth = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(stroke.width) * container.retina.pixelRatio;
        particle.strokeOpacity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(stroke.opacity ?? 1);
        particle.strokeAnimation = stroke.color?.animation;
        const strokeHslColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToHsl"])(stroke.color) ?? particle.getFillColor();
        if (strokeHslColor) {
            particle.strokeColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getHslAnimationFromHsl"])(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);
        }
    }
    isEnabled(particle) {
        const color = particle.strokeAnimation, { strokeColor } = particle;
        return !particle.destroyed && !particle.spawning && !!color && (strokeColor?.h.value !== undefined && strokeColor.h.enable || strokeColor?.s.value !== undefined && strokeColor.s.enable || strokeColor?.l.value !== undefined && strokeColor.l.enable);
    }
    update(particle, delta) {
        if (!this.isEnabled(particle)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$stroke$2d$color$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["updateStrokeColor"])(particle, delta);
    }
}
}}),
"[project]/node_modules/tsparticles-updater-stroke-color/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadStrokeColorUpdater": (()=>loadStrokeColorUpdater)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$stroke$2d$color$2f$esm$2f$StrokeColorUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js [app-client] (ecmascript)");
;
async function loadStrokeColorUpdater(engine, refresh = true) {
    await engine.addParticleUpdater("strokeColor", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$stroke$2d$color$2f$esm$2f$StrokeColorUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StrokeColorUpdater"](container), refresh);
}
}}),
"[project]/node_modules/tsparticles-move-base/esm/Utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "applyDistance": (()=>applyDistance),
    "applyPath": (()=>applyPath),
    "getProximitySpeedFactor": (()=>getProximitySpeedFactor),
    "move": (()=>move),
    "spin": (()=>spin)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
function applyDistance(particle) {
    const initialPosition = particle.initialPosition, { dx, dy } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;
    if (!hDistance && !vDistance) {
        return;
    }
    if ((hDistance && dxFixed >= hDistance || vDistance && dyFixed >= vDistance) && !particle.misplaced) {
        particle.misplaced = !!hDistance && dxFixed > hDistance || !!vDistance && dyFixed > vDistance;
        if (hDistance) {
            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;
        }
        if (vDistance) {
            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;
        }
    } else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {
        particle.misplaced = false;
    } else if (particle.misplaced) {
        const pos = particle.position, vel = particle.velocity;
        if (hDistance && (pos.x < initialPosition.x && vel.x < 0 || pos.x > initialPosition.x && vel.x > 0)) {
            vel.x *= -(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])();
        }
        if (vDistance && (pos.y < initialPosition.y && vel.y < 0 || pos.y > initialPosition.y && vel.y > 0)) {
            vel.y *= -(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])();
        }
    }
}
function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {
    applyPath(particle, delta);
    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -1 : 1;
    if (moveDrift && moveSpeed) {
        particle.velocity.x += moveDrift * delta.factor / (60 * moveSpeed);
    }
    if (gravityOptions?.enable && moveSpeed) {
        particle.velocity.y += gravityFactor * (gravityOptions.acceleration * delta.factor) / (60 * moveSpeed);
    }
    const decay = particle.moveDecay;
    particle.velocity.multTo(decay);
    const velocity = particle.velocity.mult(moveSpeed);
    if (gravityOptions?.enable && maxSpeed > 0 && (!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed || gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed)) {
        velocity.y = gravityFactor * maxSpeed;
        if (moveSpeed) {
            particle.velocity.y = velocity.y / moveSpeed;
        }
    }
    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;
    velocity.multTo(zVelocityFactor);
    const { position } = particle;
    position.addTo(velocity);
    if (moveOptions.vibrate) {
        position.x += Math.sin(position.x * Math.cos(position.y));
        position.y += Math.cos(position.y * Math.sin(position.x));
    }
}
function spin(particle, moveSpeed) {
    const container = particle.container;
    if (!particle.spin) {
        return;
    }
    const updateFunc = {
        x: particle.spin.direction === "clockwise" ? Math.cos : Math.sin,
        y: particle.spin.direction === "clockwise" ? Math.sin : Math.cos
    };
    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);
    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);
    particle.spin.radius += particle.spin.acceleration;
    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);
    if (particle.spin.radius > maxCanvasSize / 2) {
        particle.spin.radius = maxCanvasSize / 2;
        particle.spin.acceleration *= -1;
    } else if (particle.spin.radius < 0) {
        particle.spin.radius = 0;
        particle.spin.acceleration *= -1;
    }
    particle.spin.angle += moveSpeed / 100 * (1 - particle.spin.radius / maxCanvasSize);
}
function applyPath(particle, delta) {
    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;
    if (!pathEnabled) {
        return;
    }
    if (particle.lastPathTime <= particle.pathDelay) {
        particle.lastPathTime += delta.value;
        return;
    }
    const path = particle.pathGenerator?.generate(particle, delta);
    if (path) {
        particle.velocity.addTo(path);
    }
    if (pathOptions.clamp) {
        particle.velocity.x = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])(particle.velocity.x, -1, 1);
        particle.velocity.y = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])(particle.velocity.y, -1, 1);
    }
    particle.lastPathTime -= particle.pathDelay;
}
function getProximitySpeedFactor(particle) {
    return particle.slow.inRange ? particle.slow.factor : 1;
}
}}),
"[project]/node_modules/tsparticles-move-base/esm/BaseMover.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BaseMover": (()=>BaseMover)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-move-base/esm/Utils.js [app-client] (ecmascript)");
;
;
const diffFactor = 2;
class BaseMover {
    constructor(){
        this._initSpin = (particle)=>{
            const container = particle.container, options = particle.options, spinOptions = options.move.spin;
            if (!spinOptions.enable) {
                return;
            }
            const spinPos = spinOptions.position ?? {
                x: 50,
                y: 50
            }, spinCenter = {
                x: spinPos.x / 100 * container.canvas.size.width,
                y: spinPos.y / 100 * container.canvas.size.height
            }, pos = particle.getPosition(), distance = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(pos, spinCenter), spinAcceleration = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(spinOptions.acceleration);
            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;
            particle.spin = {
                center: spinCenter,
                direction: particle.velocity.x >= 0 ? "clockwise" : "counter-clockwise",
                angle: particle.velocity.angle,
                radius: distance,
                acceleration: particle.retina.spinAcceleration
            };
        };
    }
    init(particle) {
        const options = particle.options, gravityOptions = options.move.gravity;
        particle.gravity = {
            enable: gravityOptions.enable,
            acceleration: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(gravityOptions.acceleration),
            inverse: gravityOptions.inverse
        };
        this._initSpin(particle);
    }
    isEnabled(particle) {
        return !particle.destroyed && particle.options.move.enable;
    }
    move(particle, delta) {
        const particleOptions = particle.options, moveOptions = particleOptions.move;
        if (!moveOptions.enable) {
            return;
        }
        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getProximitySpeedFactor"])(particle), baseSpeed = (particle.retina.moveSpeed ??= (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(moveOptions.speed) * pxRatio) * container.retina.reduceFactor, moveDrift = particle.retina.moveDrift ??= (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(particle.options.move.drift) * pxRatio, maxSize = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeMax"])(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = baseSpeed * sizeFactor * slowFactor * (delta.factor || 1) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;
        if (moveOptions.spin.enable) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["spin"])(particle, moveSpeed);
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["move"])(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyDistance"])(particle);
    }
}
}}),
"[project]/node_modules/tsparticles-move-base/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadBaseMover": (()=>loadBaseMover)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$BaseMover$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-move-base/esm/BaseMover.js [app-client] (ecmascript)");
;
async function loadBaseMover(engine, refresh = true) {
    await engine.addMover("base", ()=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$BaseMover$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseMover"](), refresh);
}
}}),
"[project]/node_modules/tsparticles-shape-circle/esm/CircleDrawer.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "CircleDrawer": (()=>CircleDrawer)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
class CircleDrawer {
    draw(context, particle, radius) {
        if (!particle.circleRange) {
            particle.circleRange = {
                min: 0,
                max: Math.PI * 2
            };
        }
        const circleRange = particle.circleRange;
        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);
    }
    getSidesCount() {
        return 12;
    }
    particleInit(container, particle) {
        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {
            max: 360,
            min: 0
        };
        particle.circleRange = !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])(angle) ? {
            min: 0,
            max: angle * Math.PI / 180
        } : {
            min: angle.min * Math.PI / 180,
            max: angle.max * Math.PI / 180
        };
    }
}
}}),
"[project]/node_modules/tsparticles-shape-circle/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadCircleShape": (()=>loadCircleShape)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$circle$2f$esm$2f$CircleDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-circle/esm/CircleDrawer.js [app-client] (ecmascript)");
;
async function loadCircleShape(engine, refresh = true) {
    await engine.addShape("circle", new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$circle$2f$esm$2f$CircleDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CircleDrawer"](), refresh);
}
}}),
"[project]/node_modules/tsparticles-updater-color/esm/Utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "updateColor": (()=>updateColor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
function updateColorValue(delta, colorValue, valueAnimation, max, decrease) {
    if (!colorValue || !valueAnimation.enable || (colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0)) {
        return;
    }
    if (!colorValue.time) {
        colorValue.time = 0;
    }
    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {
        colorValue.time += delta.value;
    }
    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {
        return;
    }
    const offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;
    if (!decrease || colorValue.status === "increasing") {
        colorValue.value += velocity;
        if (colorValue.value > max) {
            if (!colorValue.loops) {
                colorValue.loops = 0;
            }
            colorValue.loops++;
            if (decrease) {
                colorValue.status = "decreasing";
                colorValue.value -= colorValue.value % max;
            }
        }
    } else {
        colorValue.value -= velocity;
        if (colorValue.value < 0) {
            if (!colorValue.loops) {
                colorValue.loops = 0;
            }
            colorValue.loops++;
            colorValue.status = "increasing";
            colorValue.value += colorValue.value;
        }
    }
    if (colorValue.velocity && decay !== 1) {
        colorValue.velocity *= decay;
    }
    if (colorValue.value > max) {
        colorValue.value %= max;
    }
}
function updateColor(particle, delta) {
    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;
    if (!color) {
        return;
    }
    const { h, s, l } = color;
    if (h) {
        updateColorValue(delta, h, hAnimation, 360, false);
    }
    if (s) {
        updateColorValue(delta, s, sAnimation, 100, true);
    }
    if (l) {
        updateColorValue(delta, l, lAnimation, 100, true);
    }
}
}}),
"[project]/node_modules/tsparticles-updater-color/esm/ColorUpdater.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ColorUpdater": (()=>ColorUpdater)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$color$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-color/esm/Utils.js [app-client] (ecmascript)");
;
;
class ColorUpdater {
    constructor(container){
        this.container = container;
    }
    init(particle) {
        const hslColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToHsl"])(particle.options.color, particle.id, particle.options.reduceDuplicates);
        if (hslColor) {
            particle.color = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getHslAnimationFromHsl"])(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);
        }
    }
    isEnabled(particle) {
        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;
        return !particle.destroyed && !particle.spawning && (color?.h.value !== undefined && hAnimation.enable || color?.s.value !== undefined && sAnimation.enable || color?.l.value !== undefined && lAnimation.enable);
    }
    update(particle, delta) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$color$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["updateColor"])(particle, delta);
    }
}
}}),
"[project]/node_modules/tsparticles-updater-color/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadColorUpdater": (()=>loadColorUpdater)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$color$2f$esm$2f$ColorUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-color/esm/ColorUpdater.js [app-client] (ecmascript)");
;
async function loadColorUpdater(engine, refresh = true) {
    await engine.addParticleUpdater("color", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$color$2f$esm$2f$ColorUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ColorUpdater"](container), refresh);
}
}}),
"[project]/node_modules/tsparticles-updater-opacity/esm/Utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "updateOpacity": (()=>updateOpacity)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
function checkDestroy(particle, value, minValue, maxValue) {
    switch(particle.options.opacity.animation.destroy){
        case "max":
            if (value >= maxValue) {
                particle.destroy();
            }
            break;
        case "min":
            if (value <= minValue) {
                particle.destroy();
            }
            break;
    }
}
function updateOpacity(particle, delta) {
    const data = particle.opacity;
    if (particle.destroyed || !data?.enable || (data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0)) {
        return;
    }
    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;
    if (!data.time) {
        data.time = 0;
    }
    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {
        data.time += delta.value;
    }
    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {
        return;
    }
    switch(data.status){
        case "increasing":
            if (data.value >= maxValue) {
                data.status = "decreasing";
                if (!data.loops) {
                    data.loops = 0;
                }
                data.loops++;
            } else {
                data.value += (data.velocity ?? 0) * delta.factor;
            }
            break;
        case "decreasing":
            if (data.value <= minValue) {
                data.status = "increasing";
                if (!data.loops) {
                    data.loops = 0;
                }
                data.loops++;
            } else {
                data.value -= (data.velocity ?? 0) * delta.factor;
            }
            break;
    }
    if (data.velocity && data.decay !== 1) {
        data.velocity *= decay;
    }
    checkDestroy(particle, data.value, minValue, maxValue);
    if (!particle.destroyed) {
        data.value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])(data.value, minValue, maxValue);
    }
}
}}),
"[project]/node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "OpacityUpdater": (()=>OpacityUpdater)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$opacity$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-opacity/esm/Utils.js [app-client] (ecmascript)");
;
;
class OpacityUpdater {
    constructor(container){
        this.container = container;
    }
    init(particle) {
        const opacityOptions = particle.options.opacity;
        particle.opacity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["initParticleNumericAnimationValue"])(opacityOptions, 1);
        const opacityAnimation = opacityOptions.animation;
        if (opacityAnimation.enable) {
            particle.opacity.velocity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(opacityAnimation.speed) / 100 * this.container.retina.reduceFactor;
            if (!opacityAnimation.sync) {
                particle.opacity.velocity *= (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])();
            }
        }
    }
    isEnabled(particle) {
        return !particle.destroyed && !particle.spawning && !!particle.opacity && particle.opacity.enable && ((particle.opacity.maxLoops ?? 0) <= 0 || (particle.opacity.maxLoops ?? 0) > 0 && (particle.opacity.loops ?? 0) < (particle.opacity.maxLoops ?? 0));
    }
    reset(particle) {
        if (particle.opacity) {
            particle.opacity.time = 0;
            particle.opacity.loops = 0;
        }
    }
    update(particle, delta) {
        if (!this.isEnabled(particle)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$opacity$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["updateOpacity"])(particle, delta);
    }
}
}}),
"[project]/node_modules/tsparticles-updater-opacity/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadOpacityUpdater": (()=>loadOpacityUpdater)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$opacity$2f$esm$2f$OpacityUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js [app-client] (ecmascript)");
;
async function loadOpacityUpdater(engine, refresh = true) {
    await engine.addParticleUpdater("opacity", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$opacity$2f$esm$2f$OpacityUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OpacityUpdater"](container), refresh);
}
}}),
"[project]/node_modules/tsparticles-updater-out-modes/esm/Utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "bounceHorizontal": (()=>bounceHorizontal),
    "bounceVertical": (()=>bounceVertical)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
function bounceHorizontal(data) {
    if (data.outMode !== "bounce" && data.outMode !== "bounce-horizontal" && data.outMode !== "bounceHorizontal" && data.outMode !== "split" || data.direction !== "left" && data.direction !== "right") {
        return;
    }
    if (data.bounds.right < 0 && data.direction === "left") {
        data.particle.position.x = data.size + data.offset.x;
    } else if (data.bounds.left > data.canvasSize.width && data.direction === "right") {
        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;
    }
    const velocity = data.particle.velocity.x;
    let bounced = false;
    if (data.direction === "right" && data.bounds.right >= data.canvasSize.width && velocity > 0 || data.direction === "left" && data.bounds.left <= 0 && velocity < 0) {
        const newVelocity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getValue"])(data.particle.options.bounce.horizontal);
        data.particle.velocity.x *= -newVelocity;
        bounced = true;
    }
    if (!bounced) {
        return;
    }
    const minPos = data.offset.x + data.size;
    if (data.bounds.right >= data.canvasSize.width && data.direction === "right") {
        data.particle.position.x = data.canvasSize.width - minPos;
    } else if (data.bounds.left <= 0 && data.direction === "left") {
        data.particle.position.x = minPos;
    }
    if (data.outMode === "split") {
        data.particle.destroy();
    }
}
function bounceVertical(data) {
    if (data.outMode !== "bounce" && data.outMode !== "bounce-vertical" && data.outMode !== "bounceVertical" && data.outMode !== "split" || data.direction !== "bottom" && data.direction !== "top") {
        return;
    }
    if (data.bounds.bottom < 0 && data.direction === "top") {
        data.particle.position.y = data.size + data.offset.y;
    } else if (data.bounds.top > data.canvasSize.height && data.direction === "bottom") {
        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;
    }
    const velocity = data.particle.velocity.y;
    let bounced = false;
    if (data.direction === "bottom" && data.bounds.bottom >= data.canvasSize.height && velocity > 0 || data.direction === "top" && data.bounds.top <= 0 && velocity < 0) {
        const newVelocity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getValue"])(data.particle.options.bounce.vertical);
        data.particle.velocity.y *= -newVelocity;
        bounced = true;
    }
    if (!bounced) {
        return;
    }
    const minPos = data.offset.y + data.size;
    if (data.bounds.bottom >= data.canvasSize.height && data.direction === "bottom") {
        data.particle.position.y = data.canvasSize.height - minPos;
    } else if (data.bounds.top <= 0 && data.direction === "top") {
        data.particle.position.y = minPos;
    }
    if (data.outMode === "split") {
        data.particle.destroy();
    }
}
}}),
"[project]/node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BounceOutMode": (()=>BounceOutMode)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-out-modes/esm/Utils.js [app-client] (ecmascript)");
;
;
class BounceOutMode {
    constructor(container){
        this.container = container;
        this.modes = [
            "bounce",
            "bounce-vertical",
            "bounce-horizontal",
            "bounceVertical",
            "bounceHorizontal",
            "split"
        ];
    }
    update(particle, direction, delta, outMode) {
        if (!this.modes.includes(outMode)) {
            return;
        }
        const container = this.container;
        let handled = false;
        for (const [, plugin] of container.plugins){
            if (plugin.particleBounce !== undefined) {
                handled = plugin.particleBounce(particle, delta, direction);
            }
            if (handled) {
                break;
            }
        }
        if (handled) {
            return;
        }
        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["calculateBounds"])(pos, size), canvasSize = container.canvas.size;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bounceHorizontal"])({
            particle,
            outMode,
            direction,
            bounds,
            canvasSize,
            offset,
            size
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bounceVertical"])({
            particle,
            outMode,
            direction,
            bounds,
            canvasSize,
            offset,
            size
        });
    }
}
}}),
"[project]/node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "DestroyOutMode": (()=>DestroyOutMode)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class DestroyOutMode {
    constructor(container){
        this.container = container;
        this.modes = [
            "destroy"
        ];
    }
    update(particle, direction, _delta, outMode) {
        if (!this.modes.includes(outMode)) {
            return;
        }
        const container = this.container;
        switch(particle.outType){
            case "normal":
            case "outside":
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPointInside"])(particle.position, container.canvas.size, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin, particle.getRadius(), direction)) {
                    return;
                }
                break;
            case "inside":
                {
                    const { dx, dy } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(particle.position, particle.moveCenter);
                    const { x: vx, y: vy } = particle.velocity;
                    if (vx < 0 && dx > particle.moveCenter.radius || vy < 0 && dy > particle.moveCenter.radius || vx >= 0 && dx < -particle.moveCenter.radius || vy >= 0 && dy < -particle.moveCenter.radius) {
                        return;
                    }
                    break;
                }
        }
        container.particles.remove(particle, undefined, true);
    }
}
}}),
"[project]/node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "OutOutMode": (()=>OutOutMode)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
class OutOutMode {
    constructor(container){
        this.container = container;
        this.modes = [
            "out"
        ];
    }
    update(particle, direction, delta, outMode) {
        if (!this.modes.includes(outMode)) {
            return;
        }
        const container = this.container;
        switch(particle.outType){
            case "inside":
                {
                    const { x: vx, y: vy } = particle.velocity;
                    const circVec = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin;
                    circVec.length = particle.moveCenter.radius;
                    circVec.angle = particle.velocity.angle + Math.PI;
                    circVec.addTo(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].create(particle.moveCenter));
                    const { dx, dy } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(particle.position, circVec);
                    if (vx <= 0 && dx >= 0 || vy <= 0 && dy >= 0 || vx >= 0 && dx <= 0 || vy >= 0 && dy <= 0) {
                        return;
                    }
                    particle.position.x = Math.floor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])({
                        min: 0,
                        max: container.canvas.size.width
                    }));
                    particle.position.y = Math.floor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])({
                        min: 0,
                        max: container.canvas.size.height
                    }));
                    const { dx: newDx, dy: newDy } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(particle.position, particle.moveCenter);
                    particle.direction = Math.atan2(-newDy, -newDx);
                    particle.velocity.angle = particle.direction;
                    break;
                }
            default:
                {
                    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPointInside"])(particle.position, container.canvas.size, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin, particle.getRadius(), direction)) {
                        return;
                    }
                    switch(particle.outType){
                        case "outside":
                            {
                                particle.position.x = Math.floor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])({
                                    min: -particle.moveCenter.radius,
                                    max: particle.moveCenter.radius
                                })) + particle.moveCenter.x;
                                particle.position.y = Math.floor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])({
                                    min: -particle.moveCenter.radius,
                                    max: particle.moveCenter.radius
                                })) + particle.moveCenter.y;
                                const { dx, dy } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(particle.position, particle.moveCenter);
                                if (particle.moveCenter.radius) {
                                    particle.direction = Math.atan2(dy, dx);
                                    particle.velocity.angle = particle.direction;
                                }
                                break;
                            }
                        case "normal":
                            {
                                const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {
                                    bottom: canvasSize.height + particle.getRadius() + particle.offset.y,
                                    left: -particle.getRadius() - particle.offset.x,
                                    right: canvasSize.width + particle.getRadius() + particle.offset.x,
                                    top: -particle.getRadius() - particle.offset.y
                                }, sizeValue = particle.getRadius(), nextBounds = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["calculateBounds"])(particle.position, sizeValue);
                                if (direction === "right" && nextBounds.left > canvasSize.width + particle.offset.x) {
                                    particle.position.x = newPos.left;
                                    particle.initialPosition.x = particle.position.x;
                                    if (!wrap) {
                                        particle.position.y = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * canvasSize.height;
                                        particle.initialPosition.y = particle.position.y;
                                    }
                                } else if (direction === "left" && nextBounds.right < -particle.offset.x) {
                                    particle.position.x = newPos.right;
                                    particle.initialPosition.x = particle.position.x;
                                    if (!wrap) {
                                        particle.position.y = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * canvasSize.height;
                                        particle.initialPosition.y = particle.position.y;
                                    }
                                }
                                if (direction === "bottom" && nextBounds.top > canvasSize.height + particle.offset.y) {
                                    if (!wrap) {
                                        particle.position.x = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * canvasSize.width;
                                        particle.initialPosition.x = particle.position.x;
                                    }
                                    particle.position.y = newPos.top;
                                    particle.initialPosition.y = particle.position.y;
                                } else if (direction === "top" && nextBounds.bottom < -particle.offset.y) {
                                    if (!wrap) {
                                        particle.position.x = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * canvasSize.width;
                                        particle.initialPosition.x = particle.position.x;
                                    }
                                    particle.position.y = newPos.bottom;
                                    particle.initialPosition.y = particle.position.y;
                                }
                                break;
                            }
                    }
                    break;
                }
        }
    }
}
}}),
"[project]/node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "NoneOutMode": (()=>NoneOutMode)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)");
;
class NoneOutMode {
    constructor(container){
        this.container = container;
        this.modes = [
            "none"
        ];
    }
    update(particle, direction, delta, outMode) {
        if (!this.modes.includes(outMode)) {
            return;
        }
        if (particle.options.move.distance.horizontal && (direction === "left" || direction === "right") || particle.options.move.distance.vertical && (direction === "top" || direction === "bottom")) {
            return;
        }
        const gravityOptions = particle.options.move.gravity, container = this.container;
        const canvasSize = container.canvas.size;
        const pRadius = particle.getRadius();
        if (!gravityOptions.enable) {
            if (particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius || particle.velocity.y < 0 && particle.position.y >= -pRadius || particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius || particle.velocity.x < 0 && particle.position.x >= -pRadius) {
                return;
            }
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPointInside"])(particle.position, container.canvas.size, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin, pRadius, direction)) {
                container.particles.remove(particle);
            }
        } else {
            const position = particle.position;
            if (!gravityOptions.inverse && position.y > canvasSize.height + pRadius && direction === "bottom" || gravityOptions.inverse && position.y < -pRadius && direction === "top") {
                container.particles.remove(particle);
            }
        }
    }
}
}}),
"[project]/node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "OutOfCanvasUpdater": (()=>OutOfCanvasUpdater)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$BounceOutMode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$DestroyOutMode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$OutOutMode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$NoneOutMode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js [app-client] (ecmascript)");
;
;
;
;
class OutOfCanvasUpdater {
    constructor(container){
        this.container = container;
        this._updateOutMode = (particle, delta, outMode, direction)=>{
            for (const updater of this.updaters){
                updater.update(particle, direction, delta, outMode);
            }
        };
        this.updaters = [
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$BounceOutMode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BounceOutMode"](container),
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$DestroyOutMode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DestroyOutMode"](container),
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$OutOutMode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OutOutMode"](container),
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$NoneOutMode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["NoneOutMode"](container)
        ];
    }
    init() {}
    isEnabled(particle) {
        return !particle.destroyed && !particle.spawning;
    }
    update(particle, delta) {
        const outModes = particle.options.move.outModes;
        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, "bottom");
        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, "left");
        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, "right");
        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, "top");
    }
}
}}),
"[project]/node_modules/tsparticles-updater-out-modes/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadOutModesUpdater": (()=>loadOutModesUpdater)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$OutOfCanvasUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js [app-client] (ecmascript)");
;
async function loadOutModesUpdater(engine, refresh = true) {
    await engine.addParticleUpdater("outModes", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$OutOfCanvasUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OutOfCanvasUpdater"](container), refresh);
}
}}),
"[project]/node_modules/tsparticles-updater-size/esm/Utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "updateSize": (()=>updateSize)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
function checkDestroy(particle, value, minValue, maxValue) {
    switch(particle.options.size.animation.destroy){
        case "max":
            if (value >= maxValue) {
                particle.destroy();
            }
            break;
        case "min":
            if (value <= minValue) {
                particle.destroy();
            }
            break;
    }
}
function updateSize(particle, delta) {
    const data = particle.size;
    if (particle.destroyed || !data || !data.enable || (data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0)) {
        return;
    }
    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;
    if (!data.time) {
        data.time = 0;
    }
    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {
        data.time += delta.value;
    }
    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {
        return;
    }
    switch(data.status){
        case "increasing":
            if (data.value >= maxValue) {
                data.status = "decreasing";
                if (!data.loops) {
                    data.loops = 0;
                }
                data.loops++;
            } else {
                data.value += sizeVelocity;
            }
            break;
        case "decreasing":
            if (data.value <= minValue) {
                data.status = "increasing";
                if (!data.loops) {
                    data.loops = 0;
                }
                data.loops++;
            } else {
                data.value -= sizeVelocity;
            }
    }
    if (data.velocity && decay !== 1) {
        data.velocity *= decay;
    }
    checkDestroy(particle, data.value, minValue, maxValue);
    if (!particle.destroyed) {
        data.value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])(data.value, minValue, maxValue);
    }
}
}}),
"[project]/node_modules/tsparticles-updater-size/esm/SizeUpdater.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SizeUpdater": (()=>SizeUpdater)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$size$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-size/esm/Utils.js [app-client] (ecmascript)");
;
;
class SizeUpdater {
    init(particle) {
        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;
        if (sizeAnimation.enable) {
            particle.size.velocity = (particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100 * container.retina.reduceFactor;
            if (!sizeAnimation.sync) {
                particle.size.velocity *= (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])();
            }
        }
    }
    isEnabled(particle) {
        return !particle.destroyed && !particle.spawning && particle.size.enable && ((particle.size.maxLoops ?? 0) <= 0 || (particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0));
    }
    reset(particle) {
        particle.size.loops = 0;
    }
    update(particle, delta) {
        if (!this.isEnabled(particle)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$size$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["updateSize"])(particle, delta);
    }
}
}}),
"[project]/node_modules/tsparticles-updater-size/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadSizeUpdater": (()=>loadSizeUpdater)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$size$2f$esm$2f$SizeUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-size/esm/SizeUpdater.js [app-client] (ecmascript)");
;
async function loadSizeUpdater(engine, refresh = true) {
    await engine.addParticleUpdater("size", ()=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$size$2f$esm$2f$SizeUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SizeUpdater"](), refresh);
}
}}),
"[project]/node_modules/tsparticles-basic/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadBasic": (()=>loadBasic)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-move-base/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$circle$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-circle/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$color$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-color/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$opacity$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-opacity/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-out-modes/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$size$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-size/esm/index.js [app-client] (ecmascript)");
;
;
;
;
;
;
async function loadBasic(engine, refresh = true) {
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadBaseMover"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$circle$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadCircleShape"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$color$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadColorUpdater"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$opacity$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadOpacityUpdater"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadOutModesUpdater"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$size$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadSizeUpdater"])(engine, false);
    await engine.refresh(refresh);
}
}}),
"[project]/node_modules/tsparticles-slim/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "loadSlim": (()=>loadSlim)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$particles$2e$js$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-particles.js/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$parallax$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-move-parallax/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$attract$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-attract/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bounce$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-bounce/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-bubble/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-connect/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-grab/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$pause$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-pause/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$push$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-push/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$remove$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-remove/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-repulse/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$slow$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-external-slow/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$attract$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-attract/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-collisions/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/tsparticles-interaction-particles-links/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$easing$2d$quad$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-plugin-easing-quad/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-image/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$line$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-line/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-polygon/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$square$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-square/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$star$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-star/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$text$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-shape-text/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-life/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$rotate$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-rotate/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$stroke$2d$color$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-updater-stroke-color/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$basic$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/tsparticles-basic/esm/index.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
async function loadSlim(engine, refresh = true) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$particles$2e$js$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["initPjs"])(engine);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$parallax$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadParallaxMover"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$attract$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalAttractInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bounce$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalBounceInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalBubbleInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalConnectInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalGrabInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$pause$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadExternalPauseInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$push$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalPushInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$remove$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalRemoveInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalRepulseInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$slow$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalSlowInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$attract$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadParticlesAttractInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadParticlesCollisionsInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadParticlesLinksInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$easing$2d$quad$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadEasingQuadPlugin"])();
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadImageShape"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$line$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadLineShape"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadPolygonShape"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$square$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadSquareShape"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$star$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadStarShape"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$text$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadTextShape"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadLifeUpdater"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$rotate$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadRotateUpdater"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$stroke$2d$color$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadStrokeColorUpdater"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$basic$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadBasic"])(engine, refresh);
}
}}),
}]);

//# sourceMappingURL=node_modules_eda96d._.js.map